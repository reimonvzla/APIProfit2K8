using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.Extensions.Configuration;

namespace APIProfit2K8.Models
{
    public partial class ProfitAdmin2K8 : DbContext
    {
        public ProfitAdmin2K8()
        {
        }

        public ProfitAdmin2K8(DbContextOptions<ProfitAdmin2K8> options)
            : base(options)
        {
        }

        #region Modelos
        public virtual DbSet<Ajuste> Ajuste { get; set; }
        public virtual DbSet<Almacen> Almacen { get; set; }
        public virtual DbSet<Almacenes> Almacenes { get; set; }
        public virtual DbSet<Ambaju> Ambaju { get; set; }
        public virtual DbSet<Ambart> Ambart { get; set; }
        public virtual DbSet<Ambcierre> Ambcierre { get; set; }
        public virtual DbSet<Ambclpro> Ambclpro { get; set; }
        public virtual DbSet<Ambdev> Ambdev { get; set; }
        public virtual DbSet<Ambemp> Ambemp { get; set; }
        public virtual DbSet<Ambentre> Ambentre { get; set; }
        public virtual DbSet<Amblcobr> Amblcobr { get; set; }
        public virtual DbSet<Amblfact> Amblfact { get; set; }
        public virtual DbSet<Ambmov> Ambmov { get; set; }
        public virtual DbSet<Ambodp> Ambodp { get; set; }
        public virtual DbSet<Ambordpa> Ambordpa { get; set; }
        public virtual DbSet<Ambpar> Ambpar { get; set; }
        public virtual DbSet<Ambreq> Ambreq { get; set; }
        public virtual DbSet<Ambtras> Ambtras { get; set; }
        public virtual DbSet<Aranc> Aranc { get; set; }
        public virtual DbSet<Art> Art { get; set; }
        public virtual DbSet<ArtExt> ArtExt { get; set; }
        public virtual DbSet<ArtMargenGanancias> ArtMargenGanancias { get; set; }
        public virtual DbSet<Auxiliar> Auxiliar { get; set; }
        public virtual DbSet<Bancos> Bancos { get; set; }
        public virtual DbSet<Benefici> Benefici { get; set; }
        public virtual DbSet<Cajas> Cajas { get; set; }
        public virtual DbSet<CatArt> CatArt { get; set; }
        public virtual DbSet<Chequeras> Chequeras { get; set; }
        public virtual DbSet<Cheques> Cheques { get; set; }
        public virtual DbSet<Clientes> Clientes { get; set; }
        public virtual DbSet<CobRengpago> CobRengpago { get; set; }
        public virtual DbSet<CobTmp> CobTmp { get; set; }
        public virtual DbSet<Cobpvta> Cobpvta { get; set; }
        public virtual DbSet<Cobros> Cobros { get; set; }
        public virtual DbSet<Colores> Colores { get; set; }
        public virtual DbSet<ComiPre> ComiPre { get; set; }
        public virtual DbSet<CompDevo> CompDevo { get; set; }
        public virtual DbSet<CompReng> CompReng { get; set; }
        public virtual DbSet<Compras> Compras { get; set; }
        public virtual DbSet<ConIslr> ConIslr { get; set; }
        public virtual DbSet<ConcAut> ConcAut { get; set; }
        public virtual DbSet<ConcBan> ConcBan { get; set; }
        public virtual DbSet<Condicio> Condicio { get; set; }
        public virtual DbSet<ConvImp> ConvImp { get; set; }
        public virtual DbSet<CostImp> CostImp { get; set; }
        public virtual DbSet<CoticliReng> CoticliReng { get; set; }
        public virtual DbSet<CotiproReng> CotiproReng { get; set; }
        public virtual DbSet<CotizC> CotizC { get; set; }
        public virtual DbSet<CotizP> CotizP { get; set; }
        public virtual DbSet<CredFis> CredFis { get; set; }
        public virtual DbSet<CtaIngr> CtaIngr { get; set; }
        public virtual DbSet<Cuentas> Cuentas { get; set; }
        public virtual DbSet<DepCaj> DepCaj { get; set; }
        public virtual DbSet<Descuen> Descuen { get; set; }
        public virtual DbSet<DevCli> DevCli { get; set; }
        public virtual DbSet<DevPro> DevPro { get; set; }
        public virtual DbSet<DevcliReng> DevcliReng { get; set; }
        public virtual DbSet<DevproReng> DevproReng { get; set; }
        public virtual DbSet<Dmc> Dmc { get; set; }
        public virtual DbSet<DocumCc> DocumCc { get; set; }
        public virtual DbSet<DocumCp> DocumCp { get; set; }
        public virtual DbSet<Dppago> Dppago { get; set; }
        public virtual DbSet<Empaques> Empaques { get; set; }
        public virtual DbSet<ExpImp> ExpImp { get; set; }
        public virtual DbSet<FactDevo> FactDevo { get; set; }
        public virtual DbSet<FactReng> FactReng { get; set; }
        public virtual DbSet<Factura> Factura { get; set; }
        public virtual DbSet<Fallas> Fallas { get; set; }
        public virtual DbSet<Fisico> Fisico { get; set; }
        public virtual DbSet<Formatos> Formatos { get; set; }
        public virtual DbSet<GeneKit> GeneKit { get; set; }
        public virtual DbSet<HistPlan> HistPlan { get; set; }
        public virtual DbSet<ImpMun> ImpMun { get; set; }
        public virtual DbSet<Import> Import { get; set; }
        public virtual DbSet<Importac> Importac { get; set; }
        public virtual DbSet<InfDmc> InfDmc { get; set; }
        public virtual DbSet<Kit> Kit { get; set; }
        public virtual DbSet<LinArt> LinArt { get; set; }
        public virtual DbSet<Lote> Lote { get; set; }
        public virtual DbSet<ManLic> ManLic { get; set; }
        public virtual DbSet<Moneda> Moneda { get; set; }
        public virtual DbSet<MovBan> MovBan { get; set; }
        public virtual DbSet<MovCaj> MovCaj { get; set; }
        public virtual DbSet<NdeReng> NdeReng { get; set; }
        public virtual DbSet<NdrReng> NdrReng { get; set; }
        public virtual DbSet<NotDep> NotDep { get; set; }
        public virtual DbSet<NotEnt> NotEnt { get; set; }
        public virtual DbSet<NotRec> NotRec { get; set; }
        public virtual DbSet<OrdPago> OrdPago { get; set; }
        public virtual DbSet<OrdeReng> OrdeReng { get; set; }
        public virtual DbSet<Ordenes> Ordenes { get; set; }
        public virtual DbSet<PagoRengpago> PagoRengpago { get; set; }
        public virtual DbSet<Pagos> Pagos { get; set; }
        public virtual DbSet<Paises> Paises { get; set; }
        public virtual DbSet<ParConc> ParConc { get; set; }
        public virtual DbSet<ParEmp> ParEmp { get; set; }
        public virtual DbSet<ParWeb> ParWeb { get; set; }
        public virtual DbSet<PedReng> PedReng { get; set; }
        public virtual DbSet<Pedidos> Pedidos { get; set; }
        public virtual DbSet<Pistas> Pistas { get; set; }
        public virtual DbSet<Placom> Placom { get; set; }
        public virtual DbSet<PlanFis> PlanFis { get; set; }
        public virtual DbSet<Plavent> Plavent { get; set; }
        public virtual DbSet<Proceden> Proceden { get; set; }
        public virtual DbSet<Prov> Prov { get; set; }
        public virtual DbSet<Pventa> Pventa { get; set; }
        public virtual DbSet<RImpCo> RImpCo { get; set; }
        public virtual DbSet<Recosteo> Recosteo { get; set; }
        public virtual DbSet<RengAce> RengAce { get; set; }
        public virtual DbSet<RengAco> RengAco { get; set; }
        public virtual DbSet<RengAim> RengAim { get; set; }
        public virtual DbSet<RengAju> RengAju { get; set; }
        public virtual DbSet<RengAra> RengAra { get; set; }
        public virtual DbSet<RengArt> RengArt { get; set; }
        public virtual DbSet<RengAtb> RengAtb { get; set; }
        public virtual DbSet<RengAtc> RengAtc { get; set; }
        public virtual DbSet<RengCac> RengCac { get; set; }
        public virtual DbSet<RengCdp> RengCdp { get; set; }
        public virtual DbSet<RengCie> RengCie { get; set; }
        public virtual DbSet<RengCob> RengCob { get; set; }
        public virtual DbSet<RengCom> RengCom { get; set; }
        public virtual DbSet<RengCon> RengCon { get; set; }
        public virtual DbSet<RengCos> RengCos { get; set; }
        public virtual DbSet<RengDcc> RengDcc { get; set; }
        public virtual DbSet<RengDcp> RengDcp { get; set; }
        public virtual DbSet<RengDev> RengDev { get; set; }
        public virtual DbSet<RengDmc> RengDmc { get; set; }
        public virtual DbSet<RengDoc> RengDoc { get; set; }
        public virtual DbSet<RengDp> RengDp { get; set; }
        public virtual DbSet<RengDvc> RengDvc { get; set; }
        public virtual DbSet<RengDvp> RengDvp { get; set; }
        public virtual DbSet<RengEce> RengEce { get; set; }
        public virtual DbSet<RengEmb> RengEmb { get; set; }
        public virtual DbSet<RengEmp> RengEmp { get; set; }
        public virtual DbSet<RengEnc> RengEnc { get; set; }
        public virtual DbSet<RengEnp> RengEnp { get; set; }
        public virtual DbSet<RengEnt> RengEnt { get; set; }
        public virtual DbSet<RengEsc> RengEsc { get; set; }
        public virtual DbSet<RengExp> RengExp { get; set; }
        public virtual DbSet<RengExp2> RengExp2 { get; set; }
        public virtual DbSet<RengFac> RengFac { get; set; }
        public virtual DbSet<RengFai> RengFai { get; set; }
        public virtual DbSet<RengFci> RengFci { get; set; }
        public virtual DbSet<RengFis> RengFis { get; set; }
        public virtual DbSet<RengGce> RengGce { get; set; }
        public virtual DbSet<RengGen> RengGen { get; set; }
        public virtual DbSet<RengImp> RengImp { get; set; }
        public virtual DbSet<RengIsl> RengIsl { get; set; }
        public virtual DbSet<RengKit> RengKit { get; set; }
        public virtual DbSet<RengMce> RengMce { get; set; }
        public virtual DbSet<RengMen> RengMen { get; set; }
        public virtual DbSet<RengNdd> RengNdd { get; set; }
        public virtual DbSet<RengNde> RengNde { get; set; }
        public virtual DbSet<RengNdr> RengNdr { get; set; }
        public virtual DbSet<RengOdp> RengOdp { get; set; }
        public virtual DbSet<RengOpg> RengOpg { get; set; }
        public virtual DbSet<RengOrd> RengOrd { get; set; }
        public virtual DbSet<RengPag> RengPag { get; set; }
        public virtual DbSet<RengPed> RengPed { get; set; }
        public virtual DbSet<RengPla> RengPla { get; set; }
        public virtual DbSet<RengPlc> RengPlc { get; set; }
        public virtual DbSet<RengPlv> RengPlv { get; set; }
        public virtual DbSet<RengPve> RengPve { get; set; }
        public virtual DbSet<RengReq> RengReq { get; set; }
        public virtual DbSet<RengRes> RengRes { get; set; }
        public virtual DbSet<RengRmc> RengRmc { get; set; }
        public virtual DbSet<RengRmp> RengRmp { get; set; }
        public virtual DbSet<RengTab> RengTab { get; set; }
        public virtual DbSet<RengTar> RengTar { get; set; }
        public virtual DbSet<RengTax> RengTax { get; set; }
        public virtual DbSet<RengTcp> RengTcp { get; set; }
        public virtual DbSet<RengTip> RengTip { get; set; }
        public virtual DbSet<RengTra> RengTra { get; set; }
        public virtual DbSet<Rentab> Rentab { get; set; }
        public virtual DbSet<Reportes> Reportes { get; set; }
        public virtual DbSet<RmaAmb> RmaAmb { get; set; }
        public virtual DbSet<RmaCli> RmaCli { get; set; }
        public virtual DbSet<RmaEntc> RmaEntc { get; set; }
        public virtual DbSet<RmaEntp> RmaEntp { get; set; }
        public virtual DbSet<RmaProv> RmaProv { get; set; }
        public virtual DbSet<RmaReem> RmaReem { get; set; }
        public virtual DbSet<RmaReep> RmaReep { get; set; }
        public virtual DbSet<RmaRes> RmaRes { get; set; }
        public virtual DbSet<RmaRevi> RmaRevi { get; set; }
        public virtual DbSet<Segmento> Segmento { get; set; }
        public virtual DbSet<SerRma> SerRma { get; set; }
        public virtual DbSet<Seriales> Seriales { get; set; }
        public virtual DbSet<Spatriv> Spatriv { get; set; }
        public virtual DbSet<Spced> Spced { get; set; }
        public virtual DbSet<Spcierre> Spcierre { get; set; }
        public virtual DbSet<Spcostest> Spcostest { get; set; }
        public virtual DbSet<Spdevalm> Spdevalm { get; set; }
        public virtual DbSet<Spemple> Spemple { get; set; }
        public virtual DbSet<Spentre> Spentre { get; set; }
        public virtual DbSet<Spescena> Spescena { get; set; }
        public virtual DbSet<Spexplosion> Spexplosion { get; set; }
        public virtual DbSet<Spfalla> Spfalla { get; set; }
        public virtual DbSet<Spgasfab> Spgasfab { get; set; }
        public virtual DbSet<Spimplosion> Spimplosion { get; set; }
        public virtual DbSet<Spmaq> Spmaq { get; set; }
        public virtual DbSet<Spmenenc> Spmenenc { get; set; }
        public virtual DbSet<Spmensual> Spmensual { get; set; }
        public virtual DbSet<Spodp> Spodp { get; set; }
        public virtual DbSet<Spparmaq> Spparmaq { get; set; }
        public virtual DbSet<Spplan> Spplan { get; set; }
        public virtual DbSet<Spplanenc> Spplanenc { get; set; }
        public virtual DbSet<Spreqalm> Spreqalm { get; set; }
        public virtual DbSet<Sptar> Sptar { get; set; }
        public virtual DbSet<StAlmac> StAlmac { get; set; }
        public virtual DbSet<StLote> StLote { get; set; }
        public virtual DbSet<SubAlma> SubAlma { get; set; }
        public virtual DbSet<SubLin> SubLin { get; set; }
        public virtual DbSet<Sucursales> Sucursales { get; set; }
        public virtual DbSet<Syncro> Syncro { get; set; }
        public virtual DbSet<TabEnc> TabEnc { get; set; }
        public virtual DbSet<TabIslr> TabIslr { get; set; }
        public virtual DbSet<Tabulado> Tabulado { get; set; }
        public virtual DbSet<TarjCre> TarjCre { get; set; }
        public virtual DbSet<Tasas> Tasas { get; set; }
        public virtual DbSet<Tax> Tax { get; set; }
        public virtual DbSet<TaxEnc> TaxEnc { get; set; }
        public virtual DbSet<Tecnico> Tecnico { get; set; }
        public virtual DbSet<Temporal> Temporal { get; set; }
        public virtual DbSet<TipoAju> TipoAju { get; set; }
        public virtual DbSet<TipoCli> TipoCli { get; set; }
        public virtual DbSet<TipoPro> TipoPro { get; set; }
        public virtual DbSet<Transpor> Transpor { get; set; }
        public virtual DbSet<TrasAlm> TrasAlm { get; set; }
        public virtual DbSet<Turnos> Turnos { get; set; }
        public virtual DbSet<Turnosic> Turnosic { get; set; }
        public virtual DbSet<UniTrib> UniTrib { get; set; }
        public virtual DbSet<Unidades> Unidades { get; set; }
        public virtual DbSet<Vendedor> Vendedor { get; set; }
        public virtual DbSet<Zona> Zona { get; set; }
        #endregion

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            /*Conexion SQL Server dentro del appsetting.json*/
            /*Microsoft.Extensions.Configuration.Json desde Nuget*/
            /*R.M.: 18/09/2020*/
            Microsoft.Extensions.Configuration.IConfigurationRoot configuration = new ConfigurationBuilder()
                .SetBasePath(AppDomain.CurrentDomain.BaseDirectory)
                .AddJsonFile("appsettings.json")
                .Build();
                
            if (!optionsBuilder.IsConfigured)
            {
                //#warning To protect potentially sensitive information in your connection string, you should move it out of source code. See http://go.microsoft.com/fwlink/?LinkId=723263 for guidance on storing connection strings.
                //optionsBuilder.UseSqlServer($@"Server=DESKTOP-9RKQG9O;Database=demo;User Id=profit;Password=profit;");
                optionsBuilder.UseSqlServer(configuration.GetConnectionString("ProfitAdmin2K8"));
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Ajuste>(entity =>
            {
                entity.HasKey(e => e.AjueNum)
                    .HasName("ajuste_aju_num");

                entity.ToTable("ajuste");

                entity.HasIndex(e => e.Fecha)
                    .HasName("ifecha");

                entity.HasIndex(e => e.Moneda)
                    .HasName("imoneda");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_835534060")
                    .IsUnique();

                entity.HasIndex(e => new { e.Feccom, e.Numcom })
                    .HasName("ifeccom_numcom");

                entity.Property(e => e.AjueNum)
                    .HasColumnName("ajue_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Anulada).HasColumnName("anulada");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("('01/01/1900')");

                entity.Property(e => e.Fecha)
                    .HasColumnName("fecha")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.ImpNum).HasColumnName("imp_num");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Motivo)
                    .IsRequired()
                    .HasColumnName("motivo")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.Produccion).HasColumnName("produccion");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Seriales).HasColumnName("seriales");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Total)
                    .HasColumnName("total")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoSucuNavigation)
                    .WithMany(p => p.Ajuste)
                    .HasForeignKey(d => d.CoSucu)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ajuste_almacen");

                entity.HasOne(d => d.MonedaNavigation)
                    .WithMany(p => p.Ajuste)
                    .HasForeignKey(d => d.Moneda)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ajuste_moneda");
            });

            modelBuilder.Entity<Almacen>(entity =>
            {
                entity.HasKey(e => e.CoAlma)
                    .HasName("almacen_co_alma");

                entity.ToTable("almacen");

                entity.HasIndex(e => e.AlmaDes)
                    .HasName("ialma_des");

                entity.HasIndex(e => e.CoAlma)
                    .HasName("ico_alma");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_2083538506")
                    .IsUnique();

                entity.Property(e => e.CoAlma)
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AjuNega).HasColumnName("aju_nega");

                entity.Property(e => e.AjuNegac).HasColumnName("aju_negac");

                entity.Property(e => e.AjuNegm).HasColumnName("aju_negm");

                entity.Property(e => e.AjuNegmc).HasColumnName("aju_negmc");

                entity.Property(e => e.AjuPosa).HasColumnName("aju_posa");

                entity.Property(e => e.AjuPosac).HasColumnName("aju_posac");

                entity.Property(e => e.AjuPosm).HasColumnName("aju_posm");

                entity.Property(e => e.AjuPosmc).HasColumnName("aju_posmc");

                entity.Property(e => e.AjusNum).HasColumnName("ajus_num");

                entity.Property(e => e.AlmaDes)
                    .IsRequired()
                    .HasColumnName("alma_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CbNum).HasColumnName("cb_num");

                entity.Property(e => e.CcxgNum).HasColumnName("ccxg_num");

                entity.Property(e => e.CedNum).HasColumnName("ced_num");

                entity.Property(e => e.CfxgNum).HasColumnName("cfxg_num");

                entity.Property(e => e.ChdvNum).HasColumnName("chdv_num");

                entity.Property(e => e.Chdvcppnum).HasColumnName("chdvcppnum");

                entity.Property(e => e.CieNum).HasColumnName("cie_num");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CompNum).HasColumnName("comp_num");

                entity.Property(e => e.CostNum).HasColumnName("cost_num");

                entity.Property(e => e.CotcNum).HasColumnName("cotc_num");

                entity.Property(e => e.CotpNum).HasColumnName("cotp_num");

                entity.Property(e => e.DepcNum).HasColumnName("depc_num");

                entity.Property(e => e.DevNum).HasColumnName("dev_num");

                entity.Property(e => e.DevcNum).HasColumnName("devc_num");

                entity.Property(e => e.DevpNum).HasColumnName("devp_num");

                entity.Property(e => e.DistNum).HasColumnName("dist_num");

                entity.Property(e => e.DmcNum).HasColumnName("dmc_num");

                entity.Property(e => e.EmpNum).HasColumnName("emp_num");

                entity.Property(e => e.EntNum).HasColumnName("ent_num");

                entity.Property(e => e.EscNum).HasColumnName("esc_num");

                entity.Property(e => e.ExpNum).HasColumnName("exp_num");

                entity.Property(e => e.ExpNumi).HasColumnName("exp_numi");

                entity.Property(e => e.FactF1).HasColumnName("fact_f1");

                entity.Property(e => e.FactF2).HasColumnName("fact_f2");

                entity.Property(e => e.FactF3).HasColumnName("fact_f3");

                entity.Property(e => e.FactF4).HasColumnName("fact_f4");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.FactNum2).HasColumnName("fact_num2");

                entity.Property(e => e.FactNum3).HasColumnName("fact_num3");

                entity.Property(e => e.FactNum4).HasColumnName("fact_num4");

                entity.Property(e => e.FactNum5).HasColumnName("fact_num5");

                entity.Property(e => e.FactP1)
                    .HasColumnName("fact_p1")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.FactP2)
                    .HasColumnName("fact_p2")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.FactP3)
                    .HasColumnName("fact_p3")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.FactP4)
                    .HasColumnName("fact_p4")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.FactP5)
                    .HasColumnName("fact_p5")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.FactS1)
                    .IsRequired()
                    .HasColumnName("fact_s1")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FactS2)
                    .IsRequired()
                    .HasColumnName("fact_s2")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FactS3)
                    .IsRequired()
                    .HasColumnName("fact_s3")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FactS4)
                    .IsRequired()
                    .HasColumnName("fact_s4")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FactS5)
                    .IsRequired()
                    .HasColumnName("fact_s5")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FisiNum).HasColumnName("fisi_num");

                entity.Property(e => e.GenkNum).HasColumnName("genk_num");

                entity.Property(e => e.GiroNum).HasColumnName("giro_num");

                entity.Property(e => e.Girocppnum).HasColumnName("girocppnum");

                entity.Property(e => e.ImpNum).HasColumnName("imp_num");

                entity.Property(e => e.InpNum).HasColumnName("inp_num");

                entity.Property(e => e.MenNum).HasColumnName("men_num");

                entity.Property(e => e.MovbNum).HasColumnName("movb_num");

                entity.Property(e => e.MovcNum).HasColumnName("movc_num");

                entity.Property(e => e.NcF1).HasColumnName("nc_f1");

                entity.Property(e => e.NcF2).HasColumnName("nc_f2");

                entity.Property(e => e.NcF3).HasColumnName("nc_f3");

                entity.Property(e => e.NcF4).HasColumnName("nc_f4");

                entity.Property(e => e.NcNum).HasColumnName("nc_num");

                entity.Property(e => e.NcNum2).HasColumnName("nc_num2");

                entity.Property(e => e.NcNum3).HasColumnName("nc_num3");

                entity.Property(e => e.NcNum4).HasColumnName("nc_num4");

                entity.Property(e => e.NcNum5).HasColumnName("nc_num5");

                entity.Property(e => e.NcP1)
                    .HasColumnName("nc_p1")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.NcP2)
                    .HasColumnName("nc_p2")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.NcP3)
                    .HasColumnName("nc_p3")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.NcP4)
                    .HasColumnName("nc_p4")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.NcP5)
                    .HasColumnName("nc_p5")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.NcS1)
                    .IsRequired()
                    .HasColumnName("nc_s1")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NcS2)
                    .IsRequired()
                    .HasColumnName("nc_s2")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NcS3)
                    .IsRequired()
                    .HasColumnName("nc_s3")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NcS4)
                    .IsRequired()
                    .HasColumnName("nc_s4")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NcS5)
                    .IsRequired()
                    .HasColumnName("nc_s5")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NccppNum).HasColumnName("nccpp_num");

                entity.Property(e => e.NdF1).HasColumnName("nd_f1");

                entity.Property(e => e.NdF2).HasColumnName("nd_f2");

                entity.Property(e => e.NdF3).HasColumnName("nd_f3");

                entity.Property(e => e.NdF4).HasColumnName("nd_f4");

                entity.Property(e => e.NdNum).HasColumnName("nd_num");

                entity.Property(e => e.NdNum2).HasColumnName("nd_num2");

                entity.Property(e => e.NdNum3).HasColumnName("nd_num3");

                entity.Property(e => e.NdNum4).HasColumnName("nd_num4");

                entity.Property(e => e.NdNum5).HasColumnName("nd_num5");

                entity.Property(e => e.NdP1)
                    .HasColumnName("nd_p1")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.NdP2)
                    .HasColumnName("nd_p2")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.NdP3)
                    .HasColumnName("nd_p3")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.NdP4)
                    .HasColumnName("nd_p4")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.NdP5)
                    .HasColumnName("nd_p5")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.NdS1)
                    .IsRequired()
                    .HasColumnName("nd_s1")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NdS2)
                    .IsRequired()
                    .HasColumnName("nd_s2")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NdS3)
                    .IsRequired()
                    .HasColumnName("nd_s3")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NdS4)
                    .IsRequired()
                    .HasColumnName("nd_s4")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NdS5)
                    .IsRequired()
                    .HasColumnName("nd_s5")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NdcppNum).HasColumnName("ndcpp_num");

                entity.Property(e => e.NddNum).HasColumnName("ndd_num");

                entity.Property(e => e.NdeF1).HasColumnName("nde_f1");

                entity.Property(e => e.NdeF2).HasColumnName("nde_f2");

                entity.Property(e => e.NdeF3).HasColumnName("nde_f3");

                entity.Property(e => e.NdeF4).HasColumnName("nde_f4");

                entity.Property(e => e.NdeNum).HasColumnName("nde_num");

                entity.Property(e => e.NdeNum2).HasColumnName("nde_num2");

                entity.Property(e => e.NdeNum3).HasColumnName("nde_num3");

                entity.Property(e => e.NdeNum4).HasColumnName("nde_num4");

                entity.Property(e => e.NdeNum5).HasColumnName("nde_num5");

                entity.Property(e => e.NdeP1)
                    .HasColumnName("nde_p1")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.NdeP2)
                    .HasColumnName("nde_p2")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.NdeP3)
                    .HasColumnName("nde_p3")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.NdeP4)
                    .HasColumnName("nde_p4")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.NdeP5)
                    .HasColumnName("nde_p5")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.NdeS1)
                    .IsRequired()
                    .HasColumnName("nde_s1")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NdeS2)
                    .IsRequired()
                    .HasColumnName("nde_s2")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NdeS3)
                    .IsRequired()
                    .HasColumnName("nde_s3")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NdeS4)
                    .IsRequired()
                    .HasColumnName("nde_s4")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NdeS5)
                    .IsRequired()
                    .HasColumnName("nde_s5")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NdrNum).HasColumnName("ndr_num");

                entity.Property(e => e.NroFact).HasColumnName("nro_fact");

                entity.Property(e => e.NumFacFin).HasColumnName("num_fac_fin");

                entity.Property(e => e.NumFacIni).HasColumnName("num_fac_ini");

                entity.Property(e => e.NumKit).HasColumnName("num_kit");

                entity.Property(e => e.OdpNum).HasColumnName("odp_num");

                entity.Property(e => e.OrdNum).HasColumnName("ord_num");

                entity.Property(e => e.OrdpNum).HasColumnName("ordp_num");

                entity.Property(e => e.ParNum).HasColumnName("par_num");

                entity.Property(e => e.PedNum).HasColumnName("ped_num");

                entity.Property(e => e.PgNum).HasColumnName("pg_num");

                entity.Property(e => e.PlaNum).HasColumnName("pla_num");

                entity.Property(e => e.PlcNum).HasColumnName("plc_num");

                entity.Property(e => e.PlvNum).HasColumnName("plv_num");

                entity.Property(e => e.PostNum).HasColumnName("post_num");

                entity.Property(e => e.Postcppnum).HasColumnName("postcppnum");

                entity.Property(e => e.Pventa).HasColumnName("pventa");

                entity.Property(e => e.ReqNum).HasColumnName("req_num");

                entity.Property(e => e.RetenNum).HasColumnName("reten_num");

                entity.Property(e => e.Retencppnum).HasColumnName("retencppnum");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.RmaCli).HasColumnName("rma_cli");

                entity.Property(e => e.RmaEntc).HasColumnName("rma_entc");

                entity.Property(e => e.RmaEntp).HasColumnName("rma_entp");

                entity.Property(e => e.RmaProv).HasColumnName("rma_prov");

                entity.Property(e => e.RmaRegs).HasColumnName("rma_regs");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Serie2).HasColumnName("serie2");

                entity.Property(e => e.Serie3).HasColumnName("serie3");

                entity.Property(e => e.Serie4).HasColumnName("serie4");

                entity.Property(e => e.Serie5).HasColumnName("serie5");

                entity.Property(e => e.Tabislr).HasColumnName("tabislr");

                entity.Property(e => e.TaxNum).HasColumnName("tax_num");

                entity.Property(e => e.TrasNum).HasColumnName("tras_num");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Turnosic).HasColumnName("turnosic");
            });

            modelBuilder.Entity<Almacenes>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Almacenes");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoSub)
                    .IsRequired()
                    .HasColumnName("co_sub")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DesSub)
                    .IsRequired()
                    .HasColumnName("des_sub")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime");

                entity.Property(e => e.Materiales).HasColumnName("materiales");

                entity.Property(e => e.Nocompra).HasColumnName("nocompra");

                entity.Property(e => e.Noventa).HasColumnName("noventa");

                entity.Property(e => e.Produccion).HasColumnName("produccion");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Rowguid).HasColumnName("rowguid");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Ambaju>(entity =>
            {
                entity.HasKey(e => e.AmbUsua);

                entity.ToTable("ambaju");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("IX_ambaju");

                entity.Property(e => e.AmbUsua)
                    .HasColumnName("amb_usua")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.AjueNum)
                    .IsRequired()
                    .HasColumnName("ajue_num")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Almacen)
                    .IsRequired()
                    .HasColumnName("almacen")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Almacend).HasColumnName("almacend");

                entity.Property(e => e.BtAnulo)
                    .IsRequired()
                    .HasColumnName("bt_anulo")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BtReversa)
                    .IsRequired()
                    .HasColumnName("bt_reversa")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BtSerIn)
                    .IsRequired()
                    .HasColumnName("bt_ser_in")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BtSerOut)
                    .IsRequired()
                    .HasColumnName("bt_ser_out")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Cantidad)
                    .IsRequired()
                    .HasColumnName("cantidad")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cantidadd).HasColumnName("cantidadd");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoMone)
                    .IsRequired()
                    .HasColumnName("co_mone")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Costo)
                    .IsRequired()
                    .HasColumnName("costo")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Fecha)
                    .IsRequired()
                    .HasColumnName("fecha")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Monedad).HasColumnName("monedad");

                entity.Property(e => e.Motivo)
                    .IsRequired()
                    .HasColumnName("motivo")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.PControl1).HasColumnName("p_control_1");

                entity.Property(e => e.PLotefec).HasColumnName("p_lotefec");

                entity.Property(e => e.Poscol01).HasColumnName("poscol01");

                entity.Property(e => e.Poscol02).HasColumnName("poscol02");

                entity.Property(e => e.Poscol03).HasColumnName("poscol03");

                entity.Property(e => e.Poscol04).HasColumnName("poscol04");

                entity.Property(e => e.Poscol05).HasColumnName("poscol05");

                entity.Property(e => e.Poscol06).HasColumnName("poscol06");

                entity.Property(e => e.Poscol07).HasColumnName("poscol07");

                entity.Property(e => e.Poscol08).HasColumnName("poscol08");

                entity.Property(e => e.Poscol09).HasColumnName("poscol09");

                entity.Property(e => e.Poscol10).HasColumnName("poscol10");

                entity.Property(e => e.Poscol11).HasColumnName("poscol11");

                entity.Property(e => e.Poscol12).HasColumnName("poscol12");

                entity.Property(e => e.Poscol13).HasColumnName("poscol13");

                entity.Property(e => e.PstockNeg)
                    .IsRequired()
                    .HasColumnName("pstock_neg")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.StockAct)
                    .HasColumnName("stock_act")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.StockNeg)
                    .IsRequired()
                    .HasColumnName("stock_neg")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Tamcol01).HasColumnName("tamcol01");

                entity.Property(e => e.Tamcol02).HasColumnName("tamcol02");

                entity.Property(e => e.Tamcol03).HasColumnName("tamcol03");

                entity.Property(e => e.Tamcol04).HasColumnName("tamcol04");

                entity.Property(e => e.Tamcol05).HasColumnName("tamcol05");

                entity.Property(e => e.Tamcol06).HasColumnName("tamcol06");

                entity.Property(e => e.Tamcol07).HasColumnName("tamcol07");

                entity.Property(e => e.Tamcol08).HasColumnName("tamcol08");

                entity.Property(e => e.Tamcol09).HasColumnName("tamcol09");

                entity.Property(e => e.Tamcol10).HasColumnName("tamcol10");

                entity.Property(e => e.Tamcol11).HasColumnName("tamcol11");

                entity.Property(e => e.Tamcol12).HasColumnName("tamcol12");

                entity.Property(e => e.Tamcol13).HasColumnName("tamcol13");

                entity.Property(e => e.Unidad)
                    .IsRequired()
                    .HasColumnName("unidad")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<Ambart>(entity =>
            {
                entity.HasKey(e => e.AmbUsua)
                    .HasName("PK__ambart__452AF57A");

                entity.ToTable("ambart");

                entity.Property(e => e.AmbUsua)
                    .HasColumnName("amb_usua")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Alterna)
                    .IsRequired()
                    .HasColumnName("alterna")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Anuladov)
                    .IsRequired()
                    .HasColumnName("anuladov")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ArtDesiv)
                    .IsRequired()
                    .HasColumnName("art_desiv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ArtDesv)
                    .IsRequired()
                    .HasColumnName("art_desv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BtAranc)
                    .IsRequired()
                    .HasColumnName("bt_aranc")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BtPreclote)
                    .IsRequired()
                    .HasColumnName("bt_preclote")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CanAgrv)
                    .IsRequired()
                    .HasColumnName("can_agrv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CoArtv)
                    .IsRequired()
                    .HasColumnName("co_artv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CoCat)
                    .IsRequired()
                    .HasColumnName("co_cat")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoCatd).HasColumnName("co_catd");

                entity.Property(e => e.CoCatv)
                    .IsRequired()
                    .HasColumnName("co_catv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CoColor)
                    .IsRequired()
                    .HasColumnName("co_color")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoColord).HasColumnName("co_colord");

                entity.Property(e => e.CoColorv)
                    .IsRequired()
                    .HasColumnName("co_colorv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CoLin)
                    .IsRequired()
                    .HasColumnName("co_lin")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoLind).HasColumnName("co_lind");

                entity.Property(e => e.CoLinv)
                    .IsRequired()
                    .HasColumnName("co_linv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CoProv)
                    .IsRequired()
                    .HasColumnName("co_prov")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoProvd).HasColumnName("co_provd");

                entity.Property(e => e.CoProvv)
                    .IsRequired()
                    .HasColumnName("co_provv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CoSubl)
                    .IsRequired()
                    .HasColumnName("co_subl")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSubld).HasColumnName("co_subld");

                entity.Property(e => e.CoSublv)
                    .IsRequired()
                    .HasColumnName("co_sublv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentariv)
                    .IsRequired()
                    .HasColumnName("comentariv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CosMercV)
                    .IsRequired()
                    .HasColumnName("cos_merc_v")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CosProV)
                    .IsRequired()
                    .HasColumnName("cos_pro_v")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CosProomv)
                    .IsRequired()
                    .HasColumnName("cos_proomv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CosProvV)
                    .IsRequired()
                    .HasColumnName("cos_prov_v")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CosUnanv)
                    .IsRequired()
                    .HasColumnName("cos_unanv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.EquiAlt)
                    .HasColumnName("equi_alt")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.EquiPri)
                    .HasColumnName("equi_pri")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.EquiSec)
                    .HasColumnName("equi_sec")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecProomv)
                    .IsRequired()
                    .HasColumnName("fec_proomv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.FechaRegv)
                    .IsRequired()
                    .HasColumnName("fecha_regv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Garantiav)
                    .IsRequired()
                    .HasColumnName("garantiav")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Imagen1v)
                    .IsRequired()
                    .HasColumnName("imagen1v")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Imagen2v)
                    .IsRequired()
                    .HasColumnName("imagen2v")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Itemv)
                    .IsRequired()
                    .HasColumnName("itemv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Licorv)
                    .IsRequired()
                    .HasColumnName("licorv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Lotev)
                    .IsRequired()
                    .HasColumnName("lotev")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ManjServ)
                    .IsRequired()
                    .HasColumnName("manj_serv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.MargMinv)
                    .IsRequired()
                    .HasColumnName("marg_minv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Margen1v)
                    .IsRequired()
                    .HasColumnName("margen1v")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Margen2v)
                    .IsRequired()
                    .HasColumnName("margen2v")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Margen3v)
                    .IsRequired()
                    .HasColumnName("margen3v")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Margen4v)
                    .IsRequired()
                    .HasColumnName("margen4v")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Margen5v)
                    .IsRequired()
                    .HasColumnName("margen5v")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Modelov)
                    .IsRequired()
                    .HasColumnName("modelov")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.MontComiv)
                    .IsRequired()
                    .HasColumnName("mont_comiv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Pesov)
                    .IsRequired()
                    .HasColumnName("pesov")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Picturev)
                    .IsRequired()
                    .HasColumnName("picturev")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Piev)
                    .IsRequired()
                    .HasColumnName("piev")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.PorcAdiv)
                    .IsRequired()
                    .HasColumnName("porc_adiv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.PrecAgr1v)
                    .IsRequired()
                    .HasColumnName("prec_agr1v")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.PrecAgr2v)
                    .IsRequired()
                    .HasColumnName("prec_agr2v")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.PrecAgr3v)
                    .IsRequired()
                    .HasColumnName("prec_agr3v")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.PrecAgr4v)
                    .IsRequired()
                    .HasColumnName("prec_agr4v")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.PrecAgr5v)
                    .IsRequired()
                    .HasColumnName("prec_agr5v")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.PrecOmv)
                    .IsRequired()
                    .HasColumnName("prec_omv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.PrecVta1v)
                    .IsRequired()
                    .HasColumnName("prec_vta1v")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.PrecVta2v)
                    .IsRequired()
                    .HasColumnName("prec_vta2v")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.PrecVta3v)
                    .IsRequired()
                    .HasColumnName("prec_vta3v")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.PrecVta4v)
                    .IsRequired()
                    .HasColumnName("prec_vta4v")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.PrecVta5v)
                    .IsRequired()
                    .HasColumnName("prec_vta5v")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Primaria)
                    .IsRequired()
                    .HasColumnName("primaria")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Procedencd).HasColumnName("procedencd");

                entity.Property(e => e.Procedenci)
                    .IsRequired()
                    .HasColumnName("procedenci")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Procedencv)
                    .IsRequired()
                    .HasColumnName("procedencv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.PtoPedidv)
                    .IsRequired()
                    .HasColumnName("pto_pedidv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.PuntCliv)
                    .IsRequired()
                    .HasColumnName("punt_cliv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.PuntProv)
                    .IsRequired()
                    .HasColumnName("punt_prov")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Reactivar)
                    .IsRequired()
                    .HasColumnName("reactivar")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Refv)
                    .IsRequired()
                    .HasColumnName("refv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.RelacAut)
                    .HasColumnName("relac_aut")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.RelacAutd).HasColumnName("relac_autd");

                entity.Property(e => e.RelacAutv)
                    .IsRequired()
                    .HasColumnName("relac_autv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Relacartv)
                    .IsRequired()
                    .HasColumnName("relacartv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Secundaria)
                    .IsRequired()
                    .HasColumnName("secundaria")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.StockMaxv)
                    .IsRequired()
                    .HasColumnName("stock_maxv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.StockMinv)
                    .IsRequired()
                    .HasColumnName("stock_minv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasColumnName("tipo")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoCos)
                    .IsRequired()
                    .HasColumnName("tipo_cos")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoCosd).HasColumnName("tipo_cosd");

                entity.Property(e => e.TipoCosv)
                    .IsRequired()
                    .HasColumnName("tipo_cosv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoImpd).HasColumnName("tipo_impd");

                entity.Property(e => e.TipoImpv)
                    .IsRequired()
                    .HasColumnName("tipo_impv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Tipod).HasColumnName("tipod");

                entity.Property(e => e.Tipov)
                    .IsRequired()
                    .HasColumnName("tipov")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Ubicacionv)
                    .IsRequired()
                    .HasColumnName("ubicacionv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UltCosV)
                    .IsRequired()
                    .HasColumnName("ult_cos_v")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UltCosdov)
                    .IsRequired()
                    .HasColumnName("ult_cosdov")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UltCosomv)
                    .IsRequired()
                    .HasColumnName("ult_cosomv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UniRelac1)
                    .HasColumnName("uni_relac1")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<Ambcierre>(entity =>
            {
                entity.HasKey(e => e.AmbUsua);

                entity.ToTable("ambcierre");

                entity.Property(e => e.AmbUsua)
                    .HasColumnName("amb_usua")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Almacen).HasColumnName("almacen");

                entity.Property(e => e.Almacend).HasColumnName("almacend");

                entity.Property(e => e.BtAnulo).HasColumnName("bt_anulo");

                entity.Property(e => e.BtConfirm).HasColumnName("bt_confirm");

                entity.Property(e => e.BtDecon).HasColumnName("bt_decon");

                entity.Property(e => e.BtReversa).HasColumnName("bt_reversa");

                entity.Property(e => e.BtSerial).HasColumnName("bt_serial");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.EntDes).HasColumnName("ent_des");

                entity.Property(e => e.EntNum).HasColumnName("ent_num");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Fecha).HasColumnName("fecha");

                entity.Property(e => e.OdpNum).HasColumnName("odp_num");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((0)))");
            });

            modelBuilder.Entity<Ambclpro>(entity =>
            {
                entity.HasKey(e => new { e.AmbUsua, e.TipoCyp })
                    .HasName("PK__ambclpro__6A53EF36");

                entity.ToTable("ambclpro");

                entity.Property(e => e.AmbUsua)
                    .HasColumnName("amb_usua")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoCyp)
                    .HasColumnName("tipo_cyp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Bemailv)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BwebSitev)
                    .IsRequired()
                    .HasColumnName("BWebSitev")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Ciudadv)
                    .IsRequired()
                    .HasColumnName("ciudadv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CliDesv)
                    .IsRequired()
                    .HasColumnName("cli_desv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CoCliv)
                    .IsRequired()
                    .HasColumnName("co_cliv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CoIngr)
                    .IsRequired()
                    .HasColumnName("co_ingr")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoIngrd).HasColumnName("co_ingrd");

                entity.Property(e => e.CoIngrv)
                    .IsRequired()
                    .HasColumnName("co_ingrv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CoPais)
                    .IsRequired()
                    .HasColumnName("co_pais")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoPaisd)
                    .IsRequired()
                    .HasColumnName("co_paisd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CoPaisv)
                    .IsRequired()
                    .HasColumnName("co_paisv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CoSeg)
                    .IsRequired()
                    .HasColumnName("co_seg")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSegd).HasColumnName("co_segd");

                entity.Property(e => e.CoSegv)
                    .IsRequired()
                    .HasColumnName("co_segv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoTabv)
                    .IsRequired()
                    .HasColumnName("co_tabv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoVenv)
                    .IsRequired()
                    .HasColumnName("co_venv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CoZon)
                    .IsRequired()
                    .HasColumnName("co_zon")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoZonv)
                    .IsRequired()
                    .HasColumnName("co_zonv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Comentariv)
                    .IsRequired()
                    .HasColumnName("comentariv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ConVend).HasColumnName("con_vend");

                entity.Property(e => e.ConZond).HasColumnName("con_zond");

                entity.Property(e => e.Contribuv)
                    .IsRequired()
                    .HasColumnName("contribuv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.DescGlobv)
                    .IsRequired()
                    .HasColumnName("desc_globv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Descppagov)
                    .IsRequired()
                    .HasColumnName("descppagov")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.DirEnt2v)
                    .IsRequired()
                    .HasColumnName("dir_ent2v")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Direc1v)
                    .IsRequired()
                    .HasColumnName("direc1v")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Direc2v)
                    .IsRequired()
                    .HasColumnName("direc2v")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.DisCenv)
                    .IsRequired()
                    .HasColumnName("dis_cenv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Domingov)
                    .IsRequired()
                    .HasColumnName("domingov")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Emailv)
                    .IsRequired()
                    .HasColumnName("emailv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Estadov)
                    .IsRequired()
                    .HasColumnName("estadov")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Faxv).HasColumnName("faxv");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FechaRegv)
                    .IsRequired()
                    .HasColumnName("fecha_regv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.FormType)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FormTypev)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Frecuvistv)
                    .IsRequired()
                    .HasColumnName("frecuvistv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Horarcajav)
                    .IsRequired()
                    .HasColumnName("horarcajav")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Inactivov)
                    .IsRequired()
                    .HasColumnName("inactivov")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Juevesv)
                    .IsRequired()
                    .HasColumnName("juevesv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Loginv)
                    .IsRequired()
                    .HasColumnName("loginv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Lunesv)
                    .IsRequired()
                    .HasColumnName("lunesv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Martesv)
                    .IsRequired()
                    .HasColumnName("martesv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Matriz)
                    .IsRequired()
                    .HasColumnName("matriz")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Matrizd).HasColumnName("matrizd");

                entity.Property(e => e.Matrizv)
                    .IsRequired()
                    .HasColumnName("matrizv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Miercolesv)
                    .IsRequired()
                    .HasColumnName("miercolesv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.MontCrev)
                    .IsRequired()
                    .HasColumnName("mont_crev")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Nitv)
                    .IsRequired()
                    .HasColumnName("nitv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Passwordv)
                    .IsRequired()
                    .HasColumnName("passwordv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.PlazPagv)
                    .IsRequired()
                    .HasColumnName("plaz_pagv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Responsv)
                    .IsRequired()
                    .HasColumnName("responsv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rifv)
                    .IsRequired()
                    .HasColumnName("rifv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Sabadov)
                    .IsRequired()
                    .HasColumnName("sabadov")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Saldov)
                    .IsRequired()
                    .HasColumnName("saldov")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Salestax)
                    .IsRequired()
                    .HasColumnName("salestax")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Salestaxd).HasColumnName("salestaxd");

                entity.Property(e => e.Salestaxv)
                    .IsRequired()
                    .HasColumnName("salestaxv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Serialp)
                    .IsRequired()
                    .HasColumnName("serialp")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TaxIdv)
                    .IsRequired()
                    .HasColumnName("TaxIDv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Telefonosv)
                    .IsRequired()
                    .HasColumnName("telefonosv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasColumnName("tipo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoAdi)
                    .HasColumnName("tipo_adi")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TipoAdid).HasColumnName("tipo_adid");

                entity.Property(e => e.TipoAdiv)
                    .IsRequired()
                    .HasColumnName("tipo_adiv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TipoPer)
                    .IsRequired()
                    .HasColumnName("tipo_per")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoPerd).HasColumnName("tipo_perd");

                entity.Property(e => e.TipoPerv)
                    .IsRequired()
                    .HasColumnName("tipo_perv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Tipod).HasColumnName("tipod");

                entity.Property(e => e.Tipov)
                    .IsRequired()
                    .HasColumnName("tipov")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Valido).HasColumnName("valido");

                entity.Property(e => e.Viernesv)
                    .IsRequired()
                    .HasColumnName("viernesv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Vpasswordv).HasColumnName("vpasswordv");

                entity.Property(e => e.WebSitev)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Zipv)
                    .IsRequired()
                    .HasColumnName("zipv")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<Ambdev>(entity =>
            {
                entity.HasKey(e => e.AmbUsua)
                    .IsClustered(false);

                entity.ToTable("ambdev");

                entity.HasIndex(e => e.AmbUsua)
                    .HasName("iamb_usua");

                entity.Property(e => e.AmbUsua)
                    .HasColumnName("amb_usua")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.AlmaDes1)
                    .IsRequired()
                    .HasColumnName("alma_des")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.AlmaOri1)
                    .IsRequired()
                    .HasColumnName("alma_ori")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Almades)
                    .IsRequired()
                    .HasColumnName("almades")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Almaori)
                    .IsRequired()
                    .HasColumnName("almaori")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Almdesd).HasColumnName("almdesd");

                entity.Property(e => e.Almorid).HasColumnName("almorid");

                entity.Property(e => e.BtAnula)
                    .IsRequired()
                    .HasColumnName("bt_anula")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BtReversa)
                    .IsRequired()
                    .HasColumnName("bt_reversa")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BtSer)
                    .IsRequired()
                    .HasColumnName("bt_ser")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Confirma)
                    .IsRequired()
                    .HasColumnName("confirma")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Desconfima)
                    .IsRequired()
                    .HasColumnName("desconfima")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.DevNum)
                    .IsRequired()
                    .HasColumnName("dev_num")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Devolver)
                    .IsRequired()
                    .HasColumnName("devolver")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Fecha)
                    .IsRequired()
                    .HasColumnName("fecha")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Motivo)
                    .IsRequired()
                    .HasColumnName("motivo")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.OdpNum)
                    .IsRequired()
                    .HasColumnName("odp_num")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.PLotefec).HasColumnName("p_lotefec");

                entity.Property(e => e.PstockNeg)
                    .IsRequired()
                    .HasColumnName("pstock_neg")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.StockNeg)
                    .IsRequired()
                    .HasColumnName("stock_neg")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((0)))");
            });

            modelBuilder.Entity<Ambemp>(entity =>
            {
                entity.HasKey(e => e.AmbUsua)
                    .IsClustered(false);

                entity.ToTable("ambemp");

                entity.HasIndex(e => e.AmbUsua)
                    .HasName("IX_ambemp")
                    .IsUnique()
                    .IsClustered();

                entity.Property(e => e.AmbUsua)
                    .HasColumnName("amb_usua")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Agrupar)
                    .IsRequired()
                    .HasColumnName("agrupar")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Alma).HasColumnName("alma");

                entity.Property(e => e.AlmaD).HasColumnName("alma_d");

                entity.Property(e => e.Anular)
                    .IsRequired()
                    .HasColumnName("anular")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Bulto)
                    .IsRequired()
                    .HasColumnName("bulto")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CampAdi)
                    .IsRequired()
                    .HasColumnName("camp_adi")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Canti)
                    .IsRequired()
                    .HasColumnName("canti")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CantiD).HasColumnName("canti_d");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Coincide).HasColumnName("coincide");

                entity.Property(e => e.Dalma)
                    .IsRequired()
                    .HasColumnName("dalma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Dcanti)
                    .HasColumnName("dcanti")
                    .HasColumnType("decimal(18, 0)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Dtipodoc)
                    .IsRequired()
                    .HasColumnName("dtipodoc")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Empacado).HasColumnName("empacado");

                entity.Property(e => e.Empr).HasColumnName("empr");

                entity.Property(e => e.Envio).HasColumnName("envio");

                entity.Property(e => e.Factura)
                    .IsRequired()
                    .HasColumnName("factura")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Fecha)
                    .IsRequired()
                    .HasColumnName("fecha")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Finalizar).HasColumnName("finalizar");

                entity.Property(e => e.NroOrig)
                    .IsRequired()
                    .HasColumnName("nro_orig")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.NumEmp)
                    .IsRequired()
                    .HasColumnName("num_emp")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Recibido).HasColumnName("recibido");

                entity.Property(e => e.Reempaq)
                    .IsRequired()
                    .HasColumnName("reempaq")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.RengC)
                    .IsRequired()
                    .HasColumnName("reng_c")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.RengS).HasColumnName("reng_s");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TipoD).HasColumnName("tipo_d");

                entity.Property(e => e.TipoDoc)
                    .IsRequired()
                    .HasColumnName("tipo_doc")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Unid)
                    .IsRequired()
                    .HasColumnName("unid")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<Ambentre>(entity =>
            {
                entity.HasKey(e => e.AmbUsua);

                entity.ToTable("ambentre");

                entity.Property(e => e.AmbUsua)
                    .HasColumnName("amb_usua")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Almacen).HasColumnName("almacen");

                entity.Property(e => e.Almacend).HasColumnName("almacend");

                entity.Property(e => e.BtAnulo).HasColumnName("bt_anulo");

                entity.Property(e => e.BtConfirm).HasColumnName("bt_confirm");

                entity.Property(e => e.BtDecon).HasColumnName("bt_decon");

                entity.Property(e => e.BtReversa).HasColumnName("bt_reversa");

                entity.Property(e => e.BtSerial).HasColumnName("bt_serial");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoEsMo)
                    .IsRequired()
                    .HasColumnName("co_es_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.EntDes).HasColumnName("ent_des");

                entity.Property(e => e.EntNum).HasColumnName("ent_num");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Fecha).HasColumnName("fecha");

                entity.Property(e => e.OdpNum).HasColumnName("odp_num");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((0)))");
            });

            modelBuilder.Entity<Amblcobr>(entity =>
            {
                entity.HasKey(e => new { e.AmbBlco, e.Ambusu })
                    .HasName("amblcobr_ambusu");

                entity.ToTable("amblcobr");

                entity.HasIndex(e => e.AmbBlco)
                    .HasName("amb_blco");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_931534402")
                    .IsUnique();

                entity.Property(e => e.AmbBlco)
                    .HasColumnName("amb_blco")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Ambusu)
                    .HasColumnName("ambusu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Banco)
                    .IsRequired()
                    .HasColumnName("banco")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BtActualizar)
                    .IsRequired()
                    .HasColumnName("bt_actualizar")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BtAnulado).HasColumnName("bt_anulado");

                entity.Property(e => e.BtCaja).HasColumnName("bt_caja");

                entity.Property(e => e.BtCamb)
                    .IsRequired()
                    .HasColumnName("bt_camb")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BtCancelar)
                    .IsRequired()
                    .HasColumnName("bt_cancelar")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BtCheque)
                    .IsRequired()
                    .HasColumnName("bt_cheque")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BtDespacho)
                    .IsRequired()
                    .HasColumnName("bt_despacho")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BtFacturas)
                    .IsRequired()
                    .HasColumnName("bt_facturas")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BtPago)
                    .IsRequired()
                    .HasColumnName("bt_pago")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BtReactiva).HasColumnName("bt_reactiva");

                entity.Property(e => e.BtReverso)
                    .IsRequired()
                    .HasColumnName("bt_reverso")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Caja)
                    .IsRequired()
                    .HasColumnName("caja")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CobNum)
                    .IsRequired()
                    .HasColumnName("cob_num")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cuenta)
                    .IsRequired()
                    .HasColumnName("cuenta")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Dbanco).HasColumnName("dbanco");

                entity.Property(e => e.Dcaja).HasColumnName("dcaja");

                entity.Property(e => e.DcoCli).HasColumnName("dco_cli");

                entity.Property(e => e.DcoVen).HasColumnName("dco_ven");

                entity.Property(e => e.Dcuenta).HasColumnName("dcuenta");

                entity.Property(e => e.DesCrip)
                    .IsRequired()
                    .HasColumnName("des_crip")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Dmoneda)
                    .IsRequired()
                    .HasColumnName("dmoneda")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Dtarjeta).HasColumnName("dtarjeta");

                entity.Property(e => e.DtipoCob).HasColumnName("dtipo_cob");

                entity.Property(e => e.Dxpp)
                    .IsRequired()
                    .HasColumnName("dxpp")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Edppago).HasColumnName("edppago");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecCheque)
                    .IsRequired()
                    .HasColumnName("fec_cheque")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.FecCon)
                    .IsRequired()
                    .HasColumnName("fec_con")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.MaxPer)
                    .HasColumnName("max_per")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.MontoAbo)
                    .IsRequired()
                    .HasColumnName("monto_abo")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.MontoTotal)
                    .IsRequired()
                    .HasColumnName("monto_total")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.NumDoc)
                    .IsRequired()
                    .HasColumnName("num_doc")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.PAbrirCa).HasColumnName("p_abrir_ca");

                entity.Property(e => e.PDetal).HasColumnName("p_detal");

                entity.Property(e => e.PPara1).HasColumnName("p_para1");

                entity.Property(e => e.PPara2).HasColumnName("p_para2");

                entity.Property(e => e.PPara3).HasColumnName("p_para3");

                entity.Property(e => e.PPara4).HasColumnName("p_para4");

                entity.Property(e => e.PPara5).HasColumnName("p_para5");

                entity.Property(e => e.Permodret).HasColumnName("permodret");

                entity.Property(e => e.Recibo)
                    .IsRequired()
                    .HasColumnName("recibo")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Reten)
                    .IsRequired()
                    .HasColumnName("reten")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Tarjeta)
                    .IsRequired()
                    .HasColumnName("tarjeta")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TipoCob)
                    .IsRequired()
                    .HasColumnName("tipo_cob")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Vbanco)
                    .IsRequired()
                    .HasColumnName("vbanco")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Vcaja)
                    .IsRequired()
                    .HasColumnName("vcaja")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.VcoCli)
                    .IsRequired()
                    .HasColumnName("vco_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.VcoVen)
                    .IsRequired()
                    .HasColumnName("vco_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Vcuenta)
                    .IsRequired()
                    .HasColumnName("vcuenta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Vmoneda)
                    .IsRequired()
                    .HasColumnName("vmoneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Vtarjeta)
                    .IsRequired()
                    .HasColumnName("vtarjeta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.VtipoCob)
                    .IsRequired()
                    .HasColumnName("vtipo_cob")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Amblfact>(entity =>
            {
                entity.HasKey(e => new { e.AmbUsua, e.AmbBlfa });

                entity.ToTable("amblfact");

                entity.Property(e => e.AmbUsua)
                    .HasColumnName("amb_usua")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.AmbBlfa)
                    .HasColumnName("amb_blfa")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.Actforma).HasColumnName("actforma");

                entity.Property(e => e.BAnular)
                    .IsRequired()
                    .HasColumnName("b_anular")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BArt).HasColumnName("b_art");

                entity.Property(e => e.BClien)
                    .IsRequired()
                    .HasColumnName("b_clien")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BCobrar)
                    .IsRequired()
                    .HasColumnName("b_cobrar")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BDevdinero)
                    .IsRequired()
                    .HasColumnName("b_devdinero")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BFact)
                    .IsRequired()
                    .HasColumnName("b_fact")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BImportar)
                    .IsRequired()
                    .HasColumnName("b_importar")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BMargen)
                    .IsRequired()
                    .HasColumnName("b_margen")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BNotas)
                    .IsRequired()
                    .HasColumnName("b_notas")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BReactivar).HasColumnName("b_reactivar");

                entity.Property(e => e.BRevdinero)
                    .IsRequired()
                    .HasColumnName("b_revdinero")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BSeriales)
                    .IsRequired()
                    .HasColumnName("b_seriales")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Chdev)
                    .IsRequired()
                    .HasColumnName("chdev")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoTran)
                    .IsRequired()
                    .HasColumnName("co_tran")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CobrarAut).HasColumnName("cobrar_aut");

                entity.Property(e => e.ComRelac)
                    .IsRequired()
                    .HasColumnName("com_relac")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Contrib)
                    .IsRequired()
                    .HasColumnName("contrib")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.DcoCli).HasColumnName("dco_cli");

                entity.Property(e => e.DcoTran).HasColumnName("dco_tran");

                entity.Property(e => e.DcoVen).HasColumnName("dco_ven");

                entity.Property(e => e.DescFac).HasColumnName("desc_fac");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.DformaPag).HasColumnName("dforma_pag");

                entity.Property(e => e.Dmoneda).HasColumnName("dmoneda");

                entity.Property(e => e.Dreng3).HasColumnName("dreng_3");

                entity.Property(e => e.Dreng4).HasColumnName("dreng_4");

                entity.Property(e => e.Dtax).HasColumnName("dtax");

                entity.Property(e => e.FactNum)
                    .IsRequired()
                    .HasColumnName("fact_num")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEmis)
                    .IsRequired()
                    .HasColumnName("fec_emis")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.FecVenc)
                    .IsRequired()
                    .HasColumnName("fec_venc")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.FormaPag)
                    .IsRequired()
                    .HasColumnName("forma_pag")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Formapag1)
                    .IsRequired()
                    .HasColumnName("formapag")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Fvenc)
                    .IsRequired()
                    .HasColumnName("fvenc")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Listar)
                    .HasColumnName("listar")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ManImpr).HasColumnName("man_impr");

                entity.Property(e => e.Maxefec)
                    .HasColumnName("maxefec")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.MontoAdi).HasColumnName("monto_adi");

                entity.Property(e => e.NumListar)
                    .HasColumnName("num_listar")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Numcontrol).HasColumnName("numcontrol");

                entity.Property(e => e.Numcopia)
                    .HasColumnName("numcopia")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.PDevReng).HasColumnName("p_dev_reng");

                entity.Property(e => e.PLotefec).HasColumnName("p_lotefec");

                entity.Property(e => e.PMargen)
                    .HasColumnName("p_margen")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.PPara1).HasColumnName("p_para1");

                entity.Property(e => e.PPara10)
                    .IsRequired()
                    .HasColumnName("p_para10")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.PPara2).HasColumnName("p_para2");

                entity.Property(e => e.PPara3).HasColumnName("p_para3");

                entity.Property(e => e.PPara4).HasColumnName("p_para4");

                entity.Property(e => e.PPara5).HasColumnName("p_para5");

                entity.Property(e => e.PPara6).HasColumnName("p_para6");

                entity.Property(e => e.PPara7).HasColumnName("p_para7");

                entity.Property(e => e.PPara8).HasColumnName("p_para8");

                entity.Property(e => e.PPara9)
                    .IsRequired()
                    .HasColumnName("p_para9")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Pc1)
                    .IsRequired()
                    .HasColumnName("pc1")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Pc2)
                    .IsRequired()
                    .HasColumnName("pc2")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Pc3)
                    .IsRequired()
                    .HasColumnName("pc3")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Pc4)
                    .IsRequired()
                    .HasColumnName("pc4")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Pc5)
                    .IsRequired()
                    .HasColumnName("pc5")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Pcontrol1).HasColumnName("pcontrol_1");

                entity.Property(e => e.Pcontrol2).HasColumnName("pcontrol_2");

                entity.Property(e => e.Pcontrol3).HasColumnName("pcontrol_3");

                entity.Property(e => e.Pcontrol4).HasColumnName("pcontrol_4");

                entity.Property(e => e.Pcontrol5).HasColumnName("pcontrol_5");

                entity.Property(e => e.Pcontrol6).HasColumnName("pcontrol_6");

                entity.Property(e => e.Pcontrol7).HasColumnName("pcontrol_7");

                entity.Property(e => e.Pcontrol8).HasColumnName("pcontrol_8");

                entity.Property(e => e.Pcontrol9).HasColumnName("pcontrol_9");

                entity.Property(e => e.Pimpfac).HasColumnName("pimpfac");

                entity.Property(e => e.PorcGdesc)
                    .IsRequired()
                    .HasColumnName("porc_gdesc")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.PorcReca)
                    .IsRequired()
                    .HasColumnName("porc_reca")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Poscol01)
                    .HasColumnName("poscol01")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Poscol02)
                    .HasColumnName("poscol02")
                    .HasDefaultValueSql("((2))");

                entity.Property(e => e.Poscol03)
                    .HasColumnName("poscol03")
                    .HasDefaultValueSql("((3))");

                entity.Property(e => e.Poscol04)
                    .HasColumnName("poscol04")
                    .HasDefaultValueSql("((4))");

                entity.Property(e => e.Poscol05)
                    .HasColumnName("poscol05")
                    .HasDefaultValueSql("((5))");

                entity.Property(e => e.Poscol06)
                    .HasColumnName("poscol06")
                    .HasDefaultValueSql("((6))");

                entity.Property(e => e.Poscol07)
                    .HasColumnName("poscol07")
                    .HasDefaultValueSql("((7))");

                entity.Property(e => e.Poscol08)
                    .HasColumnName("poscol08")
                    .HasDefaultValueSql("((8))");

                entity.Property(e => e.Poscol09)
                    .HasColumnName("poscol09")
                    .HasDefaultValueSql("((9))");

                entity.Property(e => e.Poscol10)
                    .HasColumnName("poscol10")
                    .HasDefaultValueSql("((10))");

                entity.Property(e => e.Poscol11)
                    .HasColumnName("poscol11")
                    .HasDefaultValueSql("((11))");

                entity.Property(e => e.Poscol12)
                    .HasColumnName("poscol12")
                    .HasDefaultValueSql("((12))");

                entity.Property(e => e.Poscol13)
                    .HasColumnName("poscol13")
                    .HasDefaultValueSql("((13))");

                entity.Property(e => e.Poscol14)
                    .HasColumnName("poscol14")
                    .HasDefaultValueSql("((14))");

                entity.Property(e => e.Poscol15)
                    .HasColumnName("poscol15")
                    .HasDefaultValueSql("((15))");

                entity.Property(e => e.Poscol16)
                    .HasColumnName("poscol16")
                    .HasDefaultValueSql("((16))");

                entity.Property(e => e.Poscol17)
                    .HasColumnName("poscol17")
                    .HasDefaultValueSql("((17))");

                entity.Property(e => e.Poscol18)
                    .HasColumnName("poscol18")
                    .HasDefaultValueSql("((18))");

                entity.Property(e => e.Poscol19)
                    .HasColumnName("poscol19")
                    .HasDefaultValueSql("((19))");

                entity.Property(e => e.Poscol20)
                    .HasColumnName("poscol20")
                    .HasDefaultValueSql("((20))");

                entity.Property(e => e.PstockNeg).HasColumnName("pstock_neg");

                entity.Property(e => e.ReinArt).HasColumnName("rein_art");

                entity.Property(e => e.Reng10)
                    .IsRequired()
                    .HasColumnName("reng_10")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Reng3)
                    .IsRequired()
                    .HasColumnName("reng_3")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Reng4)
                    .IsRequired()
                    .HasColumnName("reng_4")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Reng5)
                    .IsRequired()
                    .HasColumnName("reng_5")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Reng6)
                    .IsRequired()
                    .HasColumnName("reng_6")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Reng7)
                    .IsRequired()
                    .HasColumnName("reng_7")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Reng8)
                    .IsRequired()
                    .HasColumnName("reng_8")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Reng9)
                    .IsRequired()
                    .HasColumnName("reng_9")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Saldo).HasColumnName("saldo");

                entity.Property(e => e.SerialLleno).HasColumnName("serial_lleno");

                entity.Property(e => e.Serie).HasColumnName("SERIE");

                entity.Property(e => e.StockNeg)
                    .IsRequired()
                    .HasColumnName("stock_neg")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Tamcol01)
                    .HasColumnName("tamcol01")
                    .HasDefaultValueSql("((37))");

                entity.Property(e => e.Tamcol02)
                    .HasColumnName("tamcol02")
                    .HasDefaultValueSql("((125))");

                entity.Property(e => e.Tamcol03)
                    .HasColumnName("tamcol03")
                    .HasDefaultValueSql("((37))");

                entity.Property(e => e.Tamcol04)
                    .HasColumnName("tamcol04")
                    .HasDefaultValueSql("((78))");

                entity.Property(e => e.Tamcol05)
                    .HasColumnName("tamcol05")
                    .HasDefaultValueSql("((25))");

                entity.Property(e => e.Tamcol06)
                    .HasColumnName("tamcol06")
                    .HasDefaultValueSql("((103))");

                entity.Property(e => e.Tamcol07)
                    .HasColumnName("tamcol07")
                    .HasDefaultValueSql("((50))");

                entity.Property(e => e.Tamcol08)
                    .HasColumnName("tamcol08")
                    .HasDefaultValueSql("((23))");

                entity.Property(e => e.Tamcol09)
                    .HasColumnName("tamcol09")
                    .HasDefaultValueSql("((96))");

                entity.Property(e => e.Tamcol10)
                    .HasColumnName("tamcol10")
                    .HasDefaultValueSql("((75))");

                entity.Property(e => e.Tamcol11)
                    .HasColumnName("tamcol11")
                    .HasDefaultValueSql("((71))");

                entity.Property(e => e.Tamcol12)
                    .HasColumnName("tamcol12")
                    .HasDefaultValueSql("((63))");

                entity.Property(e => e.Tamcol13)
                    .HasColumnName("tamcol13")
                    .HasDefaultValueSql("((75))");

                entity.Property(e => e.Tamcol14)
                    .HasColumnName("tamcol14")
                    .HasDefaultValueSql("((250))");

                entity.Property(e => e.Tamcol15)
                    .HasColumnName("tamcol15")
                    .HasDefaultValueSql("((75))");

                entity.Property(e => e.Tamcol16).HasColumnName("tamcol16");

                entity.Property(e => e.Tamcol17).HasColumnName("tamcol17");

                entity.Property(e => e.Tamcol18).HasColumnName("tamcol18");

                entity.Property(e => e.Tamcol19).HasColumnName("tamcol19");

                entity.Property(e => e.Tamcol20).HasColumnName("tamcol20");

                entity.Property(e => e.Tax)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TotFlete)
                    .IsRequired()
                    .HasColumnName("tot_flete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.VcoCli)
                    .IsRequired()
                    .HasColumnName("vco_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.VcoTran)
                    .IsRequired()
                    .HasColumnName("vco_tran")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.VcoVen)
                    .IsRequired()
                    .HasColumnName("vco_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.VformaPag)
                    .IsRequired()
                    .HasColumnName("vforma_pag")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.Vmoneda)
                    .IsRequired()
                    .HasColumnName("vmoneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('BS')");

                entity.Property(e => e.Vreng3)
                    .IsRequired()
                    .HasColumnName("vreng_3")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.Vreng4)
                    .HasColumnName("vreng_4")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Vsucursal)
                    .IsRequired()
                    .HasColumnName("vsucursal")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.Vtax)
                    .IsRequired()
                    .HasColumnName("vtax")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Ambmov>(entity =>
            {
                entity.HasKey(e => new { e.AmbUsua, e.TipoMovi })
                    .HasName("PK__ambmov__35A8BAC8");

                entity.ToTable("ambmov");

                entity.Property(e => e.AmbUsua)
                    .HasColumnName("amb_usua")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoMovi)
                    .HasColumnName("tipo_movi")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.BancTarj)
                    .IsRequired()
                    .HasColumnName("banc_tarj")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.BancTarjd).HasColumnName("banc_tarjd");

                entity.Property(e => e.BancTarjv)
                    .IsRequired()
                    .HasColumnName("banc_tarjv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BtAnulav)
                    .IsRequired()
                    .HasColumnName("bt_anulav")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BtReverv)
                    .IsRequired()
                    .HasColumnName("bt_reverv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasColumnName("codigo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Codigod).HasColumnName("codigod");

                entity.Property(e => e.Codigov)
                    .IsRequired()
                    .HasColumnName("codigov")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CtaEgre)
                    .IsRequired()
                    .HasColumnName("cta_egre")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CtaEgred).HasColumnName("cta_egred");

                entity.Property(e => e.CtaEgrev)
                    .IsRequired()
                    .HasColumnName("cta_egrev")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Descripv)
                    .IsRequired()
                    .HasColumnName("descripv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.DocNumv)
                    .IsRequired()
                    .HasColumnName("doc_numv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Fechav)
                    .IsRequired()
                    .HasColumnName("fechav")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.FormaPag)
                    .IsRequired()
                    .HasColumnName("forma_pag")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FormaPagd).HasColumnName("forma_pagd");

                entity.Property(e => e.FormaPagv)
                    .IsRequired()
                    .HasColumnName("forma_pagv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Montov)
                    .IsRequired()
                    .HasColumnName("montov")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.MovNumv)
                    .IsRequired()
                    .HasColumnName("mov_numv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Tasav)
                    .IsRequired()
                    .HasColumnName("tasav")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TipoOp)
                    .IsRequired()
                    .HasColumnName("tipo_op")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoOpd).HasColumnName("tipo_opd");

                entity.Property(e => e.TipoOpv)
                    .IsRequired()
                    .HasColumnName("tipo_opv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Ambodp>(entity =>
            {
                entity.HasKey(e => e.AmbUsua);

                entity.ToTable("ambodp");

                entity.Property(e => e.AmbUsua)
                    .HasColumnName("amb_usua")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.BtAnulo).HasColumnName("bt_anulo");

                entity.Property(e => e.BtReversa).HasColumnName("bt_reversa");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Importar).HasColumnName("importar");

                entity.Property(e => e.MocoCed).HasColumnName("moco_ced");

                entity.Property(e => e.ModiOp).HasColumnName("modi_op");

                entity.Property(e => e.MofeEmis).HasColumnName("mofe_emis");

                entity.Property(e => e.MofeFin).HasColumnName("mofe_fin");

                entity.Property(e => e.MofeInic).HasColumnName("mofe_inic");

                entity.Property(e => e.MonumOdp).HasColumnName("monum_odp");

                entity.Property(e => e.Mopriorid).HasColumnName("mopriorid");

                entity.Property(e => e.Prioridad).HasColumnName("prioridad");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Vaprioridad).HasColumnName("vaprioridad");
            });

            modelBuilder.Entity<Ambordpa>(entity =>
            {
                entity.HasKey(e => e.AmbUsua)
                    .HasName("PK__ambordpa__2EBC916E");

                entity.ToTable("ambordpa");

                entity.Property(e => e.AmbUsua)
                    .HasColumnName("amb_usua")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.BtAnular)
                    .IsRequired()
                    .HasColumnName("bt_anular")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BtReactivar)
                    .IsRequired()
                    .HasColumnName("bt_reactivar")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Chequev)
                    .IsRequired()
                    .HasColumnName("chequev")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CodBen)
                    .IsRequired()
                    .HasColumnName("cod_ben")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CodBend).HasColumnName("cod_bend");

                entity.Property(e => e.CodBenv)
                    .IsRequired()
                    .HasColumnName("cod_benv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CodCaja)
                    .IsRequired()
                    .HasColumnName("cod_caja")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CodCajad).HasColumnName("cod_cajad");

                entity.Property(e => e.CodCajav)
                    .IsRequired()
                    .HasColumnName("cod_cajav")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CodCta)
                    .IsRequired()
                    .HasColumnName("cod_cta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CodCtad).HasColumnName("cod_ctad");

                entity.Property(e => e.CodCtav)
                    .IsRequired()
                    .HasColumnName("cod_ctav")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CtaEgre)
                    .IsRequired()
                    .HasColumnName("cta_egre")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CtaEgred).HasColumnName("cta_egred");

                entity.Property(e => e.CtaEgrev)
                    .IsRequired()
                    .HasColumnName("cta_egrev")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Descripv)
                    .IsRequired()
                    .HasColumnName("descripv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Detallev)
                    .IsRequired()
                    .HasColumnName("detallev")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecPagv)
                    .IsRequired()
                    .HasColumnName("fec_pagv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Fechav)
                    .IsRequired()
                    .HasColumnName("fechav")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.FormaPag)
                    .IsRequired()
                    .HasColumnName("forma_pag")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FormaPagd).HasColumnName("forma_pagd");

                entity.Property(e => e.FormaPagv)
                    .IsRequired()
                    .HasColumnName("forma_pagv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Impriv)
                    .IsRequired()
                    .HasColumnName("impriv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Islrv)
                    .IsRequired()
                    .HasColumnName("islrv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Monedad).HasColumnName("monedad");

                entity.Property(e => e.Monedav)
                    .IsRequired()
                    .HasColumnName("monedav")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Montov)
                    .IsRequired()
                    .HasColumnName("montov")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.OrdNumv)
                    .IsRequired()
                    .HasColumnName("ord_numv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Pago1v)
                    .IsRequired()
                    .HasColumnName("pago1v")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Pago2v)
                    .IsRequired()
                    .HasColumnName("pago2v")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Permodret).HasColumnName("permodret");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Tasav)
                    .IsRequired()
                    .HasColumnName("tasav")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoImpd).HasColumnName("tipo_impd");

                entity.Property(e => e.TipoImpv)
                    .IsRequired()
                    .HasColumnName("tipo_impv")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Ambpar>(entity =>
            {
                entity.HasKey(e => e.AmbUsua);

                entity.ToTable("ambpar");

                entity.Property(e => e.AmbUsua)
                    .HasColumnName("amb_usua")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FallaFut)
                    .IsRequired()
                    .HasColumnName("falla_fut")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.FallaNum)
                    .IsRequired()
                    .HasColumnName("falla_num")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Ambreq>(entity =>
            {
                entity.HasKey(e => e.AmbUsua)
                    .IsClustered(false);

                entity.ToTable("ambreq");

                entity.HasIndex(e => e.AmbUsua)
                    .HasName("iamb_usua");

                entity.Property(e => e.AmbUsua)
                    .HasColumnName("amb_usua")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.AlmaDes1)
                    .IsRequired()
                    .HasColumnName("alma_des")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.AlmaOri1)
                    .IsRequired()
                    .HasColumnName("alma_ori")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Almades)
                    .IsRequired()
                    .HasColumnName("almades")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Almaori)
                    .IsRequired()
                    .HasColumnName("almaori")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Almdesd)
                    .IsRequired()
                    .HasColumnName("almdesd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Almorid)
                    .IsRequired()
                    .HasColumnName("almorid")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BtAnula)
                    .IsRequired()
                    .HasColumnName("bt_anula")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BtReversa)
                    .IsRequired()
                    .HasColumnName("bt_reversa")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BtSer)
                    .IsRequired()
                    .HasColumnName("bt_ser")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Confirma)
                    .IsRequired()
                    .HasColumnName("confirma")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Desconfima)
                    .IsRequired()
                    .HasColumnName("desconfima")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Entregar)
                    .IsRequired()
                    .HasColumnName("entregar")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Fecha)
                    .IsRequired()
                    .HasColumnName("fecha")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Motivo)
                    .IsRequired()
                    .HasColumnName("motivo")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.OdpNum)
                    .IsRequired()
                    .HasColumnName("odp_num")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.PLotefec).HasColumnName("p_lotefec");

                entity.Property(e => e.PstockNeg)
                    .IsRequired()
                    .HasColumnName("pstock_neg")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ReqNum)
                    .IsRequired()
                    .HasColumnName("req_num")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Solicitar)
                    .IsRequired()
                    .HasColumnName("solicitar")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.StockNeg)
                    .IsRequired()
                    .HasColumnName("stock_neg")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((0)))");
            });

            modelBuilder.Entity<Ambtras>(entity =>
            {
                entity.HasKey(e => e.AmbUsua);

                entity.ToTable("ambtras");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("IX_ambtras");

                entity.Property(e => e.AmbUsua)
                    .HasColumnName("amb_usua")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.AlmaDes1)
                    .IsRequired()
                    .HasColumnName("alma_des")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.AlmaOri1)
                    .IsRequired()
                    .HasColumnName("alma_ori")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Almades)
                    .IsRequired()
                    .HasColumnName("almades")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Almaori)
                    .IsRequired()
                    .HasColumnName("almaori")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Almdesd).HasColumnName("almdesd");

                entity.Property(e => e.Almorid).HasColumnName("almorid");

                entity.Property(e => e.BtAnula)
                    .IsRequired()
                    .HasColumnName("bt_anula")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BtReversa)
                    .IsRequired()
                    .HasColumnName("bt_reversa")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BtSer)
                    .IsRequired()
                    .HasColumnName("bt_ser")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Confirma)
                    .IsRequired()
                    .HasColumnName("confirma")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Desconfima)
                    .IsRequired()
                    .HasColumnName("desconfima")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Fecha)
                    .IsRequired()
                    .HasColumnName("fecha")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Motivo)
                    .IsRequired()
                    .HasColumnName("motivo")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.PLotefec).HasColumnName("p_lotefec");

                entity.Property(e => e.PstockNeg)
                    .IsRequired()
                    .HasColumnName("pstock_neg")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.StockNeg)
                    .IsRequired()
                    .HasColumnName("stock_neg")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TrasNum)
                    .IsRequired()
                    .HasColumnName("tras_num")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.CoSucuNavigation)
                    .WithMany(p => p.Ambtras)
                    .HasForeignKey(d => d.CoSucu)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ambtras_almacen");
            });

            modelBuilder.Entity<Aranc>(entity =>
            {
                entity.HasKey(e => e.CoArt);

                entity.ToTable("aranc");

                entity.Property(e => e.CoArt)
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Calidad)
                    .IsRequired()
                    .HasColumnName("calidad")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAra)
                    .IsRequired()
                    .HasColumnName("co_ara")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesAra)
                    .IsRequired()
                    .HasColumnName("des_ara")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Nivel)
                    .IsRequired()
                    .HasColumnName("nivel")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PorcAra)
                    .HasColumnName("porc_ara")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithOne(p => p.Aranc)
                    .HasForeignKey<Aranc>(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_aranc_art");
            });

            modelBuilder.Entity<Art>(entity =>
            {
                entity.HasKey(e => e.CoArt)
                    .HasName("art_co_art");

                entity.ToTable("art");

                entity.HasIndex(e => e.ArtDes)
                    .HasName("iart_des");

                entity.HasIndex(e => e.CoCat)
                    .HasName("ico_cat");

                entity.HasIndex(e => e.CoColor)
                    .HasName("ico_color");

                entity.HasIndex(e => e.CoLin)
                    .HasName("ico_lin");

                entity.HasIndex(e => e.CoProv)
                    .HasName("ico_prov");

                entity.HasIndex(e => e.Modelo)
                    .HasName("modelo");

                entity.HasIndex(e => e.Procedenci)
                    .HasName("iprocedenc");

                entity.HasIndex(e => e.Ref)
                    .HasName("ref");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_16055143")
                    .IsUnique();

                entity.HasIndex(e => e.SuniVenta)
                    .HasName("isuni_vent");

                entity.HasIndex(e => e.TipoImp)
                    .HasName("itipo_imp");

                entity.HasIndex(e => e.UniVenta)
                    .HasName("iuni_venta");

                entity.HasIndex(e => new { e.CoSubl, e.CoLin })
                    .HasName("ico_subl");

                entity.Property(e => e.CoArt)
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AlmPrin)
                    .IsRequired()
                    .HasColumnName("alm_prin")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Anulado).HasColumnName("anulado");

                entity.Property(e => e.ArtDes)
                    .IsRequired()
                    .HasColumnName("art_des")
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Atributo1).HasColumnName("atributo1");

                entity.Property(e => e.Atributo2).HasColumnName("atributo2");

                entity.Property(e => e.Atributo3).HasColumnName("atributo3");

                entity.Property(e => e.Atributo4).HasColumnName("atributo4");

                entity.Property(e => e.Atributo5).HasColumnName("atributo5");

                entity.Property(e => e.Atributo6).HasColumnName("atributo6");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CanAgr)
                    .HasColumnName("can_agr")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Capacidad)
                    .HasColumnName("capacidad")
                    .HasColumnType("decimal(18, 3)");

                entity.Property(e => e.CoCat)
                    .IsRequired()
                    .HasColumnName("co_cat")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoColor)
                    .IsRequired()
                    .HasColumnName("co_color")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoImp)
                    .IsRequired()
                    .HasColumnName("co_imp")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoLin)
                    .IsRequired()
                    .HasColumnName("co_lin")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoProv)
                    .IsRequired()
                    .HasColumnName("co_prov")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSubl)
                    .IsRequired()
                    .HasColumnName("co_subl")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Compuesto).HasColumnName("compuesto");

                entity.Property(e => e.CosMerc)
                    .HasColumnName("cos_merc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CosProv)
                    .HasColumnName("cos_prov")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CosUnAn)
                    .HasColumnName("cos_un_an")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.DiasRepos).HasColumnName("dias_repos");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.EquiUni1)
                    .HasColumnName("equi_uni1")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.EquiUni2)
                    .HasColumnName("equi_uni2")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.EquiUni3)
                    .HasColumnName("equi_uni3")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.FCost)
                    .HasColumnName("f_cost")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecCosAn)
                    .HasColumnName("fec_cos_an")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecCosDo)
                    .HasColumnName("fec_cos_do")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecCosMe)
                    .HasColumnName("fec_cos_me")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecCosP2)
                    .HasColumnName("fec_cos_p2")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecCosPr)
                    .HasColumnName("fec_cos_pr")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecDesP5)
                    .HasColumnName("fec_des_p5")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecHasP5)
                    .HasColumnName("fec_has_p5")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecPrec2)
                    .HasColumnName("fec_prec_2")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecPrec3)
                    .HasColumnName("fec_prec_3")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecPrec4)
                    .HasColumnName("fec_prec_4")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecPrec5)
                    .HasColumnName("fec_prec_5")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecPrecV)
                    .HasColumnName("fec_prec_v")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecProOm)
                    .HasColumnName("fec_pro_om")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecUltCo)
                    .HasColumnName("fec_ult_co")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecUltOm)
                    .HasColumnName("fec_ult_om")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FechaReg)
                    .HasColumnName("fecha_reg")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Fisico).HasColumnName("fisico");

                entity.Property(e => e.Garantia)
                    .IsRequired()
                    .HasColumnName("garantia")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.GradoAl)
                    .HasColumnName("grado_al")
                    .HasColumnType("decimal(10, 2)");

                entity.Property(e => e.IArtDes)
                    .IsRequired()
                    .HasColumnName("i_art_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Imagen1)
                    .IsRequired()
                    .HasColumnName("imagen1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Imagen2)
                    .IsRequired()
                    .HasColumnName("imagen2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Item)
                    .IsRequired()
                    .HasColumnName("item")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Lote).HasColumnName("lote");

                entity.Property(e => e.ManjSer).HasColumnName("manj_ser");

                entity.Property(e => e.Margen1)
                    .HasColumnName("margen1")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Margen2)
                    .HasColumnName("margen2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Margen3)
                    .HasColumnName("margen3")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Margen4)
                    .HasColumnName("margen4")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Margen5)
                    .HasColumnName("margen5")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MargenMax)
                    .HasColumnName("margen_max")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Modelo)
                    .IsRequired()
                    .HasColumnName("modelo")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MonIlc)
                    .HasColumnName("mon_ilc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MontComi)
                    .HasColumnName("mont_comi")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MontCos)
                    .HasColumnName("mont_cos")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MontGas)
                    .HasColumnName("mont_gas")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Movil).HasColumnName("movil");

                entity.Property(e => e.Peso)
                    .HasColumnName("peso")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Picture)
                    .HasColumnName("picture")
                    .HasColumnType("image");

                entity.Property(e => e.Pie)
                    .HasColumnName("pie")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcCos)
                    .HasColumnName("porc_cos")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PorcGas)
                    .HasColumnName("porc_gas")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PrecAgr1)
                    .HasColumnName("prec_agr1")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PrecAgr2)
                    .HasColumnName("prec_agr2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PrecAgr3)
                    .HasColumnName("prec_agr3")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PrecAgr4)
                    .HasColumnName("prec_agr4")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PrecAgr5)
                    .HasColumnName("prec_agr5")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PrecOm).HasColumnName("prec_om");

                entity.Property(e => e.PrecVta1)
                    .HasColumnName("prec_vta1")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PrecVta2)
                    .HasColumnName("prec_vta2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PrecVta3)
                    .HasColumnName("prec_vta3")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PrecVta4)
                    .HasColumnName("prec_vta4")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PrecVta5)
                    .HasColumnName("prec_vta5")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Procedenci)
                    .IsRequired()
                    .HasColumnName("procedenci")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PtoPedido)
                    .HasColumnName("pto_pedido")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PuntCli)
                    .HasColumnName("punt_cli")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PuntPro)
                    .HasColumnName("punt_pro")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Ref)
                    .IsRequired()
                    .HasColumnName("ref")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.RelEmp)
                    .HasColumnName("rel_emp")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.RelacAut).HasColumnName("relac_aut");

                entity.Property(e => e.RelacComp)
                    .HasColumnName("relac_comp")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.RelacVent)
                    .HasColumnName("relac_vent")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.RowId)
                    .IsRequired()
                    .HasColumnName("row_id")
                    .IsRowVersion()
                    .IsConcurrencyToken();

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Serialp)
                    .IsRequired()
                    .HasColumnName("serialp")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.SstockAct)
                    .HasColumnName("sstock_act")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.SstockCom)
                    .HasColumnName("sstock_com")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.SstockDes)
                    .HasColumnName("sstock_des")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.SstockLle)
                    .HasColumnName("sstock_lle")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.StockAct)
                    .HasColumnName("stock_act")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.StockCom)
                    .HasColumnName("stock_com")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.StockDes)
                    .HasColumnName("stock_des")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.StockLle)
                    .HasColumnName("stock_lle")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.StockMax)
                    .HasColumnName("stock_max")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.StockMin)
                    .HasColumnName("stock_min")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.SuniCompr)
                    .IsRequired()
                    .HasColumnName("suni_compr")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.SuniRelac)
                    .HasColumnName("suni_relac")
                    .HasColumnType("decimal(18, 3)");

                entity.Property(e => e.SuniVenta)
                    .IsRequired()
                    .HasColumnName("suni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasColumnName("tipo")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoCos)
                    .IsRequired()
                    .HasColumnName("tipo_cos")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoLicor)
                    .IsRequired()
                    .HasColumnName("tipo_licor")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TuniVenta)
                    .IsRequired()
                    .HasColumnName("tuni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Ubicacion)
                    .IsRequired()
                    .HasColumnName("ubicacion")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.UltCosDo)
                    .HasColumnName("ult_cos_do")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UniCompra)
                    .IsRequired()
                    .HasColumnName("uni_compra")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.UniEmp)
                    .IsRequired()
                    .HasColumnName("uni_emp")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.UniRelac)
                    .HasColumnName("uni_relac")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Valido).HasColumnName("valido");

                entity.Property(e => e.Vatributo1)
                    .IsRequired()
                    .HasColumnName("vatributo1")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Vatributo2)
                    .IsRequired()
                    .HasColumnName("vatributo2")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Vatributo3)
                    .IsRequired()
                    .HasColumnName("vatributo3")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Vatributo4)
                    .IsRequired()
                    .HasColumnName("vatributo4")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Vatributo5)
                    .IsRequired()
                    .HasColumnName("vatributo5")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Vatributo6)
                    .IsRequired()
                    .HasColumnName("vatributo6")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoCatNavigation)
                    .WithMany(p => p.Art)
                    .HasForeignKey(d => d.CoCat)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_art_cat_art");

                entity.HasOne(d => d.CoColorNavigation)
                    .WithMany(p => p.Art)
                    .HasForeignKey(d => d.CoColor)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_art_colores");

                entity.HasOne(d => d.CoLinNavigation)
                    .WithMany(p => p.Art)
                    .HasForeignKey(d => d.CoLin)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_art_lin_art");

                entity.HasOne(d => d.CoProvNavigation)
                    .WithMany(p => p.Art)
                    .HasForeignKey(d => d.CoProv)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_art_prov");

                entity.HasOne(d => d.ProcedenciNavigation)
                    .WithMany(p => p.Art)
                    .HasForeignKey(d => d.Procedenci)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_art_proceden");

                entity.HasOne(d => d.SuniVentaNavigation)
                    .WithMany(p => p.ArtSuniVentaNavigation)
                    .HasForeignKey(d => d.SuniVenta)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_art_unidades1");

                entity.HasOne(d => d.TipoImpNavigation)
                    .WithMany(p => p.Art)
                    .HasForeignKey(d => d.TipoImp)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_art_tabulado");

                entity.HasOne(d => d.UniVentaNavigation)
                    .WithMany(p => p.ArtUniVentaNavigation)
                    .HasForeignKey(d => d.UniVenta)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_art_unidades");

                entity.HasOne(d => d.Co)
                    .WithMany(p => p.Art)
                    .HasForeignKey(d => new { d.CoSubl, d.CoLin })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_art_sub_lin");
            });

            modelBuilder.Entity<ArtExt>(entity =>
            {
                entity.HasKey(e => e.CoArt);

                entity.ToTable("art_ext");

                entity.Property(e => e.CoArt)
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime");

                entity.Property(e => e.PPrecMax).HasColumnName("p_prec_max");

                entity.Property(e => e.PorcMax)
                    .HasColumnName("porc_max")
                    .HasColumnType("decimal(18, 2)");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithOne(p => p.ArtExt)
                    .HasForeignKey<ArtExt>(d => d.CoArt)
                    .HasConstraintName("FK_art_ext_art");
            });

            modelBuilder.Entity<ArtMargenGanancias>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("ArtMargenGanancias");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PPrecMax).HasColumnName("p_prec_max");

                entity.Property(e => e.PorcMax)
                    .HasColumnName("porc_max")
                    .HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<Auxiliar>(entity =>
            {
                entity.HasKey(e => new { e.NomAux, e.GrupAux });

                entity.ToTable("auxiliar");

                entity.Property(e => e.NomAux)
                    .HasColumnName("nom_aux")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.GrupAux)
                    .HasColumnName("grup_aux")
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CachAux).HasColumnName("cach_aux");

                entity.Property(e => e.DesAux)
                    .IsRequired()
                    .HasColumnName("des_aux")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FormAux)
                    .IsRequired()
                    .HasColumnName("form_aux")
                    .HasMaxLength(254)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TipoAux)
                    .IsRequired()
                    .HasColumnName("tipo_aux")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.ValAux)
                    .IsRequired()
                    .HasColumnName("val_aux")
                    .HasMaxLength(254)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Bancos>(entity =>
            {
                entity.HasKey(e => e.CoBan)
                    .HasName("bancos_co_ban");

                entity.ToTable("bancos");

                entity.HasIndex(e => e.DesBan)
                    .HasName("ides_ban");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_144055599")
                    .IsUnique();

                entity.Property(e => e.CoBan)
                    .HasColumnName("co_ban")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesBan)
                    .IsRequired()
                    .HasColumnName("des_ban")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Plazo1)
                    .HasColumnName("plazo1")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Plazo2)
                    .HasColumnName("plazo2")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Plazo3)
                    .HasColumnName("plazo3")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Plazo4)
                    .HasColumnName("plazo4")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.RowId)
                    .IsRequired()
                    .HasColumnName("row_id")
                    .IsRowVersion()
                    .IsConcurrencyToken();

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Telefonos)
                    .IsRequired()
                    .HasColumnName("telefonos")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Benefici>(entity =>
            {
                entity.HasKey(e => e.CodBen)
                    .HasName("benefici_cod_ben");

                entity.ToTable("benefici");

                entity.HasIndex(e => e.BenDes)
                    .HasName("iben_des");

                entity.HasIndex(e => e.CoTab)
                    .HasName("CO_TAB");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_224055884")
                    .IsUnique();

                entity.Property(e => e.CodBen)
                    .HasColumnName("cod_ben")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.BenDes)
                    .IsRequired()
                    .HasColumnName("ben_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoTab).HasColumnName("CO_TAB");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Direc1)
                    .IsRequired()
                    .HasColumnName("direc1")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Nit)
                    .IsRequired()
                    .HasColumnName("nit")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rif)
                    .IsRequired()
                    .HasColumnName("rif")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Telefono)
                    .IsRequired()
                    .HasColumnName("telefono")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoPer)
                    .IsRequired()
                    .HasColumnName("tipo_per")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Cajas>(entity =>
            {
                entity.HasKey(e => e.CodCaja)
                    .HasName("cajas_cod_caja");

                entity.ToTable("cajas");

                entity.HasIndex(e => e.Descrip)
                    .HasName("idescrip");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_304056169")
                    .IsUnique();

                entity.Property(e => e.CodCaja)
                    .HasColumnName("cod_caja")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Bitdatos)
                    .IsRequired()
                    .HasColumnName("bitdatos")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('8')");

                entity.Property(e => e.Bitdatos2)
                    .IsRequired()
                    .HasColumnName("bitdatos2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('8')");

                entity.Property(e => e.Bitstop)
                    .IsRequired()
                    .HasColumnName("bitstop")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('1')");

                entity.Property(e => e.Bitstop2)
                    .IsRequired()
                    .HasColumnName("bitstop2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('1')");

                entity.Property(e => e.Cajapri).HasColumnName("cajapri");

                entity.Property(e => e.Cajapvta).HasColumnName("cajapvta");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DebAnt)
                    .HasColumnName("deb_ant")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Gavetaser).HasColumnName("gavetaser");

                entity.Property(e => e.Gcadena)
                    .IsRequired()
                    .HasColumnName("gcadena")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('AA')");

                entity.Property(e => e.HabAnt)
                    .HasColumnName("hab_ant")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Impfis)
                    .IsRequired()
                    .HasColumnName("impfis")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Inactivo).HasColumnName("inactivo");

                entity.Property(e => e.MesIni)
                    .HasColumnName("mes_ini")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Mvisa).HasColumnName("mvisa");

                entity.Property(e => e.Paridad)
                    .IsRequired()
                    .HasColumnName("paridad")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('N')");

                entity.Property(e => e.Paridad2)
                    .IsRequired()
                    .HasColumnName("paridad2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('N')");

                entity.Property(e => e.Puerto)
                    .IsRequired()
                    .HasColumnName("puerto")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('1')");

                entity.Property(e => e.Puerto2)
                    .IsRequired()
                    .HasColumnName("puerto2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('1')");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.SaldoA)
                    .HasColumnName("saldo_a")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.SaldoE)
                    .HasColumnName("saldo_e")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.SaldoEi)
                    .HasColumnName("saldo_ei")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.SaldoI)
                    .HasColumnName("saldo_i")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Sidisplay).HasColumnName("sidisplay");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Velocidad)
                    .IsRequired()
                    .HasColumnName("velocidad")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' 9600')");

                entity.Property(e => e.Velocidad2)
                    .IsRequired()
                    .HasColumnName("velocidad2")
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' 9600')");

                entity.Property(e => e.Vpostipo).HasColumnName("vpostipo");
            });

            modelBuilder.Entity<CatArt>(entity =>
            {
                entity.HasKey(e => e.CoCat)
                    .HasName("cat_art_co_cat");

                entity.ToTable("cat_art");

                entity.HasIndex(e => e.CatDes)
                    .HasName("icat_des");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_384056454")
                    .IsUnique();

                entity.Property(e => e.CoCat)
                    .HasColumnName("co_cat")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CatDes)
                    .IsRequired()
                    .HasColumnName("cat_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoImun)
                    .IsRequired()
                    .HasColumnName("co_imun")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoReten)
                    .IsRequired()
                    .HasColumnName("co_reten")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Movil).HasColumnName("movil");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.RowId)
                    .IsRequired()
                    .HasColumnName("row_id")
                    .IsRowVersion()
                    .IsConcurrencyToken();

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Chequeras>(entity =>
            {
                entity.HasKey(e => e.CoChra)
                    .HasName("PK_Chequeras");

                entity.ToTable("chequeras");

                entity.Property(e => e.CoChra)
                    .HasColumnName("Co_Chra")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.ChGen).HasColumnName("Ch_Gen");

                entity.Property(e => e.ChraDes)
                    .IsRequired()
                    .HasColumnName("Chra_Des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("Co_Sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("Co_Us_El")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("Co_Us_In")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("Co_Us_Mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CodCta)
                    .IsRequired()
                    .HasColumnName("cod_cta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("Fe_Us_El")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("Fe_Us_In")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("Fe_Us_Mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FechaRe)
                    .HasColumnName("Fecha_Re")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.NumChP).HasColumnName("Num_Ch_P");

                entity.Property(e => e.NumChU).HasColumnName("Num_Ch_U");

                entity.Property(e => e.Respons)
                    .IsRequired()
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CodCtaNavigation)
                    .WithMany(p => p.Chequeras)
                    .HasForeignKey(d => d.CodCta)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Chequeras_cuentas");
            });

            modelBuilder.Entity<Cheques>(entity =>
            {
                entity.HasKey(e => new { e.CoCheq, e.CoChra })
                    .HasName("PK_Cheques");

                entity.ToTable("cheques");

                entity.Property(e => e.CoCheq)
                    .HasColumnName("Co_Cheq")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoChra)
                    .HasColumnName("Co_Chra")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("Co_Us_El")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("Co_Us_In")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("Co_Us_Mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Coment)
                    .IsRequired()
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.EntregA)
                    .IsRequired()
                    .HasColumnName("Entreg_a")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("Fe_Us_El")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("Fe_Us_In")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("Fe_Us_Mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("Fec_emis")
                    .HasColumnType("datetime");

                entity.Property(e => e.FecEnt)
                    .HasColumnName("Fec_ent")
                    .HasColumnType("datetime");

                entity.Property(e => e.Monto).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MovNum).HasColumnName("mov_num");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoChraNavigation)
                    .WithMany(p => p.Cheques)
                    .HasForeignKey(d => d.CoChra)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Cheques_Chequeras");
            });

            modelBuilder.Entity<Clientes>(entity =>
            {
                entity.HasKey(e => e.CoCli)
                    .HasName("clientes_co_cli");

                entity.ToTable("clientes");

                entity.HasIndex(e => e.CliDes)
                    .HasName("icli_des");

                entity.HasIndex(e => e.CoSeg)
                    .HasName("ico_seg");

                entity.HasIndex(e => e.CoVen)
                    .HasName("ico_ven");

                entity.HasIndex(e => e.CoZon)
                    .HasName("ico_zon");

                entity.HasIndex(e => e.Login)
                    .HasName("IX_clientes");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1891537822")
                    .IsUnique();

                entity.HasIndex(e => e.Tipo)
                    .HasName("itipo");

                entity.Property(e => e.CoCli)
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Ciudad)
                    .IsRequired()
                    .HasColumnName("ciudad")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CliDes)
                    .IsRequired()
                    .HasColumnName("cli_des")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoIngr)
                    .IsRequired()
                    .HasColumnName("co_ingr")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoPais)
                    .IsRequired()
                    .HasColumnName("co_pais")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSeg)
                    .IsRequired()
                    .HasColumnName("co_seg")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoTab).HasColumnName("co_tab");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoZon)
                    .IsRequired()
                    .HasColumnName("co_zon")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Contribu).HasColumnName("contribu");

                entity.Property(e => e.ContribuE).HasColumnName("contribu_e");

                entity.Property(e => e.DescGlob)
                    .HasColumnName("desc_glob")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.DescPpago)
                    .HasColumnName("desc_ppago")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.DirEnt2)
                    .IsRequired()
                    .HasColumnName("dir_ent2")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Direc1)
                    .IsRequired()
                    .HasColumnName("direc1")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Direc2)
                    .IsRequired()
                    .HasColumnName("direc2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Domingo).HasColumnName("domingo");

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasColumnName("email")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Estado)
                    .IsRequired()
                    .HasColumnName("estado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('A')");

                entity.Property(e => e.FacUltVe).HasColumnName("fac_ult_ve");

                entity.Property(e => e.Fax)
                    .IsRequired()
                    .HasColumnName("fax")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecUltVe)
                    .HasColumnName("fec_ult_ve")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FechaReg)
                    .HasColumnName("fecha_reg")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FrecuVist)
                    .IsRequired()
                    .HasColumnName("frecu_vist")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.HorarCaja)
                    .IsRequired()
                    .HasColumnName("horar_caja")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Id).HasDefaultValueSql("((-1))");

                entity.Property(e => e.Inactivo).HasColumnName("inactivo");

                entity.Property(e => e.Iva)
                    .HasColumnName("iva")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Jueves).HasColumnName("jueves");

                entity.Property(e => e.Juridico).HasColumnName("juridico");

                entity.Property(e => e.Login)
                    .IsRequired()
                    .HasColumnName("login")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Lunes).HasColumnName("lunes");

                entity.Property(e => e.Martes).HasColumnName("martes");

                entity.Property(e => e.Matriz)
                    .IsRequired()
                    .HasColumnName("matriz")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Miercoles).HasColumnName("miercoles");

                entity.Property(e => e.MontCre)
                    .HasColumnName("mont_cre")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.NetUltVe)
                    .HasColumnName("net_ult_ve")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Nit)
                    .IsRequired()
                    .HasColumnName("nit")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Password)
                    .IsRequired()
                    .HasColumnName("password")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PlazPag).HasColumnName("plaz_pag");

                entity.Property(e => e.PorcEsp).HasColumnName("porc_esp");

                entity.Property(e => e.Puntaje).HasColumnName("puntaje");

                entity.Property(e => e.Respons)
                    .IsRequired()
                    .HasColumnName("respons")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rif)
                    .IsRequired()
                    .HasColumnName("rif")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.RowId)
                    .IsRequired()
                    .HasColumnName("row_id")
                    .IsRowVersion()
                    .IsConcurrencyToken();

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Sabado).HasColumnName("sabado");

                entity.Property(e => e.Saldo).HasColumnName("saldo");

                entity.Property(e => e.SaldoIni).HasColumnName("saldo_ini");

                entity.Property(e => e.Salestax)
                    .IsRequired()
                    .HasColumnName("salestax")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Serialp)
                    .IsRequired()
                    .HasColumnName("serialp")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.Sincredito).HasColumnName("sincredito");

                entity.Property(e => e.Telefonos)
                    .IsRequired()
                    .HasColumnName("telefonos")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasColumnName("tipo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoAdi)
                    .HasColumnName("tipo_adi")
                    .HasColumnType("numeric(1, 0)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TipoIva)
                    .IsRequired()
                    .HasColumnName("tipo_iva")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoPer)
                    .IsRequired()
                    .HasColumnName("tipo_per")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Valido).HasColumnName("valido");

                entity.Property(e => e.Viernes).HasColumnName("viernes");

                entity.Property(e => e.Website)
                    .IsRequired()
                    .HasColumnName("website")
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Zip)
                    .IsRequired()
                    .HasColumnName("zip")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoIngrNavigation)
                    .WithMany(p => p.Clientes)
                    .HasForeignKey(d => d.CoIngr)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_clientes_cta_ingr");

                entity.HasOne(d => d.CoSegNavigation)
                    .WithMany(p => p.Clientes)
                    .HasForeignKey(d => d.CoSeg)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_clientes_segmento");

                entity.HasOne(d => d.CoVenNavigation)
                    .WithMany(p => p.Clientes)
                    .HasForeignKey(d => d.CoVen)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_clientes_vendedor");

                entity.HasOne(d => d.CoZonNavigation)
                    .WithMany(p => p.Clientes)
                    .HasForeignKey(d => d.CoZon)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_clientes_zona");

                entity.HasOne(d => d.TipoNavigation)
                    .WithMany(p => p.Clientes)
                    .HasForeignKey(d => d.Tipo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_clientes_tipo_cli");
            });

            modelBuilder.Entity<CobRengpago>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("cob_rengpago");

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CobNum).HasColumnName("cob_num");

                entity.Property(e => e.FecCob)
                    .HasColumnName("fec_cob")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MontDoc)
                    .HasColumnName("mont_doc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Monto)
                    .HasColumnName("monto")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Recibo)
                    .IsRequired()
                    .HasColumnName("recibo")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TipCob)
                    .IsRequired()
                    .HasColumnName("tip_cob")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<CobTmp>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("cob_tmp");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1317579732")
                    .IsUnique();

                entity.Property(e => e.Banco)
                    .IsRequired()
                    .HasColumnName("banco")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CobNum).HasColumnName("cob_num");

                entity.Property(e => e.CodCaja)
                    .IsRequired()
                    .HasColumnName("cod_caja")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesCaja)
                    .IsRequired()
                    .HasColumnName("des_caja")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FecCheq)
                    .IsRequired()
                    .HasColumnName("fec_cheq")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FechaVen)
                    .HasColumnName("fecha_ven")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Giro).HasColumnName("giro");

                entity.Property(e => e.MontCobro)
                    .IsRequired()
                    .HasColumnName("mont_cobro")
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MontDoc)
                    .IsRequired()
                    .HasColumnName("mont_doc")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MontoDppa)
                    .IsRequired()
                    .HasColumnName("monto_dppa")
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MontoRete)
                    .IsRequired()
                    .HasColumnName("monto_rete")
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Neto)
                    .IsRequired()
                    .HasColumnName("neto")
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NombreBan)
                    .IsRequired()
                    .HasColumnName("nombre_ban")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumDoc)
                    .IsRequired()
                    .HasColumnName("num_doc")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Numero)
                    .IsRequired()
                    .HasColumnName("numero")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Saldo)
                    .IsRequired()
                    .HasColumnName("saldo")
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.SinoPago)
                    .IsRequired()
                    .HasColumnName("sino_pago")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.SinoReten)
                    .IsRequired()
                    .HasColumnName("sino_reten")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipCob)
                    .IsRequired()
                    .HasColumnName("tip_cob")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Cobpvta>(entity =>
            {
                entity.HasKey(e => e.FactNum);

                entity.ToTable("cobpvta");

                entity.HasIndex(e => e.NumTurno)
                    .HasName("num_turno");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_10000")
                    .IsUnique();

                entity.Property(e => e.FactNum)
                    .HasColumnName("fact_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.BancTarj1)
                    .IsRequired()
                    .HasColumnName("banc_tarj1")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.BancTarj2)
                    .IsRequired()
                    .HasColumnName("banc_tarj2")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.BancTarj3)
                    .IsRequired()
                    .HasColumnName("banc_tarj3")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.BancTarj4)
                    .IsRequired()
                    .HasColumnName("banc_tarj4")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Cheq1).HasColumnName("cheq1");

                entity.Property(e => e.Cheq2).HasColumnName("cheq2");

                entity.Property(e => e.Clave1)
                    .IsRequired()
                    .HasColumnName("clave1")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Clave2)
                    .IsRequired()
                    .HasColumnName("clave2")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Clave3)
                    .IsRequired()
                    .HasColumnName("clave3")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Clave4)
                    .IsRequired()
                    .HasColumnName("clave4")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Cobrador)
                    .IsRequired()
                    .HasColumnName("cobrador")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DocNum1)
                    .IsRequired()
                    .HasColumnName("doc_num1")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DocNum2)
                    .IsRequired()
                    .HasColumnName("doc_num2")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DocNum3)
                    .IsRequired()
                    .HasColumnName("doc_num3")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DocNum4)
                    .IsRequired()
                    .HasColumnName("doc_num4")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Efec1).HasColumnName("efec1");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FechaChe1)
                    .HasColumnName("fecha_che1")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FechaChe2)
                    .HasColumnName("fecha_che2")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FechaChe3)
                    .HasColumnName("fecha_che3")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FechaChe4)
                    .HasColumnName("fecha_che4")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumTurno).HasColumnName("num_turno");

                entity.Property(e => e.Op1)
                    .IsRequired()
                    .HasColumnName("op1")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Op2)
                    .IsRequired()
                    .HasColumnName("op2")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Op3)
                    .IsRequired()
                    .HasColumnName("op3")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Op4)
                    .IsRequired()
                    .HasColumnName("op4")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Tarj1).HasColumnName("tarj1");

                entity.Property(e => e.Tarj2).HasColumnName("tarj2");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Total).HasColumnName("total");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Vuelto).HasColumnName("vuelto");
            });

            modelBuilder.Entity<Cobros>(entity =>
            {
                entity.HasKey(e => e.CobNum)
                    .HasName("cobros_cob_num");

                entity.ToTable("cobros");

                entity.HasIndex(e => e.CoCli)
                    .HasName("ico_cli");

                entity.HasIndex(e => e.CoVen)
                    .HasName("ico_ven");

                entity.HasIndex(e => e.FecCob)
                    .HasName("ifec_cob");

                entity.HasIndex(e => e.Moneda)
                    .HasName("imoneda");

                entity.HasIndex(e => e.NumTurno)
                    .HasName("IX_cobros");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_464056739")
                    .IsUnique();

                entity.HasIndex(e => new { e.Anulado, e.FecCob })
                    .HasName("IX_anulado_fec_cobro");

                entity.HasIndex(e => new { e.Feccom, e.Numcom })
                    .HasName("ifeccom_numcom");

                entity.Property(e => e.CobNum)
                    .HasColumnName("cob_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.AdelNum).HasColumnName("adel_num");

                entity.Property(e => e.Anulado).HasColumnName("anulado");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Devdinero).HasColumnName("devdinero");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Dppago)
                    .HasColumnName("dppago")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecCob)
                    .HasColumnName("fec_cob")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("('01/01/1900')");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MontNcr)
                    .HasColumnName("mont_ncr")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Monto)
                    .HasColumnName("monto")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Ncr).HasColumnName("ncr");

                entity.Property(e => e.NumDev).HasColumnName("num_dev");

                entity.Property(e => e.NumTurno).HasColumnName("num_turno");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.Origen)
                    .HasColumnName("origen")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.OrigenD)
                    .HasColumnName("origen_d")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Recargo).HasColumnName("recargo");

                entity.Property(e => e.Recibo)
                    .IsRequired()
                    .HasColumnName("recibo")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TcomiArt)
                    .HasColumnName("tcomi_art")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TcomiConc)
                    .HasColumnName("tcomi_conc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TcomiLine)
                    .HasColumnName("tcomi_line")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TcomiPorc)
                    .HasColumnName("tcomi_porc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoCliNavigation)
                    .WithMany(p => p.Cobros)
                    .HasForeignKey(d => d.CoCli)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_cobros_clientes");

                entity.HasOne(d => d.CoSucuNavigation)
                    .WithMany(p => p.Cobros)
                    .HasForeignKey(d => d.CoSucu)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_cobros_almacen");

                entity.HasOne(d => d.CoVenNavigation)
                    .WithMany(p => p.Cobros)
                    .HasForeignKey(d => d.CoVen)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_cobros_vendedor");

                entity.HasOne(d => d.MonedaNavigation)
                    .WithMany(p => p.Cobros)
                    .HasForeignKey(d => d.Moneda)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_cobros_moneda");
            });

            modelBuilder.Entity<Colores>(entity =>
            {
                entity.HasKey(e => e.CoCol)
                    .HasName("colores_co_col");

                entity.ToTable("colores");

                entity.HasIndex(e => e.DesCol)
                    .HasName("ides_col");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_560057081")
                    .IsUnique();

                entity.Property(e => e.CoCol)
                    .HasColumnName("co_col")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesCol)
                    .IsRequired()
                    .HasColumnName("des_col")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<ComiPre>(entity =>
            {
                entity.HasKey(e => new { e.TipoComi, e.TipoVen, e.TipoPrec, e.CoComi })
                    .HasName("PK__comi_pre__053A8D97");

                entity.ToTable("comi_pre");

                entity.HasIndex(e => e.CoComi)
                    .HasName("co_comi");

                entity.HasIndex(e => e.TipoComi)
                    .HasName("tipo_comi");

                entity.HasIndex(e => e.TipoPrec)
                    .HasName("tipo_prec");

                entity.HasIndex(e => e.TipoVen)
                    .HasName("tipo_ven");

                entity.Property(e => e.TipoComi)
                    .HasColumnName("tipo_comi")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoVen)
                    .HasColumnName("tipo_ven")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('A')");

                entity.Property(e => e.TipoPrec)
                    .HasColumnName("tipo_prec")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.CoComi)
                    .HasColumnName("co_comi")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Hasta1)
                    .HasColumnName("hasta1")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Hasta2)
                    .HasColumnName("hasta2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Hasta3)
                    .HasColumnName("hasta3")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Hasta4)
                    .HasColumnName("hasta4")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Hasta5)
                    .HasColumnName("hasta5")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Porc1)
                    .HasColumnName("porc1")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Porc2)
                    .HasColumnName("porc2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Porc3)
                    .HasColumnName("porc3")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Porc4)
                    .HasColumnName("porc4")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Porc5)
                    .HasColumnName("porc5")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Porc6)
                    .HasColumnName("porc6")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<CompDevo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Comp_devo");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Iva)
                    .HasColumnName("iva")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Iva2)
                    .HasColumnName("iva2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IvaDev)
                    .HasColumnName("iva_dev")
                    .HasColumnType("numeric(22, 6)");

                entity.Property(e => e.IvaFact)
                    .HasColumnName("iva_fact")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IvaRengDev)
                    .HasColumnName("iva_reng_dev")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.IvaRengFac)
                    .HasColumnName("iva_reng_fac")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.NetoDev)
                    .HasColumnName("neto_dev")
                    .HasColumnType("numeric(20, 8)");

                entity.Property(e => e.NetoFact)
                    .HasColumnName("neto_fact")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.Pendiente)
                    .HasColumnName("pendiente")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcDesc)
                    .IsRequired()
                    .HasColumnName("porc_desc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PrecVta)
                    .HasColumnName("prec_vta")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Procesado)
                    .HasColumnName("procesado")
                    .HasColumnType("decimal(38, 6)");

                entity.Property(e => e.RengNeto2)
                    .HasColumnName("reng_neto2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.RengNetoDev)
                    .HasColumnName("reng_neto_dev")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RengNetoFac)
                    .HasColumnName("reng_neto_fac")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasMaxLength(23)
                    .IsUnicode(false);

                entity.Property(e => e.Tasag)
                    .HasColumnName("tasag")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TipoDoc)
                    .IsRequired()
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TotBruto)
                    .HasColumnName("tot_bruto")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotBruto2)
                    .HasColumnName("tot_bruto2")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotNeto)
                    .HasColumnName("tot_neto")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotNeto2)
                    .HasColumnName("tot_neto2")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(20, 5)");

                entity.Property(e => e.TotalDev)
                    .HasColumnName("total_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<CompReng>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Comp_reng");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Iva)
                    .HasColumnName("iva")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Iva2)
                    .HasColumnName("iva2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IvaReng)
                    .HasColumnName("iva_reng")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente)
                    .HasColumnName("pendiente")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcDesc)
                    .IsRequired()
                    .HasColumnName("porc_desc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PrecVta)
                    .HasColumnName("prec_vta")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Procesado)
                    .HasColumnName("procesado")
                    .HasColumnType("decimal(38, 6)");

                entity.Property(e => e.RengNeto)
                    .HasColumnName("reng_neto")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RengNeto2)
                    .HasColumnName("reng_neto2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasMaxLength(23)
                    .IsUnicode(false);

                entity.Property(e => e.Tasag)
                    .HasColumnName("tasag")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TotBruto)
                    .HasColumnName("tot_bruto")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotBruto2)
                    .HasColumnName("tot_bruto2")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotNeto)
                    .HasColumnName("tot_neto")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotNeto2)
                    .HasColumnName("tot_neto2")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalDev)
                    .HasColumnName("total_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Compras>(entity =>
            {
                entity.HasKey(e => e.FactNum)
                    .HasName("compras_com_num");

                entity.ToTable("compras");

                entity.HasIndex(e => e.CoCli)
                    .HasName("ico_cli");

                entity.HasIndex(e => e.ComRelac)
                    .HasName("com_relac");

                entity.HasIndex(e => e.FecEmis)
                    .HasName("ifec_emis");

                entity.HasIndex(e => e.FormaPag)
                    .HasName("iforma_pag");

                entity.HasIndex(e => e.Moneda)
                    .HasName("imoneda");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_640057366")
                    .IsUnique();

                entity.HasIndex(e => e.Status)
                    .HasName("istatus");

                entity.HasIndex(e => new { e.Factura, e.CoCli })
                    .HasName("factu_com");

                entity.HasIndex(e => new { e.Feccom, e.Numcom })
                    .HasName("ifeccom_numcom");

                entity.Property(e => e.FactNum)
                    .HasColumnName("fact_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Anulada).HasColumnName("anulada");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoTran)
                    .IsRequired()
                    .HasColumnName("co_tran")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.ComRelac).HasColumnName("com_relac");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Contrib).HasColumnName("contrib");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DirEnt)
                    .IsRequired()
                    .HasColumnName("dir_ent")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Facgasto).HasColumnName("facgasto");

                entity.Property(e => e.Factura)
                    .IsRequired()
                    .HasColumnName("factura")
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecReg)
                    .HasColumnName("fec_reg")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),'01/01/1900',(104)))");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("('01/01/1900')");

                entity.Property(e => e.FormaPag)
                    .IsRequired()
                    .HasColumnName("forma_pag")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.GlobDesc)
                    .HasColumnName("glob_desc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpNum).HasColumnName("imp_num");

                entity.Property(e => e.Import).HasColumnName("import");

                entity.Property(e => e.Impresa).HasColumnName("impresa");

                entity.Property(e => e.InfImp)
                    .IsRequired()
                    .HasColumnName("inf_imp")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Iva)
                    .HasColumnName("iva")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IvaDev)
                    .HasColumnName("iva_dev")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MonIlc)
                    .HasColumnName("mon_ilc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MontoAdi)
                    .HasColumnName("monto_adi")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.NControl)
                    .IsRequired()
                    .HasColumnName("n_control")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Nit)
                    .IsRequired()
                    .HasColumnName("nit")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasColumnName("nombre")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.Numexpimp)
                    .IsRequired()
                    .HasColumnName("numexpimp")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Numplaexp)
                    .IsRequired()
                    .HasColumnName("numplaexp")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Origen)
                    .IsRequired()
                    .HasColumnName("origen")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.OrigenD)
                    .IsRequired()
                    .HasColumnName("origen_d")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Otros1)
                    .HasColumnName("otros1")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Otros2)
                    .HasColumnName("otros2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Otros3)
                    .HasColumnName("otros3")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcGdesc)
                    .IsRequired()
                    .HasColumnName("porc_gdesc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PorcReca)
                    .IsRequired()
                    .HasColumnName("porc_reca")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rif)
                    .IsRequired()
                    .HasColumnName("rif")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Saldo)
                    .HasColumnName("saldo")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Salestax)
                    .IsRequired()
                    .HasColumnName("salestax")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Seriales).HasColumnName("seriales");

                entity.Property(e => e.StaProd)
                    .HasColumnName("sta_prod")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasColumnName("status")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Tasag)
                    .HasColumnName("tasag")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasag10)
                    .HasColumnName("tasag10")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasag20)
                    .HasColumnName("tasag20")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Telefono)
                    .IsRequired()
                    .HasColumnName("telefono")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((60)))");

                entity.Property(e => e.TipoDis).HasColumnName("tipo_dis");

                entity.Property(e => e.TotBruto)
                    .HasColumnName("tot_bruto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotFlete)
                    .HasColumnName("tot_flete")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotNeto)
                    .HasColumnName("tot_neto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotPeso)
                    .HasColumnName("tot_peso")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotPie)
                    .HasColumnName("tot_pie")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotReca)
                    .HasColumnName("tot_reca")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalCp)
                    .HasColumnName("total_cp")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalUc)
                    .HasColumnName("total_uc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Totklu)
                    .HasColumnName("totklu")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoCliNavigation)
                    .WithMany(p => p.Compras)
                    .HasForeignKey(d => d.CoCli)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_compras_prov");

                entity.HasOne(d => d.CoSucuNavigation)
                    .WithMany(p => p.Compras)
                    .HasForeignKey(d => d.CoSucu)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_compras_almacen");

                entity.HasOne(d => d.FormaPagNavigation)
                    .WithMany(p => p.Compras)
                    .HasForeignKey(d => d.FormaPag)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_compras_condicio");

                entity.HasOne(d => d.MonedaNavigation)
                    .WithMany(p => p.Compras)
                    .HasForeignKey(d => d.Moneda)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_compras_moneda");
            });

            modelBuilder.Entity<ConIslr>(entity =>
            {
                entity.HasKey(e => e.CoIslr);

                entity.ToTable("con_islr");

                entity.HasIndex(e => e.IslrDes)
                    .HasName("con_islr_islr_des");

                entity.Property(e => e.CoIslr)
                    .HasColumnName("co_islr")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.IslrDes)
                    .IsRequired()
                    .HasColumnName("islr_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.IslrDes2)
                    .IsRequired()
                    .HasColumnName("islr_des2")
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Literal)
                    .IsRequired()
                    .HasColumnName("literal")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Numeral)
                    .IsRequired()
                    .HasColumnName("numeral")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<ConcAut>(entity =>
            {
                entity.HasKey(e => new { e.CodCta, e.Mes, e.Ano });

                entity.ToTable("conc_aut");

                entity.Property(e => e.CodCta)
                    .HasColumnName("cod_cta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Mes).HasColumnName("mes");

                entity.Property(e => e.Ano).HasColumnName("ano");

                entity.Property(e => e.Archivo)
                    .IsRequired()
                    .HasColumnName("archivo")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("Co_Us_El")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("Co_Us_In")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("Co_Us_Mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("Fe_Us_El")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("Fe_Us_In")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("Fe_Us_Mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecLoad)
                    .HasColumnName("fec_load")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.SaldoEc)
                    .HasColumnName("saldo_ec")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasColumnName("status")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CodCtaNavigation)
                    .WithMany(p => p.ConcAut)
                    .HasForeignKey(d => d.CodCta)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_conc_aut_cuentas");
            });

            modelBuilder.Entity<ConcBan>(entity =>
            {
                entity.HasKey(e => new { e.CodCta, e.Mes, e.Ano, e.RengNum, e.MovNum });

                entity.ToTable("conc_ban");

                entity.Property(e => e.CodCta)
                    .HasColumnName("cod_cta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Mes).HasColumnName("mes");

                entity.Property(e => e.Ano).HasColumnName("ano");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.MovNum).HasColumnName("mov_num");

                entity.Property(e => e.ConAuto).HasColumnName("con_auto");

                entity.Property(e => e.FecConc)
                    .HasColumnName("fec_conc")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.HasOne(d => d.MovNumNavigation)
                    .WithMany(p => p.ConcBan)
                    .HasForeignKey(d => d.MovNum)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_conc_ban_mov_ban");

                entity.HasOne(d => d.RengCon)
                    .WithMany(p => p.ConcBan)
                    .HasForeignKey(d => new { d.CodCta, d.Mes, d.Ano, d.RengNum })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_conc_ban_reng_con");
            });

            modelBuilder.Entity<Condicio>(entity =>
            {
                entity.HasKey(e => e.CoCond)
                    .HasName("condicio_co_cond");

                entity.ToTable("condicio");

                entity.HasIndex(e => e.CondDes)
                    .HasName("icond_des");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_752057765")
                    .IsUnique();

                entity.Property(e => e.CoCond)
                    .HasColumnName("co_cond")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CondDes)
                    .IsRequired()
                    .HasColumnName("cond_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DiasCred).HasColumnName("dias_cred");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.RowId)
                    .IsRequired()
                    .HasColumnName("row_id")
                    .IsRowVersion()
                    .IsConcurrencyToken();

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<ConvImp>(entity =>
            {
                entity.HasKey(e => e.CoConv);

                entity.ToTable("conv_imp");

                entity.Property(e => e.CoConv)
                    .HasColumnName("co_conv")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesConv)
                    .IsRequired()
                    .HasColumnName("des_conv")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<CostImp>(entity =>
            {
                entity.HasKey(e => new { e.CoArt, e.Nivel, e.NroDoc, e.RengDoc, e.TipoDoc });

                entity.ToTable("cost_imp");

                entity.Property(e => e.CoArt)
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Nivel)
                    .HasColumnName("nivel")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NroDoc).HasColumnName("nro_doc");

                entity.Property(e => e.RengDoc).HasColumnName("reng_doc");

                entity.Property(e => e.TipoDoc)
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Fecha)
                    .HasColumnName("fecha")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Monto)
                    .HasColumnName("monto")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.CostImp)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_cost_imp_art");
            });

            modelBuilder.Entity<CoticliReng>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Coticli_reng");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Iva)
                    .HasColumnName("iva")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Iva2)
                    .HasColumnName("iva2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IvaReng)
                    .HasColumnName("iva_reng")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.IvaRengOm)
                    .HasColumnName("iva_reng_om")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente)
                    .HasColumnName("pendiente")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcDesc)
                    .IsRequired()
                    .HasColumnName("porc_desc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PrecVta)
                    .HasColumnName("prec_vta")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Procesado)
                    .HasColumnName("procesado")
                    .HasColumnType("decimal(38, 6)");

                entity.Property(e => e.ProcesadoOm)
                    .HasColumnName("procesado_om")
                    .HasColumnType("decimal(38, 6)");

                entity.Property(e => e.RengNeto)
                    .HasColumnName("reng_neto")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RengNeto2)
                    .HasColumnName("reng_neto2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RengNetoOm)
                    .HasColumnName("reng_neto_om")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasMaxLength(23)
                    .IsUnicode(false);

                entity.Property(e => e.Tasag)
                    .HasColumnName("tasag")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TotBruto)
                    .HasColumnName("tot_bruto")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotBruto2)
                    .HasColumnName("tot_bruto2")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotNeto)
                    .HasColumnName("tot_neto")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotNeto2)
                    .HasColumnName("tot_neto2")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalDev)
                    .HasColumnName("total_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<CotiproReng>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Cotipro_reng");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Iva)
                    .HasColumnName("iva")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Iva2)
                    .HasColumnName("iva2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IvaReng)
                    .HasColumnName("iva_reng")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente)
                    .HasColumnName("pendiente")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcDesc)
                    .IsRequired()
                    .HasColumnName("porc_desc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PrecVta)
                    .HasColumnName("prec_vta")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Procesado)
                    .HasColumnName("procesado")
                    .HasColumnType("decimal(38, 6)");

                entity.Property(e => e.RengNeto)
                    .HasColumnName("reng_neto")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RengNeto2)
                    .HasColumnName("reng_neto2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasMaxLength(23)
                    .IsUnicode(false);

                entity.Property(e => e.Tasag)
                    .HasColumnName("tasag")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TotBruto)
                    .HasColumnName("tot_bruto")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotBruto2)
                    .HasColumnName("tot_bruto2")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotNeto)
                    .HasColumnName("tot_neto")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotNeto2)
                    .HasColumnName("tot_neto2")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalDev)
                    .HasColumnName("total_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<CotizC>(entity =>
            {
                entity.HasKey(e => e.FactNum)
                    .HasName("cotiz_c_cac_num");

                entity.ToTable("cotiz_c");

                entity.HasIndex(e => e.CoCli)
                    .HasName("ico_cli");

                entity.HasIndex(e => e.CoVen)
                    .HasName("ico_ven");

                entity.HasIndex(e => e.FecEmis)
                    .HasName("ifec_emis");

                entity.HasIndex(e => e.FormaPag)
                    .HasName("iforma_pag");

                entity.HasIndex(e => e.Moneda)
                    .HasName("imoneda");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_832058050")
                    .IsUnique();

                entity.HasIndex(e => e.Status)
                    .HasName("istatus");

                entity.HasIndex(e => new { e.Feccom, e.Numcom })
                    .HasName("ifeccom_numcom");

                entity.Property(e => e.FactNum)
                    .HasColumnName("fact_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Anulada).HasColumnName("anulada");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoTran)
                    .IsRequired()
                    .HasColumnName("co_tran")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Contrib).HasColumnName("contrib");

                entity.Property(e => e.CtaContab)
                    .IsRequired()
                    .HasColumnName("cta_contab")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DirEnt)
                    .IsRequired()
                    .HasColumnName("dir_ent")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("('01/01/1900')");

                entity.Property(e => e.FormaPag)
                    .IsRequired()
                    .HasColumnName("forma_pag")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.GlobDesc)
                    .HasColumnName("glob_desc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Impresa).HasColumnName("impresa");

                entity.Property(e => e.Iva)
                    .HasColumnName("iva")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IvaDev)
                    .HasColumnName("iva_dev")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MonIlc)
                    .HasColumnName("mon_ilc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Nit)
                    .IsRequired()
                    .HasColumnName("nit")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasColumnName("nombre")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.Origen)
                    .IsRequired()
                    .HasColumnName("origen")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.OrigenD)
                    .IsRequired()
                    .HasColumnName("origen_d")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Otros1)
                    .HasColumnName("otros1")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Otros2)
                    .HasColumnName("otros2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Otros3)
                    .HasColumnName("otros3")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcGdesc)
                    .IsRequired()
                    .HasColumnName("porc_gdesc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PorcReca)
                    .IsRequired()
                    .HasColumnName("porc_reca")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rif)
                    .IsRequired()
                    .HasColumnName("rif")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Saldo)
                    .HasColumnName("saldo")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Salestax)
                    .IsRequired()
                    .HasColumnName("salestax")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Seriales).HasColumnName("seriales");

                entity.Property(e => e.StaProd)
                    .HasColumnName("sta_prod")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasColumnName("status")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Tasag)
                    .HasColumnName("tasag")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasag10)
                    .HasColumnName("tasag10")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasag20)
                    .HasColumnName("tasag20")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Telefono)
                    .IsRequired()
                    .HasColumnName("telefono")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((60)))");

                entity.Property(e => e.TotBruto)
                    .HasColumnName("tot_bruto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotFlete)
                    .HasColumnName("tot_flete")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotNeto)
                    .HasColumnName("tot_neto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotReca)
                    .HasColumnName("tot_reca")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalCp)
                    .HasColumnName("total_cp")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalUc)
                    .HasColumnName("total_uc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Totklu)
                    .HasColumnName("totklu")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoCliNavigation)
                    .WithMany(p => p.CotizC)
                    .HasForeignKey(d => d.CoCli)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_cotiz_c_clientes");

                entity.HasOne(d => d.CoSucuNavigation)
                    .WithMany(p => p.CotizC)
                    .HasForeignKey(d => d.CoSucu)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_cotiz_c_almacen");

                entity.HasOne(d => d.CoTranNavigation)
                    .WithMany(p => p.CotizC)
                    .HasForeignKey(d => d.CoTran)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_cotiz_c_transpor");

                entity.HasOne(d => d.CoVenNavigation)
                    .WithMany(p => p.CotizC)
                    .HasForeignKey(d => d.CoVen)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_cotiz_c_vendedor");

                entity.HasOne(d => d.FormaPagNavigation)
                    .WithMany(p => p.CotizC)
                    .HasForeignKey(d => d.FormaPag)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_cotiz_c_condicio");

                entity.HasOne(d => d.MonedaNavigation)
                    .WithMany(p => p.CotizC)
                    .HasForeignKey(d => d.Moneda)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_cotiz_c_moneda");
            });

            modelBuilder.Entity<CotizP>(entity =>
            {
                entity.HasKey(e => e.FactNum)
                    .HasName("cotiz_p_cdp_num");

                entity.ToTable("cotiz_p");

                entity.HasIndex(e => e.CoCli)
                    .HasName("ico_cli");

                entity.HasIndex(e => e.FecEmis)
                    .HasName("ifec_emis");

                entity.HasIndex(e => e.FormaPag)
                    .HasName("iforma_pag");

                entity.HasIndex(e => e.Moneda)
                    .HasName("imoneda");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_928058392")
                    .IsUnique();

                entity.HasIndex(e => e.Status)
                    .HasName("istatus");

                entity.HasIndex(e => new { e.Feccom, e.Numcom })
                    .HasName("ifeccom_numcom");

                entity.Property(e => e.FactNum)
                    .HasColumnName("fact_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Anulada).HasColumnName("anulada");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoTran)
                    .IsRequired()
                    .HasColumnName("co_tran")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Contrib).HasColumnName("contrib");

                entity.Property(e => e.CtaContab)
                    .IsRequired()
                    .HasColumnName("cta_contab")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DirEnt)
                    .IsRequired()
                    .HasColumnName("dir_ent")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("('01/01/1900')");

                entity.Property(e => e.FormaPag)
                    .IsRequired()
                    .HasColumnName("forma_pag")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.GlobDesc)
                    .HasColumnName("glob_desc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Impresa).HasColumnName("impresa");

                entity.Property(e => e.Iva)
                    .HasColumnName("iva")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.IvaDev)
                    .HasColumnName("iva_dev")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MonIlc)
                    .HasColumnName("mon_ilc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Nit)
                    .IsRequired()
                    .HasColumnName("nit")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasColumnName("nombre")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.Origen)
                    .IsRequired()
                    .HasColumnName("origen")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.OrigenD)
                    .IsRequired()
                    .HasColumnName("origen_d")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Otros1)
                    .HasColumnName("otros1")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Otros2)
                    .HasColumnName("otros2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Otros3)
                    .HasColumnName("otros3")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcGdesc)
                    .IsRequired()
                    .HasColumnName("porc_gdesc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PorcReca)
                    .IsRequired()
                    .HasColumnName("porc_reca")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rif)
                    .IsRequired()
                    .HasColumnName("rif")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Saldo)
                    .HasColumnName("saldo")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Salestax)
                    .IsRequired()
                    .HasColumnName("salestax")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Seriales).HasColumnName("seriales");

                entity.Property(e => e.StaProd)
                    .HasColumnName("sta_prod")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasColumnName("status")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Tasag)
                    .HasColumnName("tasag")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasag10)
                    .HasColumnName("tasag10")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasag20)
                    .HasColumnName("tasag20")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Telefono)
                    .IsRequired()
                    .HasColumnName("telefono")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((60)))");

                entity.Property(e => e.TotBruto)
                    .HasColumnName("tot_bruto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotFlete)
                    .HasColumnName("tot_flete")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotNeto)
                    .HasColumnName("tot_neto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotReca)
                    .HasColumnName("tot_reca")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalCp)
                    .HasColumnName("total_cp")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalUc)
                    .HasColumnName("total_uc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Totklu)
                    .HasColumnName("totklu")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoCliNavigation)
                    .WithMany(p => p.CotizP)
                    .HasForeignKey(d => d.CoCli)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_cotiz_p_prov");

                entity.HasOne(d => d.FormaPagNavigation)
                    .WithMany(p => p.CotizP)
                    .HasForeignKey(d => d.FormaPag)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_cotiz_p_condicio");

                entity.HasOne(d => d.MonedaNavigation)
                    .WithMany(p => p.CotizP)
                    .HasForeignKey(d => d.Moneda)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_cotiz_p_moneda");
            });

            modelBuilder.Entity<CredFis>(entity =>
            {
                entity.HasKey(e => e.CoArt);

                entity.ToTable("cred_fis");

                entity.Property(e => e.CoArt)
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo2)
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo3)
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo4)
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo5)
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo6)
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo7)
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo8)
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoUsEl)
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoUsIn)
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoUsMo)
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CredFis1).HasColumnName("cred_fis");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime");

                entity.Property(e => e.Revisado)
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsFixedLength();

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.RowguidCoArt).HasColumnName("rowguid_co_art");

                entity.Property(e => e.Trasnfe)
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsFixedLength();
            });

            modelBuilder.Entity<CtaIngr>(entity =>
            {
                entity.HasKey(e => e.CoIngr)
                    .HasName("cta_ingr_co_ingr");

                entity.ToTable("cta_ingr");

                entity.HasIndex(e => e.CoIslr)
                    .HasName("CO_ISLR");

                entity.HasIndex(e => e.Descrip)
                    .HasName("idescrip");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1024058734")
                    .IsUnique();

                entity.Property(e => e.CoIngr)
                    .HasColumnName("co_ingr")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoIslr)
                    .IsRequired()
                    .HasColumnName("co_islr")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CtaContab)
                    .IsRequired()
                    .HasColumnName("cta_contab")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Cuentas>(entity =>
            {
                entity.HasKey(e => e.CodCta)
                    .HasName("cuentas_cod_cta");

                entity.ToTable("cuentas");

                entity.HasIndex(e => e.CoBanco)
                    .HasName("ico_banco");

                entity.HasIndex(e => e.Moneda)
                    .HasName("imoneda");

                entity.HasIndex(e => e.NumCta)
                    .HasName("inum_cta");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_611533262")
                    .IsUnique();

                entity.Property(e => e.CodCta)
                    .HasColumnName("cod_cta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoBanco)
                    .IsRequired()
                    .HasColumnName("co_banco")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CtaContab)
                    .IsRequired()
                    .HasColumnName("cta_contab")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Direccion)
                    .IsRequired()
                    .HasColumnName("direccion")
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.EjecCu)
                    .IsRequired()
                    .HasColumnName("ejec_cu")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasColumnName("email")
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecChra)
                    .HasColumnName("fec_chra")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(CONVERT([datetime],floor(CONVERT([float],getdate(),(0))),(0)))");

                entity.Property(e => e.Fecini)
                    .HasColumnName("fecini")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(CONVERT([datetime],floor(CONVERT([float],getdate(),(0))),(0)))");

                entity.Property(e => e.Foranea).HasColumnName("foranea");

                entity.Property(e => e.Inactivo).HasColumnName("inactivo");

                entity.Property(e => e.MesIni)
                    .HasColumnName("mes_ini")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumCta)
                    .IsRequired()
                    .HasColumnName("num_cta")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.RowId)
                    .IsRequired()
                    .HasColumnName("row_id")
                    .IsRowVersion()
                    .IsConcurrencyToken();

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.SaldoA)
                    .HasColumnName("saldo_a")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.SaldoC)
                    .HasColumnName("saldo_c")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.SaldoCo)
                    .HasColumnName("saldo_co")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.SaldoI)
                    .HasColumnName("saldo_i")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.SaldoIc)
                    .HasColumnName("saldo_ic")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Sucursal)
                    .IsRequired()
                    .HasColumnName("sucursal")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Telefono)
                    .IsRequired()
                    .HasColumnName("telefono")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoCu)
                    .IsRequired()
                    .HasColumnName("tipo_cu")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.UsaChra).HasColumnName("usa_chra");

                entity.HasOne(d => d.CoBancoNavigation)
                    .WithMany(p => p.Cuentas)
                    .HasForeignKey(d => d.CoBanco)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_cuentas_bancos");
            });

            modelBuilder.Entity<DepCaj>(entity =>
            {
                entity.HasKey(e => e.DepNum)
                    .HasName("dep_caj_dep_num");

                entity.ToTable("dep_caj");

                entity.HasIndex(e => e.CodCaja)
                    .HasName("icod_caja");

                entity.HasIndex(e => e.CodCta)
                    .HasName("icod_cta");

                entity.HasIndex(e => e.CtaEgre)
                    .HasName("icta_egre");

                entity.HasIndex(e => e.Deposito)
                    .HasName("dep_caj_deposito")
                    .IsUnique();

                entity.HasIndex(e => e.Fecha)
                    .HasName("ifecha");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_995534630")
                    .IsUnique();

                entity.HasIndex(e => new { e.Feccom, e.Numcom })
                    .HasName("ifeccom_numcom");

                entity.Property(e => e.DepNum)
                    .HasColumnName("dep_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CheDev).HasColumnName("che_dev");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CodCaja)
                    .IsRequired()
                    .HasColumnName("cod_caja")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CodCta)
                    .IsRequired()
                    .HasColumnName("cod_cta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CtaCont01)
                    .IsRequired()
                    .HasColumnName("cta_cont01")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CtaCont02)
                    .IsRequired()
                    .HasColumnName("cta_cont02")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CtaCont03)
                    .IsRequired()
                    .HasColumnName("cta_cont03")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CtaEgre)
                    .IsRequired()
                    .HasColumnName("cta_egre")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Deposito)
                    .IsRequired()
                    .HasColumnName("deposito")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("('01/01/1900')");

                entity.Property(e => e.Fecha)
                    .HasColumnName("fecha")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Movi).HasColumnName("movi");

                entity.Property(e => e.Movie).HasColumnName("movie");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 10)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TotalCheq)
                    .HasColumnName("total_cheq")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalEfec)
                    .HasColumnName("total_efec")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalTarj)
                    .HasColumnName("total_tarj")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoSucuNavigation)
                    .WithMany(p => p.DepCaj)
                    .HasForeignKey(d => d.CoSucu)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_dep_caj_almacen");

                entity.HasOne(d => d.CodCtaNavigation)
                    .WithMany(p => p.DepCaj)
                    .HasForeignKey(d => d.CodCta)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_dep_caj_cuentas");

                entity.HasOne(d => d.CtaEgreNavigation)
                    .WithMany(p => p.DepCaj)
                    .HasForeignKey(d => d.CtaEgre)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_dep_caj_cta_ingr");

                entity.HasOne(d => d.MonedaNavigation)
                    .WithMany(p => p.DepCaj)
                    .HasForeignKey(d => d.Moneda)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_dep_caj_moneda");
            });

            modelBuilder.Entity<Descuen>(entity =>
            {
                entity.HasKey(e => new { e.TipoDesc, e.TipoCli, e.CoDesc })
                    .HasName("descuen_co_desc");

                entity.ToTable("descuen");

                entity.HasIndex(e => e.CoDesc)
                    .HasName("ico_desc");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1104059019")
                    .IsUnique();

                entity.HasIndex(e => e.TipoCli)
                    .HasName("itipo_cli");

                entity.HasIndex(e => e.TipoDesc)
                    .HasName("itipo_desc");

                entity.Property(e => e.TipoDesc)
                    .HasColumnName("tipo_desc")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TipoCli)
                    .HasColumnName("tipo_cli")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoDesc)
                    .HasColumnName("co_desc")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Hasta1)
                    .HasColumnName("hasta1")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Hasta2)
                    .HasColumnName("hasta2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Hasta3)
                    .HasColumnName("hasta3")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Hasta4)
                    .HasColumnName("hasta4")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Hasta5)
                    .HasColumnName("hasta5")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Porc1)
                    .HasColumnName("porc1")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Porc2)
                    .HasColumnName("porc2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Porc3)
                    .HasColumnName("porc3")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Porc4)
                    .HasColumnName("porc4")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Porc5)
                    .HasColumnName("porc5")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Porc6)
                    .HasColumnName("porc6")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.RowId)
                    .IsRequired()
                    .HasColumnName("row_id")
                    .IsRowVersion()
                    .IsConcurrencyToken();

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<DevCli>(entity =>
            {
                entity.HasKey(e => e.FactNum)
                    .HasName("dev_cli_dvc_num");

                entity.ToTable("dev_cli");

                entity.HasIndex(e => e.CoCli)
                    .HasName("ico_cli");

                entity.HasIndex(e => e.CoVen)
                    .HasName("ico_ven");

                entity.HasIndex(e => e.FecEmis)
                    .HasName("ifec_emis");

                entity.HasIndex(e => e.Moneda)
                    .HasName("imoneda");

                entity.HasIndex(e => e.NcNum)
                    .HasName("inc_num");

                entity.HasIndex(e => e.NumTurno)
                    .HasName("IX_dev_cli");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1168059247")
                    .IsUnique();

                entity.HasIndex(e => e.Status)
                    .HasName("istatus");

                entity.HasIndex(e => new { e.Feccom, e.Numcom })
                    .HasName("ifeccom_numcom");

                entity.Property(e => e.FactNum)
                    .HasColumnName("fact_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Anulada).HasColumnName("anulada");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoTran)
                    .IsRequired()
                    .HasColumnName("co_tran")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Contrib).HasColumnName("contrib");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DirEnt)
                    .IsRequired()
                    .HasColumnName("dir_ent")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("('01/01/1900')");

                entity.Property(e => e.FormaPag)
                    .IsRequired()
                    .HasColumnName("forma_pag")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.GlobDesc)
                    .HasColumnName("glob_desc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Impresa).HasColumnName("impresa");

                entity.Property(e => e.Iva)
                    .HasColumnName("iva")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IvaDev)
                    .HasColumnName("iva_dev")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MonIlc)
                    .HasColumnName("mon_ilc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MovBan).HasColumnName("mov_ban");

                entity.Property(e => e.MovCaj).HasColumnName("mov_caj");

                entity.Property(e => e.NcNum).HasColumnName("nc_num");

                entity.Property(e => e.Nit)
                    .IsRequired()
                    .HasColumnName("nit")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasColumnName("nombre")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumCob).HasColumnName("num_cob");

                entity.Property(e => e.NumControl).HasColumnName("num_control");

                entity.Property(e => e.NumTurno).HasColumnName("num_turno");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.Numcon)
                    .IsRequired()
                    .HasColumnName("numcon")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Origen)
                    .IsRequired()
                    .HasColumnName("origen")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.OrigenD)
                    .IsRequired()
                    .HasColumnName("origen_d")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Otros1)
                    .HasColumnName("otros1")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Otros2)
                    .HasColumnName("otros2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Otros3)
                    .HasColumnName("otros3")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcGdesc)
                    .IsRequired()
                    .HasColumnName("porc_gdesc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PorcReca)
                    .IsRequired()
                    .HasColumnName("porc_reca")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rif)
                    .IsRequired()
                    .HasColumnName("rif")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Saldo)
                    .HasColumnName("saldo")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.SaldoNcr)
                    .HasColumnName("saldoNCR")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Salestax)
                    .IsRequired()
                    .HasColumnName("salestax")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Seriales).HasColumnName("seriales");

                entity.Property(e => e.StaProd)
                    .HasColumnName("sta_prod")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasColumnName("status")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Tasag)
                    .HasColumnName("tasag")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasag10)
                    .HasColumnName("tasag10")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasag20)
                    .HasColumnName("tasag20")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Telefono)
                    .IsRequired()
                    .HasColumnName("telefono")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((60)))");

                entity.Property(e => e.TotBruto)
                    .HasColumnName("tot_bruto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotFlete)
                    .HasColumnName("tot_flete")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotNeto)
                    .HasColumnName("tot_neto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotReca)
                    .HasColumnName("tot_reca")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalCp)
                    .HasColumnName("total_cp")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalUc)
                    .HasColumnName("total_uc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Totklu)
                    .HasColumnName("totklu")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoCliNavigation)
                    .WithMany(p => p.DevCli)
                    .HasForeignKey(d => d.CoCli)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_dev_cli_clientes");

                entity.HasOne(d => d.CoSucuNavigation)
                    .WithMany(p => p.DevCli)
                    .HasForeignKey(d => d.CoSucu)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_dev_cli_almacen");

                entity.HasOne(d => d.CoTranNavigation)
                    .WithMany(p => p.DevCli)
                    .HasForeignKey(d => d.CoTran)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_dev_cli_transpor");

                entity.HasOne(d => d.CoVenNavigation)
                    .WithMany(p => p.DevCli)
                    .HasForeignKey(d => d.CoVen)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_dev_cli_vendedor");

                entity.HasOne(d => d.FormaPagNavigation)
                    .WithMany(p => p.DevCli)
                    .HasForeignKey(d => d.FormaPag)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_dev_cli_condicio");

                entity.HasOne(d => d.MonedaNavigation)
                    .WithMany(p => p.DevCli)
                    .HasForeignKey(d => d.Moneda)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_dev_cli_moneda");
            });

            modelBuilder.Entity<DevPro>(entity =>
            {
                entity.HasKey(e => e.FactNum)
                    .HasName("dev_pro_dvp_num");

                entity.ToTable("dev_pro");

                entity.HasIndex(e => e.CoCli)
                    .HasName("ico_prov");

                entity.HasIndex(e => e.FecEmis)
                    .HasName("ifec_emis");

                entity.HasIndex(e => e.Moneda)
                    .HasName("imoneda");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1264059589")
                    .IsUnique();

                entity.HasIndex(e => e.Status)
                    .HasName("istatus");

                entity.HasIndex(e => new { e.Feccom, e.Numcom })
                    .HasName("ifeccom_numcom");

                entity.Property(e => e.FactNum)
                    .HasColumnName("fact_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Anulada).HasColumnName("anulada");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoTran)
                    .IsRequired()
                    .HasColumnName("co_tran")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Contrib).HasColumnName("contrib");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DirEnt)
                    .IsRequired()
                    .HasColumnName("dir_ent")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Factura)
                    .IsRequired()
                    .HasColumnName("factura")
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("('01/01/1900')");

                entity.Property(e => e.FormaPag)
                    .IsRequired()
                    .HasColumnName("forma_pag")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.GlobDesc)
                    .HasColumnName("glob_desc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Impresa).HasColumnName("impresa");

                entity.Property(e => e.Iva)
                    .HasColumnName("iva")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IvaDev)
                    .HasColumnName("iva_dev")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MonIlc)
                    .HasColumnName("mon_ilc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MovBan).HasColumnName("mov_ban");

                entity.Property(e => e.MovCaj).HasColumnName("mov_caj");

                entity.Property(e => e.NControl)
                    .IsRequired()
                    .HasColumnName("n_control")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NcNum).HasColumnName("nc_num");

                entity.Property(e => e.Nit)
                    .IsRequired()
                    .HasColumnName("nit")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasColumnName("nombre")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumCob).HasColumnName("num_cob");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.Origen)
                    .IsRequired()
                    .HasColumnName("origen")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.OrigenD)
                    .IsRequired()
                    .HasColumnName("origen_d")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Otros1)
                    .HasColumnName("otros1")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Otros2)
                    .HasColumnName("otros2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Otros3)
                    .HasColumnName("otros3")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcGdesc)
                    .IsRequired()
                    .HasColumnName("porc_gdesc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PorcReca)
                    .IsRequired()
                    .HasColumnName("porc_reca")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rif)
                    .IsRequired()
                    .HasColumnName("rif")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Saldo)
                    .HasColumnName("saldo")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.SaldoNcr)
                    .HasColumnName("saldoNCR")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Salestax)
                    .IsRequired()
                    .HasColumnName("salestax")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Seriales).HasColumnName("seriales");

                entity.Property(e => e.StaProd)
                    .HasColumnName("sta_prod")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasColumnName("status")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Tasag)
                    .HasColumnName("tasag")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasag10)
                    .HasColumnName("tasag10")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasag20)
                    .HasColumnName("tasag20")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Telefono)
                    .IsRequired()
                    .HasColumnName("telefono")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((60)))");

                entity.Property(e => e.TotBruto)
                    .HasColumnName("tot_bruto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotFlete)
                    .HasColumnName("tot_flete")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotNeto)
                    .HasColumnName("tot_neto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotReca)
                    .HasColumnName("tot_reca")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalCp)
                    .HasColumnName("total_cp")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalUc)
                    .HasColumnName("total_uc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Totklu)
                    .HasColumnName("totklu")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoCliNavigation)
                    .WithMany(p => p.DevPro)
                    .HasForeignKey(d => d.CoCli)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_dev_pro_prov");

                entity.HasOne(d => d.CoSucuNavigation)
                    .WithMany(p => p.DevPro)
                    .HasForeignKey(d => d.CoSucu)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_dev_pro_almacen");

                entity.HasOne(d => d.FormaPagNavigation)
                    .WithMany(p => p.DevPro)
                    .HasForeignKey(d => d.FormaPag)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_dev_pro_condicio");

                entity.HasOne(d => d.MonedaNavigation)
                    .WithMany(p => p.DevPro)
                    .HasForeignKey(d => d.Moneda)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_dev_pro_moneda");
            });

            modelBuilder.Entity<DevcliReng>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Devcli_reng");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Iva)
                    .HasColumnName("iva")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Iva2)
                    .HasColumnName("iva2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IvaReng)
                    .HasColumnName("iva_reng")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PMargCap).HasColumnName("p_marg_cap");

                entity.Property(e => e.Pendiente)
                    .HasColumnName("pendiente")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcDesc)
                    .IsRequired()
                    .HasColumnName("porc_desc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PrecVta)
                    .HasColumnName("prec_vta")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Procesado)
                    .HasColumnName("procesado")
                    .HasColumnType("decimal(38, 6)");

                entity.Property(e => e.RengNeto)
                    .HasColumnName("reng_neto")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RengNeto2)
                    .HasColumnName("reng_neto2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasMaxLength(23)
                    .IsUnicode(false);

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasag)
                    .HasColumnName("tasag")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TotBruto)
                    .HasColumnName("tot_bruto")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotBruto2)
                    .HasColumnName("tot_bruto2")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotNeto)
                    .HasColumnName("tot_neto")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotNeto2)
                    .HasColumnName("tot_neto2")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalDev)
                    .HasColumnName("total_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<DevproReng>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Devpro_reng");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Iva)
                    .HasColumnName("iva")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Iva2)
                    .HasColumnName("iva2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IvaReng)
                    .HasColumnName("iva_reng")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente)
                    .HasColumnName("pendiente")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcDesc)
                    .IsRequired()
                    .HasColumnName("porc_desc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PrecVta)
                    .HasColumnName("prec_vta")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Procesado)
                    .HasColumnName("procesado")
                    .HasColumnType("decimal(38, 6)");

                entity.Property(e => e.RengNeto)
                    .HasColumnName("reng_neto")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RengNeto2)
                    .HasColumnName("reng_neto2")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasMaxLength(23)
                    .IsUnicode(false);

                entity.Property(e => e.Tasag)
                    .HasColumnName("tasag")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TotBruto)
                    .HasColumnName("tot_bruto")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotBruto2)
                    .HasColumnName("tot_bruto2")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotNeto)
                    .HasColumnName("tot_neto")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotNeto2)
                    .HasColumnName("tot_neto2")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalDev)
                    .HasColumnName("total_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Dmc>(entity =>
            {
                entity.HasKey(e => e.DmcNum);

                entity.ToTable("dmc");

                entity.Property(e => e.DmcNum)
                    .HasColumnName("dmc_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Anulada).HasColumnName("anulada");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAgEx)
                    .IsRequired()
                    .HasColumnName("co_ag_ex")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAgIm)
                    .IsRequired()
                    .HasColumnName("co_ag_im")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoDest)
                    .IsRequired()
                    .HasColumnName("co_dest")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoDrDe)
                    .IsRequired()
                    .HasColumnName("co_dr_de")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoDrEm)
                    .IsRequired()
                    .HasColumnName("co_dr_em")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoEm)
                    .IsRequired()
                    .HasColumnName("co_em")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoEntA)
                    .IsRequired()
                    .HasColumnName("co_ent_a")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoPaOd)
                    .IsRequired()
                    .HasColumnName("co_pa_od")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoPais)
                    .IsRequired()
                    .HasColumnName("co_pais")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoPtEn)
                    .IsRequired()
                    .HasColumnName("co_pt_en")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoPtOd)
                    .IsRequired()
                    .HasColumnName("co_pt_od")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoPtSa)
                    .IsRequired()
                    .HasColumnName("co_pt_sa")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoPtTr)
                    .IsRequired()
                    .HasColumnName("co_pt_tr")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CoPto)
                    .IsRequired()
                    .HasColumnName("co_pto")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSalD)
                    .IsRequired()
                    .HasColumnName("co_sal_d")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoTrans)
                    .IsRequired()
                    .HasColumnName("co_trans")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoTrasb)
                    .IsRequired()
                    .HasColumnName("co_trasb")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesRec)
                    .HasColumnName("des_rec")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FecFact)
                    .HasColumnName("fec_fact")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.GuiaEmb)
                    .IsRequired()
                    .HasColumnName("guia_emb")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Impresa).HasColumnName("impresa");

                entity.Property(e => e.Itbms)
                    .HasColumnName("itbms")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.RegNum)
                    .IsRequired()
                    .HasColumnName("reg_num")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasColumnName("status")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.TipoDmc).HasColumnName("tipo_dmc");

                entity.Property(e => e.TipoDoc)
                    .IsRequired()
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TotCif)
                    .HasColumnName("tot_cif")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotFlet)
                    .HasColumnName("tot_flet")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotFob)
                    .HasColumnName("tot_fob")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotGast)
                    .HasColumnName("tot_gast")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotSeg)
                    .HasColumnName("tot_seg")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<DocumCc>(entity =>
            {
                entity.HasKey(e => new { e.TipoDoc, e.NroDoc })
                    .HasName("docum_cc_docc_nro");

                entity.ToTable("docum_cc");

                entity.HasIndex(e => e.CoBan)
                    .HasName("ico_ban");

                entity.HasIndex(e => e.CoCli)
                    .HasName("ico_cli");

                entity.HasIndex(e => e.CoVen)
                    .HasName("ico_ven");

                entity.HasIndex(e => e.FecEmis)
                    .HasName("ifec_emis");

                entity.HasIndex(e => e.Moneda)
                    .HasName("imoneda");

                entity.HasIndex(e => e.NroDoc)
                    .HasName("IX_NRO_DOC");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1107535029")
                    .IsUnique();

                entity.HasIndex(e => e.Saldo)
                    .HasName("isaldo");

                entity.HasIndex(e => e.TipoDoc)
                    .HasName("IX_TIPO_DOC");

                entity.HasIndex(e => new { e.Feccom, e.Numcom })
                    .HasName("ifeccom_numcom");

                entity.Property(e => e.TipoDoc)
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroDoc).HasColumnName("nro_doc");

                entity.Property(e => e.Adicional)
                    .HasColumnName("adicional")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Anulado).HasColumnName("anulado");

                entity.Property(e => e.Aut).HasColumnName("aut");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoBan)
                    .IsRequired()
                    .HasColumnName("co_ban")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comis1)
                    .HasColumnName("comis1")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Comis2)
                    .HasColumnName("comis2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Comis3)
                    .HasColumnName("comis3")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Comis4)
                    .HasColumnName("comis4")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Comis5)
                    .HasColumnName("comis5")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Comis6)
                    .HasColumnName("comis6")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Contrib).HasColumnName("contrib");

                entity.Property(e => e.Descuentos)
                    .IsRequired()
                    .HasColumnName("descuentos")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DocOrig)
                    .IsRequired()
                    .HasColumnName("doc_orig")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Fcomproban)
                    .HasColumnName("fcomproban")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),'01/01/1900',(104)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecReg)
                    .HasColumnName("fec_reg")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),'01/01/1900',(104)))");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("('01/01/1900')");

                entity.Property(e => e.ImpNroZ)
                    .IsRequired()
                    .HasColumnName("imp_nro_z")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Impfis)
                    .IsRequired()
                    .HasColumnName("impfis")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Impfisfac)
                    .IsRequired()
                    .HasColumnName("impfisfac")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MonIlc)
                    .HasColumnName("mon_ilc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MontoA1)
                    .HasColumnName("monto_a1")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MontoA2)
                    .HasColumnName("monto_a2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MontoBru)
                    .HasColumnName("monto_bru")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MontoDes)
                    .HasColumnName("monto_des")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MontoGen)
                    .HasColumnName("monto_gen")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MontoImp)
                    .HasColumnName("monto_imp")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MontoNet)
                    .HasColumnName("monto_net")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MontoOtr)
                    .HasColumnName("monto_otr")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MontoRec)
                    .HasColumnName("monto_rec")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Movi).HasColumnName("movi");

                entity.Property(e => e.NroChe)
                    .IsRequired()
                    .HasColumnName("nro_che")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NroOrig).HasColumnName("nro_orig");

                entity.Property(e => e.NumControl).HasColumnName("num_control");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.Numcon)
                    .IsRequired()
                    .HasColumnName("numcon")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Observa)
                    .IsRequired()
                    .HasColumnName("observa")
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Origen)
                    .HasColumnName("origen")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.OrigenD)
                    .HasColumnName("origen_d")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Otros1)
                    .HasColumnName("otros1")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Otros2)
                    .HasColumnName("otros2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Otros3)
                    .HasColumnName("otros3")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.ProvTer)
                    .IsRequired()
                    .HasColumnName("prov_ter")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Recargo)
                    .IsRequired()
                    .HasColumnName("recargo")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.RengSi).HasColumnName("reng_si");

                entity.Property(e => e.RengTer).HasColumnName("reng_ter");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.RowId)
                    .IsRequired()
                    .HasColumnName("row_id")
                    .IsRowVersion()
                    .IsConcurrencyToken();

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Saldo)
                    .HasColumnName("saldo")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Salestax)
                    .IsRequired()
                    .HasColumnName("salestax")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasColumnName("tipo")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('1')");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.VenTer).HasColumnName("ven_ter");

                entity.HasOne(d => d.CoCliNavigation)
                    .WithMany(p => p.DocumCc)
                    .HasForeignKey(d => d.CoCli)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_docum_cc_clientes");

                entity.HasOne(d => d.CoSucuNavigation)
                    .WithMany(p => p.DocumCc)
                    .HasForeignKey(d => d.CoSucu)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_docum_cc_almacen");

                entity.HasOne(d => d.CoVenNavigation)
                    .WithMany(p => p.DocumCc)
                    .HasForeignKey(d => d.CoVen)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_docum_cc_vendedor");

                entity.HasOne(d => d.MonedaNavigation)
                    .WithMany(p => p.DocumCc)
                    .HasForeignKey(d => d.Moneda)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_docum_cc_moneda");

                entity.HasOne(d => d.TipoNavigation)
                    .WithMany(p => p.DocumCc)
                    .HasForeignKey(d => d.Tipo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_docum_cc_tabulado");
            });

            modelBuilder.Entity<DocumCp>(entity =>
            {
                entity.HasKey(e => new { e.TipoDoc, e.NroDoc })
                    .HasName("docum_cp_docp_nro");

                entity.ToTable("docum_cp");

                entity.HasIndex(e => e.CoCli)
                    .HasName("ico_cli");

                entity.HasIndex(e => e.FecEmis)
                    .HasName("ifec_emis");

                entity.HasIndex(e => e.Moneda)
                    .HasName("imoneda");

                entity.HasIndex(e => e.NroDoc)
                    .HasName("idocp_nro2");

                entity.HasIndex(e => e.NroFact)
                    .HasName("inro_fact");

                entity.HasIndex(e => e.Pagar)
                    .HasName("ipagar");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1360059931")
                    .IsUnique();

                entity.HasIndex(e => e.Saldo)
                    .HasName("isaldo");

                entity.HasIndex(e => e.TipoDoc)
                    .HasName("idocp_nro");

                entity.HasIndex(e => new { e.Feccom, e.Numcom })
                    .HasName("ifeccom_numcom");

                entity.Property(e => e.TipoDoc)
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroDoc).HasColumnName("nro_doc");

                entity.Property(e => e.Adicional)
                    .HasColumnName("adicional")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Anulado).HasColumnName("anulado");

                entity.Property(e => e.Aut).HasColumnName("aut");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoBan)
                    .IsRequired()
                    .HasColumnName("co_ban")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comis1)
                    .HasColumnName("comis1")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Comis2)
                    .HasColumnName("comis2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Comis3)
                    .HasColumnName("comis3")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Comis4)
                    .HasColumnName("comis4")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Contrib).HasColumnName("contrib");

                entity.Property(e => e.Descuentos)
                    .IsRequired()
                    .HasColumnName("descuentos")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DocOrig)
                    .IsRequired()
                    .HasColumnName("doc_orig")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Fcomproban)
                    .HasColumnName("fcomproban")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),'01/01/1900',(104)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecReg)
                    .HasColumnName("fec_reg")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),'01/01/1900',(104)))");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("('01/01/1900')");

                entity.Property(e => e.MonIlc)
                    .HasColumnName("mon_ilc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MontoA1)
                    .HasColumnName("monto_a1")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MontoA2)
                    .HasColumnName("monto_a2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MontoBru)
                    .HasColumnName("monto_bru")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.MontoDes)
                    .HasColumnName("monto_des")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MontoGen)
                    .HasColumnName("monto_gen")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MontoImp)
                    .HasColumnName("monto_imp")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.MontoNet)
                    .HasColumnName("monto_net")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.MontoOtr)
                    .HasColumnName("monto_otr")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MontoRec)
                    .HasColumnName("monto_rec")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Movi).HasColumnName("movi");

                entity.Property(e => e.NControl)
                    .IsRequired()
                    .HasColumnName("n_control")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NroChe)
                    .IsRequired()
                    .HasColumnName("nro_che")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NroFact)
                    .IsRequired()
                    .HasColumnName("nro_fact")
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NroOrig).HasColumnName("nro_orig");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.Observa)
                    .IsRequired()
                    .HasColumnName("observa")
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Origen)
                    .IsRequired()
                    .HasColumnName("origen")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.OrigenD)
                    .IsRequired()
                    .HasColumnName("origen_d")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Otros1)
                    .HasColumnName("otros1")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Otros2)
                    .HasColumnName("otros2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Otros3)
                    .HasColumnName("otros3")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pagar).HasColumnName("pagar");

                entity.Property(e => e.ProPago)
                    .IsRequired()
                    .HasColumnName("pro_pago")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.ProvTer)
                    .IsRequired()
                    .HasColumnName("prov_ter")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Recargo)
                    .IsRequired()
                    .HasColumnName("recargo")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.RengSi).HasColumnName("reng_si");

                entity.Property(e => e.RengTer).HasColumnName("reng_ter");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Saldo)
                    .HasColumnName("saldo")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Salestax)
                    .IsRequired()
                    .HasColumnName("salestax")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasColumnName("tipo")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('1')");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoCliNavigation)
                    .WithMany(p => p.DocumCp)
                    .HasForeignKey(d => d.CoCli)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_docum_cp_prov");

                entity.HasOne(d => d.CoSucuNavigation)
                    .WithMany(p => p.DocumCp)
                    .HasForeignKey(d => d.CoSucu)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_docum_cp_almacen");

                entity.HasOne(d => d.MonedaNavigation)
                    .WithMany(p => p.DocumCp)
                    .HasForeignKey(d => d.Moneda)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_docum_cp_moneda");

                entity.HasOne(d => d.TipoNavigation)
                    .WithMany(p => p.DocumCp)
                    .HasForeignKey(d => d.Tipo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_docum_cp_tabulado");
            });

            modelBuilder.Entity<Dppago>(entity =>
            {
                entity.HasKey(e => e.TipoCli)
                    .HasName("PK__dppago__2B60367F");

                entity.ToTable("dppago");

                entity.Property(e => e.TipoCli)
                    .HasColumnName("tipo_cli")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Desde1)
                    .HasColumnName("desde1")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Hasta1)
                    .HasColumnName("hasta1")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Hasta2)
                    .HasColumnName("hasta2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Hasta3)
                    .HasColumnName("hasta3")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Hasta4)
                    .HasColumnName("hasta4")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Hasta5)
                    .HasColumnName("hasta5")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Porc1)
                    .HasColumnName("porc1")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Porc2)
                    .HasColumnName("porc2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Porc3)
                    .HasColumnName("porc3")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Porc4)
                    .HasColumnName("porc4")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Porc5)
                    .HasColumnName("porc5")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Porc6)
                    .HasColumnName("porc6")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Empaques>(entity =>
            {
                entity.HasKey(e => e.EmpNum);

                entity.HasIndex(e => e.Fecha)
                    .HasName("IX_Empaques");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("IX_Empaques_1")
                    .IsUnique();

                entity.Property(e => e.EmpNum)
                    .HasColumnName("emp_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Anulada).HasColumnName("anulada");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoEnvio)
                    .IsRequired()
                    .HasColumnName("co_envio")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoResem)
                    .IsRequired()
                    .HasColumnName("co_resem")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoResrc)
                    .IsRequired()
                    .HasColumnName("co_resrc")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Empr).HasColumnName("empr");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.FeEmp)
                    .HasColumnName("fe_emp")
                    .HasColumnType("datetime");

                entity.Property(e => e.FeEnvio)
                    .HasColumnName("fe_envio")
                    .HasColumnType("datetime");

                entity.Property(e => e.FeResrc)
                    .HasColumnName("fe_resrc")
                    .HasColumnType("datetime");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Fecha)
                    .HasColumnName("fecha")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.NroOrig).HasColumnName("nro_orig");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasColumnName("status")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TipoDoc)
                    .IsRequired()
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<ExpImp>(entity =>
            {
                entity.HasKey(e => e.ExpNum);

                entity.ToTable("exp_imp");

                entity.HasIndex(e => e.ExpNro)
                    .HasName("IX_exp_imp")
                    .IsUnique();

                entity.Property(e => e.ExpNum)
                    .HasColumnName("exp_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAge)
                    .IsRequired()
                    .HasColumnName("co_age")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.ExpNro)
                    .IsRequired()
                    .HasColumnName("exp_nro")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.ImpNum).HasColumnName("imp_num");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoAgeNavigation)
                    .WithMany(p => p.ExpImp)
                    .HasForeignKey(d => d.CoAge)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_exp_imp_prov");

                entity.HasOne(d => d.ImpNumNavigation)
                    .WithMany(p => p.ExpImp)
                    .HasForeignKey(d => d.ImpNum)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_exp_imp_import");
            });

            modelBuilder.Entity<FactDevo>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Fact_devo");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(38, 9)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(38, 9)");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Iva)
                    .HasColumnName("iva")
                    .HasColumnType("decimal(29, 2)");

                entity.Property(e => e.Iva2)
                    .HasColumnName("iva2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Iva2Om)
                    .HasColumnName("iva2_om")
                    .HasColumnType("numeric(38, 17)");

                entity.Property(e => e.IvaDev)
                    .HasColumnName("iva_dev")
                    .HasColumnType("numeric(22, 6)");

                entity.Property(e => e.IvaDevOm)
                    .HasColumnName("iva_dev_om")
                    .HasColumnType("numeric(38, 17)");

                entity.Property(e => e.IvaFact)
                    .HasColumnName("iva_fact")
                    .HasColumnType("decimal(29, 2)");

                entity.Property(e => e.IvaFactOm)
                    .HasColumnName("iva_fact_om")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.IvaOm)
                    .HasColumnName("iva_om")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.IvaRengDev)
                    .HasColumnName("iva_reng_dev")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.IvaRengDevOm)
                    .HasColumnName("iva_reng_dev_om")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.IvaRengFac)
                    .HasColumnName("iva_reng_fac")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.IvaRengFacOm)
                    .HasColumnName("iva_reng_fac_om")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MontoDevOm)
                    .HasColumnName("monto_dev_om")
                    .HasColumnType("numeric(38, 20)");

                entity.Property(e => e.NetoDev)
                    .HasColumnName("neto_dev")
                    .HasColumnType("numeric(20, 8)");

                entity.Property(e => e.NetoDevOm)
                    .HasColumnName("neto_dev_om")
                    .HasColumnType("numeric(38, 21)");

                entity.Property(e => e.NetoFact)
                    .HasColumnName("neto_fact")
                    .HasColumnType("decimal(29, 2)");

                entity.Property(e => e.NetoFactOm)
                    .HasColumnName("neto_fact_om")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.PMargCap).HasColumnName("p_marg_cap");

                entity.Property(e => e.Pendiente)
                    .HasColumnName("pendiente")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcDesc)
                    .IsRequired()
                    .HasColumnName("porc_desc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PrecVta)
                    .HasColumnName("prec_vta")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Procesado)
                    .HasColumnName("procesado")
                    .HasColumnType("decimal(38, 6)");

                entity.Property(e => e.ProcesadoOm)
                    .HasColumnName("procesado_om")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RengNeto2)
                    .HasColumnName("reng_neto2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RengNeto2Om)
                    .HasColumnName("reng_neto2_om")
                    .HasColumnType("numeric(38, 17)");

                entity.Property(e => e.RengNetoDev)
                    .HasColumnName("reng_neto_dev")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RengNetoDevOm)
                    .HasColumnName("reng_neto_dev_om")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RengNetoFac)
                    .HasColumnName("reng_neto_fac")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RengNetoFacOm)
                    .HasColumnName("reng_neto_fac_om")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasMaxLength(23)
                    .IsUnicode(false);

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasag)
                    .HasColumnName("tasag")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TipoDoc)
                    .IsRequired()
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(4)
                    .IsUnicode(false);

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TotBruto)
                    .HasColumnName("tot_bruto")
                    .HasColumnType("decimal(35, 8)");

                entity.Property(e => e.TotBruto2)
                    .HasColumnName("tot_bruto2")
                    .HasColumnType("decimal(24, 8)");

                entity.Property(e => e.TotBruto2Om)
                    .HasColumnName("tot_bruto2_om")
                    .HasColumnType("numeric(38, 17)");

                entity.Property(e => e.TotBrutoOm)
                    .HasColumnName("tot_bruto_om")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.TotNeto)
                    .HasColumnName("tot_neto")
                    .HasColumnType("decimal(35, 8)");

                entity.Property(e => e.TotNeto2)
                    .HasColumnName("tot_neto2")
                    .HasColumnType("decimal(24, 8)");

                entity.Property(e => e.TotNeto2Om)
                    .HasColumnName("tot_neto2_om")
                    .HasColumnType("numeric(38, 17)");

                entity.Property(e => e.TotNetoOm)
                    .HasColumnName("tot_neto_om")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(20, 5)");

                entity.Property(e => e.TotalDev)
                    .HasColumnName("total_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(38, 9)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(38, 9)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<FactReng>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Fact_reng");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Iva)
                    .HasColumnName("iva")
                    .HasColumnType("decimal(29, 2)");

                entity.Property(e => e.Iva2)
                    .HasColumnName("iva2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IvaReng)
                    .HasColumnName("iva_reng")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PMargCap).HasColumnName("p_marg_cap");

                entity.Property(e => e.Pendiente)
                    .HasColumnName("pendiente")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcDesc)
                    .IsRequired()
                    .HasColumnName("porc_desc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PrecVta)
                    .HasColumnName("prec_vta")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Procesado)
                    .HasColumnName("procesado")
                    .HasColumnType("decimal(38, 6)");

                entity.Property(e => e.RengNeto)
                    .HasColumnName("reng_neto")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RengNeto2)
                    .HasColumnName("reng_neto2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasMaxLength(23)
                    .IsUnicode(false);

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasag)
                    .HasColumnName("tasag")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TotBruto)
                    .HasColumnName("tot_bruto")
                    .HasColumnType("decimal(29, 2)");

                entity.Property(e => e.TotBruto2)
                    .HasColumnName("tot_bruto2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotNeto)
                    .HasColumnName("tot_neto")
                    .HasColumnType("decimal(29, 2)");

                entity.Property(e => e.TotNeto2)
                    .HasColumnName("tot_neto2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalDev)
                    .HasColumnName("total_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Factura>(entity =>
            {
                entity.HasKey(e => e.FactNum)
                    .HasName("factura_fac_num");

                entity.ToTable("factura");

                entity.HasIndex(e => e.CoCli)
                    .HasName("ico_cli");

                entity.HasIndex(e => e.CoTran)
                    .HasName("ico_tran");

                entity.HasIndex(e => e.CoVen)
                    .HasName("ico_ven");

                entity.HasIndex(e => e.FeUsMo)
                    .HasName("IX_factura_1");

                entity.HasIndex(e => e.FecEmis)
                    .HasName("ifec_emis");

                entity.HasIndex(e => e.FormaPag)
                    .HasName("iforma_pag");

                entity.HasIndex(e => e.Id)
                    .HasName("IX_factura");

                entity.HasIndex(e => e.Moneda)
                    .HasName("imoneda");

                entity.HasIndex(e => e.NumTurno)
                    .HasName("factura_num_turno");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1456060273")
                    .IsUnique();

                entity.HasIndex(e => e.Status)
                    .HasName("istatus");

                entity.HasIndex(e => new { e.Feccom, e.Numcom })
                    .HasName("ifeccom_numcom");

                entity.Property(e => e.FactNum)
                    .HasColumnName("fact_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Anulada).HasColumnName("anulada");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoTran)
                    .IsRequired()
                    .HasColumnName("co_tran")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Contrib).HasColumnName("contrib");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DirEnt)
                    .IsRequired()
                    .HasColumnName("dir_ent")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecReg)
                    .HasColumnName("fec_reg")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),'01/01/1900',(104)))");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("('01/01/1900')");

                entity.Property(e => e.FormaPag)
                    .IsRequired()
                    .HasColumnName("forma_pag")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.GlobDesc)
                    .HasColumnName("glob_desc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.ImpNroZ)
                    .IsRequired()
                    .HasColumnName("imp_nro_z")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Impfis)
                    .IsRequired()
                    .HasColumnName("impfis")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Impfisfac)
                    .IsRequired()
                    .HasColumnName("impfisfac")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Impresa).HasColumnName("impresa");

                entity.Property(e => e.Iva)
                    .HasColumnName("iva")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IvaDev)
                    .HasColumnName("iva_dev")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MonIlc)
                    .HasColumnName("mon_ilc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Nit)
                    .IsRequired()
                    .HasColumnName("nit")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasColumnName("nombre")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumControl).HasColumnName("num_control");

                entity.Property(e => e.NumTurno).HasColumnName("num_turno");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.Numcon)
                    .IsRequired()
                    .HasColumnName("numcon")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Origen)
                    .HasColumnName("origen")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.OrigenD)
                    .HasColumnName("origen_d")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Otros1)
                    .HasColumnName("otros1")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Otros2)
                    .HasColumnName("otros2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Otros3)
                    .HasColumnName("otros3")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcGdesc)
                    .IsRequired()
                    .HasColumnName("porc_gdesc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PorcReca)
                    .IsRequired()
                    .HasColumnName("porc_reca")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Ptovta).HasColumnName("ptovta");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rif)
                    .IsRequired()
                    .HasColumnName("rif")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Saldo)
                    .HasColumnName("saldo")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Salestax)
                    .IsRequired()
                    .HasColumnName("salestax")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Seriales).HasColumnName("seriales");

                entity.Property(e => e.StaProd)
                    .HasColumnName("sta_prod")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasColumnName("status")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Tasag)
                    .HasColumnName("tasag")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasag10)
                    .HasColumnName("tasag10")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasag20)
                    .HasColumnName("tasag20")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Telefono)
                    .IsRequired()
                    .HasColumnName("telefono")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((60)))");

                entity.Property(e => e.TotBruto)
                    .HasColumnName("tot_bruto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotFlete)
                    .HasColumnName("tot_flete")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotNeto)
                    .HasColumnName("tot_neto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotReca)
                    .HasColumnName("tot_reca")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalCp)
                    .HasColumnName("total_cp")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalUc)
                    .HasColumnName("total_uc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Totklu)
                    .HasColumnName("totklu")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.VenTer).HasColumnName("ven_ter");

                entity.Property(e => e.Vuelto)
                    .HasColumnName("vuelto")
                    .HasColumnType("decimal(18, 2)");

                entity.HasOne(d => d.CoCliNavigation)
                    .WithMany(p => p.Factura)
                    .HasForeignKey(d => d.CoCli)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_factura_clientes");

                entity.HasOne(d => d.CoSucuNavigation)
                    .WithMany(p => p.Factura)
                    .HasForeignKey(d => d.CoSucu)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_factura_almacen");

                entity.HasOne(d => d.CoTranNavigation)
                    .WithMany(p => p.Factura)
                    .HasForeignKey(d => d.CoTran)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_factura_transpor");

                entity.HasOne(d => d.CoVenNavigation)
                    .WithMany(p => p.Factura)
                    .HasForeignKey(d => d.CoVen)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_factura_vendedor");

                entity.HasOne(d => d.FormaPagNavigation)
                    .WithMany(p => p.Factura)
                    .HasForeignKey(d => d.FormaPag)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_factura_condicio");

                entity.HasOne(d => d.MonedaNavigation)
                    .WithMany(p => p.Factura)
                    .HasForeignKey(d => d.Moneda)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_factura_moneda");
            });

            modelBuilder.Entity<Fallas>(entity =>
            {
                entity.HasKey(e => new { e.CoFalla, e.CoLin })
                    .HasName("fallas_co_falla");

                entity.ToTable("fallas");

                entity.HasIndex(e => e.CoFalla)
                    .HasName("ico_falla");

                entity.HasIndex(e => e.CoLin)
                    .HasName("ico_lin");

                entity.HasIndex(e => e.FallaDes)
                    .HasName("ifalla_des");

                entity.Property(e => e.CoFalla)
                    .HasColumnName("co_falla")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoLin)
                    .HasColumnName("co_lin")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FallaDes)
                    .IsRequired()
                    .HasColumnName("falla_des")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Fisico>(entity =>
            {
                entity.HasKey(e => e.NumFis)
                    .HasName("fisico_num_fisico");

                entity.ToTable("fisico");

                entity.HasIndex(e => e.CoAlma)
                    .HasName("ico_alma");

                entity.HasIndex(e => e.FechaFis)
                    .HasName("ifecha_fis");

                entity.HasIndex(e => e.Moneda)
                    .HasName("imoneda");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1552060615")
                    .IsUnique();

                entity.Property(e => e.NumFis)
                    .HasColumnName("num_fis")
                    .ValueGeneratedNever();

                entity.Property(e => e.Anulado).HasColumnName("anulado");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Cerrado).HasColumnName("cerrado");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FechaFis)
                    .HasColumnName("fecha_fis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NroAjuste).HasColumnName("nro_ajuste");

                entity.Property(e => e.Observac)
                    .IsRequired()
                    .HasColumnName("observac")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoAlmaNavigation)
                    .WithMany(p => p.Fisico)
                    .HasForeignKey(d => d.CoAlma)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_fisico_sub_alma");

                entity.HasOne(d => d.CoSucuNavigation)
                    .WithMany(p => p.Fisico)
                    .HasForeignKey(d => d.CoSucu)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_fisico_almacen");

                entity.HasOne(d => d.MonedaNavigation)
                    .WithMany(p => p.Fisico)
                    .HasForeignKey(d => d.Moneda)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_fisico_moneda");
            });

            modelBuilder.Entity<Formatos>(entity =>
            {
                entity.HasKey(e => e.CoFor)
                    .HasName("formatos_co_for");

                entity.ToTable("formatos");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_501576825")
                    .IsUnique();

                entity.Property(e => e.CoFor)
                    .HasColumnName("co_for")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CantObse).HasColumnName("cant_obse");

                entity.Property(e => e.CantReng).HasColumnName("cant_reng");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.ColuObse).HasColumnName("colu_obse");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.GuardoEn)
                    .IsRequired()
                    .HasColumnName("guardo_en")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.LetrObse)
                    .IsRequired()
                    .HasColumnName("letr_obse")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.LinCuerpo).HasColumnName("lin_cuerpo");

                entity.Property(e => e.LinEncab).HasColumnName("lin_encab");

                entity.Property(e => e.NroLin).HasColumnName("nro_lin");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TipoFor)
                    .IsRequired()
                    .HasColumnName("tipo_for")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoLetra)
                    .IsRequired()
                    .HasColumnName("tipo_letra")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<GeneKit>(entity =>
            {
                entity.HasKey(e => e.GeneNum)
                    .HasName("gene_kit_gene_num");

                entity.ToTable("gene_kit");

                entity.HasIndex(e => e.CoAlma)
                    .HasName("ico_alma");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.Fecha)
                    .HasName("ifecha");

                entity.HasIndex(e => e.Moneda)
                    .HasName("imoneda");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1648060957")
                    .IsUnique();

                entity.HasIndex(e => new { e.Feccom, e.Numcom })
                    .HasName("ifeccom_numcom");

                entity.Property(e => e.GeneNum)
                    .HasColumnName("gene_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.AjuEnt).HasColumnName("aju_ent");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CostoTot)
                    .HasColumnName("costo_tot")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("('01/01/1900')");

                entity.Property(e => e.Fecha)
                    .HasColumnName("fecha")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.Pendiente2)
                    .HasColumnName("pendiente2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.StotalArt)
                    .HasColumnName("stotal_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoAlmaNavigation)
                    .WithMany(p => p.GeneKit)
                    .HasForeignKey(d => d.CoAlma)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_gene_kit_sub_alma");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.GeneKit)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_gene_kit_art");

                entity.HasOne(d => d.MonedaNavigation)
                    .WithMany(p => p.GeneKit)
                    .HasForeignKey(d => d.Moneda)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_gene_kit_moneda");
            });

            modelBuilder.Entity<HistPlan>(entity =>
            {
                entity.HasKey(e => new { e.IdHist, e.CoPlan });

                entity.ToTable("hist_plan");

                entity.Property(e => e.IdHist)
                    .HasColumnName("id_hist")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoPlan)
                    .HasColumnName("co_plan")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.AnoPlan)
                    .IsRequired()
                    .HasColumnName("ano_plan")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CanFech)
                    .HasColumnName("can_fech")
                    .HasColumnType("datetime");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesHist)
                    .IsRequired()
                    .HasColumnName("des_hist")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.GenFec)
                    .HasColumnName("gen_fec")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.MesPlan)
                    .IsRequired()
                    .HasColumnName("mes_plan")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PlanNum)
                    .IsRequired()
                    .HasColumnName("plan_num")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.XmlCont)
                    .IsRequired()
                    .HasColumnName("xml_cont")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoPlanNavigation)
                    .WithMany(p => p.HistPlan)
                    .HasForeignKey(d => d.CoPlan)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_hist_plan_plan_fis");
            });

            modelBuilder.Entity<ImpMun>(entity =>
            {
                entity.HasKey(e => new { e.CoImp, e.CoAlma })
                    .HasName("PK__imp_mun__46941AFF");

                entity.ToTable("imp_mun");

                entity.HasIndex(e => e.ImpDes)
                    .HasName("imp_mun_imp_des");

                entity.Property(e => e.CoImp)
                    .HasColumnName("co_imp")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoAlma)
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Alicuota)
                    .HasColumnName("alicuota")
                    .HasColumnType("decimal(6, 2)");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.ImpDes)
                    .IsRequired()
                    .HasColumnName("imp_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MTrib)
                    .HasColumnName("m_trib")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.NAct)
                    .IsRequired()
                    .HasColumnName("n_act")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoAlmaNavigation)
                    .WithMany(p => p.ImpMun)
                    .HasForeignKey(d => d.CoAlma)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_imp_mun_almacen");
            });

            modelBuilder.Entity<Import>(entity =>
            {
                entity.HasKey(e => e.ImpNum);

                entity.ToTable("import");

                entity.Property(e => e.ImpNum)
                    .HasColumnName("imp_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.AjusNum).HasColumnName("ajus_num");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoMone)
                    .IsRequired()
                    .HasColumnName("co_mone")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DGasto).HasColumnName("d_gasto");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecImp)
                    .HasColumnName("fec_imp")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.NCostB)
                    .IsRequired()
                    .HasColumnName("n_cost_b")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasColumnName("status")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoMoneNavigation)
                    .WithMany(p => p.Import)
                    .HasForeignKey(d => d.CoMone)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_import_moneda");
            });

            modelBuilder.Entity<Importac>(entity =>
            {
                entity.HasKey(e => e.ImpNum);

                entity.ToTable("importac");

                entity.HasIndex(e => new { e.Feccom, e.Numcom })
                    .HasName("ifeccom_numcom");

                entity.Property(e => e.ImpNum)
                    .HasColumnName("imp_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Anulada).HasColumnName("anulada");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("('01/01/1900')");

                entity.Property(e => e.Impresa).HasColumnName("impresa");

                entity.Property(e => e.Iva)
                    .HasColumnName("iva")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MontoBase)
                    .HasColumnName("monto_base")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.NumPlvc).HasColumnName("num_plvc");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.OtroCos).HasColumnName("otro_cos");

                entity.Property(e => e.Planilla)
                    .IsRequired()
                    .HasColumnName("planilla")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TipoDis).HasColumnName("tipo_dis");

                entity.Property(e => e.TotFai).HasColumnName("tot_fai");

                entity.Property(e => e.TotFci).HasColumnName("tot_fci");

                entity.Property(e => e.TotPlvc).HasColumnName("tot_plvc");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<InfDmc>(entity =>
            {
                entity.HasKey(e => new { e.InfNum, e.Tipo });

                entity.ToTable("inf_dmc");

                entity.Property(e => e.InfNum)
                    .HasColumnName("inf_num")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Tipo)
                    .HasColumnName("tipo")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Clave)
                    .IsRequired()
                    .HasColumnName("clave")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Dir)
                    .IsRequired()
                    .HasColumnName("dir")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.InfDesc)
                    .IsRequired()
                    .HasColumnName("inf_desc")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Telefono)
                    .IsRequired()
                    .HasColumnName("telefono")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Kit>(entity =>
            {
                entity.HasKey(e => e.KitNum)
                    .HasName("kit_kit_num");

                entity.ToTable("kit");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.FecEmis)
                    .HasName("ifec_emis");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1744061299")
                    .IsUnique();

                entity.Property(e => e.KitNum)
                    .HasColumnName("kit_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Costeo).HasColumnName("costeo");

                entity.Property(e => e.DesKit)
                    .IsRequired()
                    .HasColumnName("des_kit")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.Kit)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_kit_art");
            });

            modelBuilder.Entity<LinArt>(entity =>
            {
                entity.HasKey(e => e.CoLin)
                    .HasName("lin_art_co_lin");

                entity.ToTable("lin_art");

                entity.HasIndex(e => e.LinDes)
                    .HasName("ilin_des");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1824061584")
                    .IsUnique();

                entity.Property(e => e.CoLin)
                    .HasColumnName("co_lin")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoImun)
                    .IsRequired()
                    .HasColumnName("co_imun")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoReten)
                    .IsRequired()
                    .HasColumnName("co_reten")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.ComiLin)
                    .HasColumnName("comi_lin")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ComiLin2)
                    .HasColumnName("comi_lin2")
                    .HasColumnType("numeric(6, 2)");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.ILinDes)
                    .IsRequired()
                    .HasColumnName("i_lin_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.LinDes)
                    .IsRequired()
                    .HasColumnName("lin_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Movil).HasColumnName("movil");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.RowId)
                    .IsRequired()
                    .HasColumnName("row_id")
                    .IsRowVersion()
                    .IsConcurrencyToken();

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Va).HasColumnName("va");
            });

            modelBuilder.Entity<Lote>(entity =>
            {
                entity.HasKey(e => new { e.CoArt, e.NroLote });

                entity.ToTable("lote");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.NroLote)
                    .HasName("inro_lote");

                entity.Property(e => e.CoArt)
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroLote)
                    .HasColumnName("nro_lote")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FecLote)
                    .HasColumnName("fec_lote")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.PrecVta1)
                    .HasColumnName("prec_vta1")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PrecVta2)
                    .HasColumnName("prec_vta2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PrecVta3)
                    .HasColumnName("prec_vta3")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PrecVta4)
                    .HasColumnName("prec_vta4")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PrecVta5)
                    .HasColumnName("prec_vta5")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(18, 5)");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.LoteNavigation)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_lote_art");
            });

            modelBuilder.Entity<ManLic>(entity =>
            {
                entity.HasKey(e => e.CoArt);

                entity.ToTable("man_lic");

                entity.Property(e => e.CoArt)
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo2)
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo3)
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo4)
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo5)
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo6)
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo7)
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo8)
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoUsEl)
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoUsIn)
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoUsMo)
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime");

                entity.Property(e => e.ManLic1).HasColumnName("man_lic");

                entity.Property(e => e.Revisado)
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsFixedLength();

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.RowguidCoArt).HasColumnName("rowguid_co_art");

                entity.Property(e => e.Trasnfe)
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Moneda>(entity =>
            {
                entity.HasKey(e => e.CoMone)
                    .HasName("moneda_co_mone");

                entity.ToTable("moneda");

                entity.HasIndex(e => e.MoneDes)
                    .HasName("imone_des");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1904061869")
                    .IsUnique();

                entity.Property(e => e.CoMone)
                    .HasColumnName("co_mone")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Cambio)
                    .HasColumnName("cambio")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.MoneDes)
                    .IsRequired()
                    .HasColumnName("mone_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<MovBan>(entity =>
            {
                entity.HasKey(e => e.MovNum)
                    .HasName("mov_ban_mban_num");

                entity.ToTable("mov_ban");

                entity.HasIndex(e => e.Codigo)
                    .HasName("icodigo");

                entity.HasIndex(e => e.CtaEgre)
                    .HasName("icta_egre");

                entity.HasIndex(e => e.DepCon)
                    .HasName("idep_con");

                entity.HasIndex(e => e.DepNum)
                    .HasName("dep_num");

                entity.HasIndex(e => e.DocNum)
                    .HasName("idoc_num");

                entity.HasIndex(e => e.Fecha)
                    .HasName("ifecha");

                entity.HasIndex(e => e.FormaPag)
                    .HasName("iforma_pag");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_2000062211")
                    .IsUnique();

                entity.HasIndex(e => e.TipoOp)
                    .HasName("itipo_op");

                entity.HasIndex(e => new { e.Feccom, e.Numcom })
                    .HasName("ifeccom_numcom");

                entity.Property(e => e.MovNum)
                    .HasColumnName("mov_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Anulado).HasColumnName("anulado");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.BancTarj)
                    .IsRequired()
                    .HasColumnName("banc_tarj")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CobPag).HasColumnName("cob_pag");

                entity.Property(e => e.CodIngben)
                    .IsRequired()
                    .HasColumnName("cod_ingben")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasColumnName("codigo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comisiontv)
                    .HasColumnName("COMISIONTV")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CtaEgre)
                    .IsRequired()
                    .HasColumnName("cta_egre")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DepCon).HasColumnName("dep_con");

                entity.Property(e => e.DepNum).HasColumnName("dep_num");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DocNum)
                    .IsRequired()
                    .HasColumnName("doc_num")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecCon)
                    .HasColumnName("fec_con")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("('01/01/1900')");

                entity.Property(e => e.Fecha)
                    .HasColumnName("fecha")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FechaChe)
                    .HasColumnName("fecha_che")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FormaPag)
                    .IsRequired()
                    .HasColumnName("forma_pag")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Idb)
                    .HasColumnName("idb")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Impuestotv)
                    .HasColumnName("IMPUESTOTV")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Moneda2)
                    .IsRequired()
                    .HasColumnName("moneda2")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MontoD)
                    .HasColumnName("monto_d")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MontoH)
                    .HasColumnName("monto_h")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.OriDep).HasColumnName("ori_dep");

                entity.Property(e => e.Origen)
                    .IsRequired()
                    .HasColumnName("origen")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Tasa2)
                    .HasColumnName("tasa2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TipoOp)
                    .IsRequired()
                    .HasColumnName("tipo_op")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CodigoNavigation)
                    .WithMany(p => p.MovBan)
                    .HasForeignKey(d => d.Codigo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_mov_ban_cuentas");

                entity.HasOne(d => d.CtaEgreNavigation)
                    .WithMany(p => p.MovBan)
                    .HasForeignKey(d => d.CtaEgre)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_mov_ban_cta_ingr");

                entity.HasOne(d => d.MonedaNavigation)
                    .WithMany(p => p.MovBan)
                    .HasForeignKey(d => d.Moneda)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_mov_ban_moneda");
            });

            modelBuilder.Entity<MovCaj>(entity =>
            {
                entity.HasKey(e => e.MovNum)
                    .HasName("mov_caj_mcaj_num");

                entity.ToTable("mov_caj");

                entity.HasIndex(e => e.Codigo)
                    .HasName("icodigo");

                entity.HasIndex(e => e.CtaEgre)
                    .HasName("icta_egre");

                entity.HasIndex(e => e.DepCon)
                    .HasName("idep_con");

                entity.HasIndex(e => e.DepNum)
                    .HasName("idep_num");

                entity.HasIndex(e => e.DocNum)
                    .HasName("idoc_num");

                entity.HasIndex(e => e.Fecha)
                    .HasName("ifecha");

                entity.HasIndex(e => e.FormaPag)
                    .HasName("iforma_pag");

                entity.HasIndex(e => e.NumTurno)
                    .HasName("IX_mov_caj");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_2096062553")
                    .IsUnique();

                entity.HasIndex(e => e.TipoOp)
                    .HasName("itipo_op");

                entity.HasIndex(e => new { e.Feccom, e.Numcom })
                    .HasName("ifeccom_numcom");

                entity.Property(e => e.MovNum)
                    .HasColumnName("mov_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Anulado).HasColumnName("anulado");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.BancTarj)
                    .IsRequired()
                    .HasColumnName("banc_tarj")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Clave)
                    .IsRequired()
                    .HasColumnName("clave")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CobPag).HasColumnName("cob_pag");

                entity.Property(e => e.CodIngben)
                    .IsRequired()
                    .HasColumnName("cod_ingben")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasColumnName("codigo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CtaEgre)
                    .IsRequired()
                    .HasColumnName("cta_egre")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DepCon).HasColumnName("dep_con");

                entity.Property(e => e.DepNum).HasColumnName("dep_num");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DocNum)
                    .IsRequired()
                    .HasColumnName("doc_num")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DocSel).HasColumnName("doc_sel");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("('01/01/1900')");

                entity.Property(e => e.Fecha)
                    .HasColumnName("fecha")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FechaChe)
                    .HasColumnName("fecha_che")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FormaPag)
                    .IsRequired()
                    .HasColumnName("forma_pag")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MonDep)
                    .HasColumnName("mon_dep")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('BS')");

                entity.Property(e => e.Moneda2)
                    .IsRequired()
                    .HasColumnName("moneda2")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MontoD)
                    .HasColumnName("monto_d")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MontoH)
                    .HasColumnName("monto_h")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MovAfec).HasColumnName("mov_afec");

                entity.Property(e => e.MovtGen).HasColumnName("movt_gen");

                entity.Property(e => e.MovtOri).HasColumnName("movt_ori");

                entity.Property(e => e.NumTurno).HasColumnName("num_turno");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.Operador)
                    .IsRequired()
                    .HasColumnName("operador")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.OriDep).HasColumnName("ori_dep");

                entity.Property(e => e.Origen)
                    .IsRequired()
                    .HasColumnName("origen")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Tasa2)
                    .HasColumnName("tasa2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TipoOp)
                    .IsRequired()
                    .HasColumnName("tipo_op")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Tracaja).HasColumnName("tracaja");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CodigoNavigation)
                    .WithMany(p => p.MovCaj)
                    .HasForeignKey(d => d.Codigo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_mov_caj_cajas");

                entity.HasOne(d => d.CtaEgreNavigation)
                    .WithMany(p => p.MovCaj)
                    .HasForeignKey(d => d.CtaEgre)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_mov_caj_cta_ingr");

                entity.HasOne(d => d.MonedaNavigation)
                    .WithMany(p => p.MovCaj)
                    .HasForeignKey(d => d.Moneda)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_mov_caj_moneda");
            });

            modelBuilder.Entity<NdeReng>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Nde_reng");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Iva)
                    .HasColumnName("iva")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Iva2)
                    .HasColumnName("iva2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IvaReng)
                    .HasColumnName("iva_reng")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente)
                    .HasColumnName("pendiente")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcDesc)
                    .IsRequired()
                    .HasColumnName("porc_desc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PrecVta)
                    .HasColumnName("prec_vta")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Procesado)
                    .HasColumnName("procesado")
                    .HasColumnType("decimal(38, 6)");

                entity.Property(e => e.RengNeto)
                    .HasColumnName("reng_neto")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RengNeto2)
                    .HasColumnName("reng_neto2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasMaxLength(23)
                    .IsUnicode(false);

                entity.Property(e => e.Tasag)
                    .HasColumnName("tasag")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TotBruto)
                    .HasColumnName("tot_bruto")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotBruto2)
                    .HasColumnName("tot_bruto2")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotNeto)
                    .HasColumnName("tot_neto")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotNeto2)
                    .HasColumnName("tot_neto2")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalDev)
                    .HasColumnName("total_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<NdrReng>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Ndr_reng");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Iva)
                    .HasColumnName("iva")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Iva2)
                    .HasColumnName("iva2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IvaReng)
                    .HasColumnName("iva_reng")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente)
                    .HasColumnName("pendiente")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcDesc)
                    .IsRequired()
                    .HasColumnName("porc_desc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PrecVta)
                    .HasColumnName("prec_vta")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Procesado)
                    .HasColumnName("procesado")
                    .HasColumnType("decimal(38, 6)");

                entity.Property(e => e.RengNeto)
                    .HasColumnName("reng_neto")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RengNeto2)
                    .HasColumnName("reng_neto2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasMaxLength(23)
                    .IsUnicode(false);

                entity.Property(e => e.Tasag)
                    .HasColumnName("tasag")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TotBruto)
                    .HasColumnName("tot_bruto")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotBruto2)
                    .HasColumnName("tot_bruto2")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotNeto)
                    .HasColumnName("tot_neto")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotNeto2)
                    .HasColumnName("tot_neto2")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalDev)
                    .HasColumnName("total_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<NotDep>(entity =>
            {
                entity.HasKey(e => e.FactNum)
                    .HasName("not_dep_ndd_num");

                entity.ToTable("not_dep");

                entity.HasIndex(e => e.CoCli)
                    .HasName("ico_cli");

                entity.HasIndex(e => e.CoTran)
                    .HasName("ico_tran");

                entity.HasIndex(e => e.CoVen)
                    .HasName("ico_ven");

                entity.HasIndex(e => e.FecEmis)
                    .HasName("ifec_emis");

                entity.HasIndex(e => e.FormaPag)
                    .HasName("iforma_pag");

                entity.HasIndex(e => e.Moneda)
                    .HasName("imoneda");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_44579247")
                    .IsUnique();

                entity.HasIndex(e => e.Status)
                    .HasName("istatus");

                entity.HasIndex(e => new { e.Feccom, e.Numcom })
                    .HasName("ifeccom_numcom");

                entity.Property(e => e.FactNum)
                    .HasColumnName("fact_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Anulada).HasColumnName("anulada");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoTran)
                    .IsRequired()
                    .HasColumnName("co_tran")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Contrib).HasColumnName("contrib");

                entity.Property(e => e.CtaContab)
                    .IsRequired()
                    .HasColumnName("cta_contab")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DirEnt)
                    .IsRequired()
                    .HasColumnName("dir_ent")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("('01/01/1900')");

                entity.Property(e => e.FormaPag)
                    .IsRequired()
                    .HasColumnName("forma_pag")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.GlobDesc)
                    .HasColumnName("glob_desc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Impresa).HasColumnName("impresa");

                entity.Property(e => e.Iva)
                    .HasColumnName("iva")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IvaDev)
                    .HasColumnName("iva_dev")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MonIlc)
                    .HasColumnName("mon_ilc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Nit)
                    .IsRequired()
                    .HasColumnName("nit")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasColumnName("nombre")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.Origen)
                    .IsRequired()
                    .HasColumnName("origen")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.OrigenD)
                    .IsRequired()
                    .HasColumnName("origen_d")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Otros1)
                    .HasColumnName("otros1")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Otros2)
                    .HasColumnName("otros2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Otros3)
                    .HasColumnName("otros3")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcGdesc)
                    .IsRequired()
                    .HasColumnName("porc_gdesc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PorcReca)
                    .IsRequired()
                    .HasColumnName("porc_reca")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rif)
                    .IsRequired()
                    .HasColumnName("rif")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Saldo)
                    .HasColumnName("saldo")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Salestax)
                    .IsRequired()
                    .HasColumnName("salestax")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Seriales).HasColumnName("seriales");

                entity.Property(e => e.StaProd)
                    .HasColumnName("sta_prod")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasColumnName("status")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Tasag)
                    .HasColumnName("tasag")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasag10)
                    .HasColumnName("tasag10")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasag20)
                    .HasColumnName("tasag20")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Telefono)
                    .IsRequired()
                    .HasColumnName("telefono")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((60)))");

                entity.Property(e => e.TotBruto)
                    .HasColumnName("tot_bruto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotFlete)
                    .HasColumnName("tot_flete")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotNeto)
                    .HasColumnName("tot_neto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotReca)
                    .HasColumnName("tot_reca")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalCp)
                    .HasColumnName("total_cp")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalUc)
                    .HasColumnName("total_uc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Totklu)
                    .HasColumnName("totklu")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoCliNavigation)
                    .WithMany(p => p.NotDep)
                    .HasForeignKey(d => d.CoCli)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_not_dep_clientes");

                entity.HasOne(d => d.CoSucuNavigation)
                    .WithMany(p => p.NotDep)
                    .HasForeignKey(d => d.CoSucu)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_not_dep_almacen");

                entity.HasOne(d => d.CoTranNavigation)
                    .WithMany(p => p.NotDep)
                    .HasForeignKey(d => d.CoTran)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_not_dep_transpor");

                entity.HasOne(d => d.CoVenNavigation)
                    .WithMany(p => p.NotDep)
                    .HasForeignKey(d => d.CoVen)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_not_dep_vendedor");

                entity.HasOne(d => d.FormaPagNavigation)
                    .WithMany(p => p.NotDep)
                    .HasForeignKey(d => d.FormaPag)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_not_dep_condicio");

                entity.HasOne(d => d.MonedaNavigation)
                    .WithMany(p => p.NotDep)
                    .HasForeignKey(d => d.Moneda)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_not_dep_moneda");
            });

            modelBuilder.Entity<NotEnt>(entity =>
            {
                entity.HasKey(e => e.FactNum)
                    .HasName("not_ent_nde_num");

                entity.ToTable("not_ent");

                entity.HasIndex(e => e.CoCli)
                    .HasName("ico_cli");

                entity.HasIndex(e => e.CoTran)
                    .HasName("ico_tran");

                entity.HasIndex(e => e.CoVen)
                    .HasName("ico_ven");

                entity.HasIndex(e => e.FecEmis)
                    .HasName("ifec_emis");

                entity.HasIndex(e => e.FormaPag)
                    .HasName("iforma_pag");

                entity.HasIndex(e => e.Moneda)
                    .HasName("imoneda");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_140579589")
                    .IsUnique();

                entity.HasIndex(e => e.Status)
                    .HasName("isatatus");

                entity.HasIndex(e => new { e.Feccom, e.Numcom })
                    .HasName("ifeccom_numcom");

                entity.Property(e => e.FactNum)
                    .HasColumnName("fact_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Anulada).HasColumnName("anulada");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoTran)
                    .IsRequired()
                    .HasColumnName("co_tran")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Contrib).HasColumnName("contrib");

                entity.Property(e => e.CtaContab)
                    .IsRequired()
                    .HasColumnName("cta_contab")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DirEnt)
                    .IsRequired()
                    .HasColumnName("dir_ent")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("('01/01/1900')");

                entity.Property(e => e.FormaPag)
                    .IsRequired()
                    .HasColumnName("forma_pag")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.GlobDesc)
                    .HasColumnName("glob_desc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Impresa).HasColumnName("impresa");

                entity.Property(e => e.Iva)
                    .HasColumnName("iva")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IvaDev)
                    .HasColumnName("iva_dev")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MonIlc)
                    .HasColumnName("mon_ilc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Nit)
                    .IsRequired()
                    .HasColumnName("nit")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasColumnName("nombre")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.Numcon)
                    .IsRequired()
                    .HasColumnName("numcon")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Origen)
                    .IsRequired()
                    .HasColumnName("origen")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.OrigenD)
                    .IsRequired()
                    .HasColumnName("origen_d")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Otros1)
                    .HasColumnName("otros1")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Otros2)
                    .HasColumnName("otros2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Otros3)
                    .HasColumnName("otros3")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcGdesc)
                    .IsRequired()
                    .HasColumnName("porc_gdesc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PorcReca)
                    .IsRequired()
                    .HasColumnName("porc_reca")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rif)
                    .IsRequired()
                    .HasColumnName("rif")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Saldo)
                    .HasColumnName("saldo")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Salestax)
                    .IsRequired()
                    .HasColumnName("salestax")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Seriales).HasColumnName("seriales");

                entity.Property(e => e.StaProd)
                    .HasColumnName("sta_prod")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasColumnName("status")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Tasag)
                    .HasColumnName("tasag")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasag10)
                    .HasColumnName("tasag10")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasag20)
                    .HasColumnName("tasag20")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Telefono)
                    .IsRequired()
                    .HasColumnName("telefono")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((60)))");

                entity.Property(e => e.TotBruto)
                    .HasColumnName("tot_bruto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotFlete)
                    .HasColumnName("tot_flete")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotNeto)
                    .HasColumnName("tot_neto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotReca)
                    .HasColumnName("tot_reca")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalCp)
                    .HasColumnName("total_cp")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalUc)
                    .HasColumnName("total_uc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Totklu)
                    .HasColumnName("totklu")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoCliNavigation)
                    .WithMany(p => p.NotEnt)
                    .HasForeignKey(d => d.CoCli)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_not_ent_clientes");

                entity.HasOne(d => d.CoSucuNavigation)
                    .WithMany(p => p.NotEnt)
                    .HasForeignKey(d => d.CoSucu)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_not_ent_almacen");

                entity.HasOne(d => d.CoTranNavigation)
                    .WithMany(p => p.NotEnt)
                    .HasForeignKey(d => d.CoTran)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_not_ent_transpor");

                entity.HasOne(d => d.CoVenNavigation)
                    .WithMany(p => p.NotEnt)
                    .HasForeignKey(d => d.CoVen)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_not_ent_vendedor");

                entity.HasOne(d => d.FormaPagNavigation)
                    .WithMany(p => p.NotEnt)
                    .HasForeignKey(d => d.FormaPag)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_not_ent_condicio");

                entity.HasOne(d => d.MonedaNavigation)
                    .WithMany(p => p.NotEnt)
                    .HasForeignKey(d => d.Moneda)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_not_ent_moneda");
            });

            modelBuilder.Entity<NotRec>(entity =>
            {
                entity.HasKey(e => e.FactNum)
                    .HasName("not_rec_ndr_num");

                entity.ToTable("not_rec");

                entity.HasIndex(e => e.CoCli)
                    .HasName("ico_cli");

                entity.HasIndex(e => e.FecEmis)
                    .HasName("ifec_emis");

                entity.HasIndex(e => e.FormaPag)
                    .HasName("iforma_pag");

                entity.HasIndex(e => e.Moneda)
                    .HasName("imoneda");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_236579931")
                    .IsUnique();

                entity.HasIndex(e => e.Status)
                    .HasName("istatus");

                entity.HasIndex(e => new { e.Factura, e.CoCli })
                    .HasName("notadr_num");

                entity.HasIndex(e => new { e.Feccom, e.Numcom })
                    .HasName("ifeccom_numcom");

                entity.Property(e => e.FactNum)
                    .HasColumnName("fact_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Anulada).HasColumnName("anulada");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoTran)
                    .IsRequired()
                    .HasColumnName("co_tran")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Contrib).HasColumnName("contrib");

                entity.Property(e => e.CtaContab)
                    .IsRequired()
                    .HasColumnName("cta_contab")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DirEnt)
                    .IsRequired()
                    .HasColumnName("dir_ent")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Factura)
                    .IsRequired()
                    .HasColumnName("factura")
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("('01/01/1900')");

                entity.Property(e => e.FormaPag)
                    .IsRequired()
                    .HasColumnName("forma_pag")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.GlobDesc)
                    .HasColumnName("glob_desc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Impresa).HasColumnName("impresa");

                entity.Property(e => e.Iva)
                    .HasColumnName("iva")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IvaDev)
                    .HasColumnName("iva_dev")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MonIlc)
                    .HasColumnName("mon_ilc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Nit)
                    .IsRequired()
                    .HasColumnName("nit")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasColumnName("nombre")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.Origen)
                    .IsRequired()
                    .HasColumnName("origen")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.OrigenD)
                    .IsRequired()
                    .HasColumnName("origen_d")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Otros1)
                    .HasColumnName("otros1")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Otros2)
                    .HasColumnName("otros2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Otros3)
                    .HasColumnName("otros3")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcGdesc)
                    .IsRequired()
                    .HasColumnName("porc_gdesc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PorcReca)
                    .IsRequired()
                    .HasColumnName("porc_reca")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rif)
                    .IsRequired()
                    .HasColumnName("rif")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Saldo)
                    .HasColumnName("saldo")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Salestax)
                    .IsRequired()
                    .HasColumnName("salestax")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Seriales).HasColumnName("seriales");

                entity.Property(e => e.StaProd)
                    .HasColumnName("sta_prod")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasColumnName("status")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Tasag)
                    .HasColumnName("tasag")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasag10)
                    .HasColumnName("tasag10")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasag20)
                    .HasColumnName("tasag20")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Telefono)
                    .IsRequired()
                    .HasColumnName("telefono")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((60)))");

                entity.Property(e => e.TotBruto)
                    .HasColumnName("tot_bruto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotFlete)
                    .HasColumnName("tot_flete")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotNeto)
                    .HasColumnName("tot_neto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotReca)
                    .HasColumnName("tot_reca")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalCp)
                    .HasColumnName("total_cp")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalUc)
                    .HasColumnName("total_uc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Totklu)
                    .HasColumnName("totklu")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoCliNavigation)
                    .WithMany(p => p.NotRec)
                    .HasForeignKey(d => d.CoCli)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_not_rec_prov");

                entity.HasOne(d => d.CoSucuNavigation)
                    .WithMany(p => p.NotRec)
                    .HasForeignKey(d => d.CoSucu)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_not_rec_almacen");

                entity.HasOne(d => d.FormaPagNavigation)
                    .WithMany(p => p.NotRec)
                    .HasForeignKey(d => d.FormaPag)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_not_rec_condicio");

                entity.HasOne(d => d.MonedaNavigation)
                    .WithMany(p => p.NotRec)
                    .HasForeignKey(d => d.Moneda)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_not_rec_moneda");
            });

            modelBuilder.Entity<OrdPago>(entity =>
            {
                entity.HasKey(e => e.OrdNum)
                    .HasName("ord_pago_opag_num");

                entity.ToTable("ord_pago");

                entity.HasIndex(e => e.CodBen)
                    .HasName("ico_ben");

                entity.HasIndex(e => e.CodCaja)
                    .HasName("icod_caja");

                entity.HasIndex(e => e.CodCta)
                    .HasName("icod_cta");

                entity.HasIndex(e => e.CtaEgre)
                    .HasName("icta_egre");

                entity.HasIndex(e => e.Fecha)
                    .HasName("ifecha");

                entity.HasIndex(e => e.FormaPag)
                    .HasName("iforma_pag");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_348580330")
                    .IsUnique();

                entity.HasIndex(e => new { e.Feccom, e.Numcom })
                    .HasName("ifeccom_numcom");

                entity.Property(e => e.OrdNum)
                    .HasColumnName("ord_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Anulada).HasColumnName("anulada");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Cheque)
                    .IsRequired()
                    .HasColumnName("cheque")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoIslr)
                    .IsRequired()
                    .HasColumnName("co_islr")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CodBen)
                    .IsRequired()
                    .HasColumnName("cod_ben")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CodCaja)
                    .IsRequired()
                    .HasColumnName("cod_caja")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CodCta)
                    .IsRequired()
                    .HasColumnName("cod_cta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CtaEgre)
                    .IsRequired()
                    .HasColumnName("cta_egre")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecPag)
                    .HasColumnName("fec_pag")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("('01/01/1900')");

                entity.Property(e => e.Fecha)
                    .HasColumnName("fecha")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FormaPag)
                    .IsRequired()
                    .HasColumnName("forma_pag")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Monto)
                    .HasColumnName("monto")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MontoObj)
                    .HasColumnName("monto_obj")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MontoReten)
                    .HasColumnName("monto_reten")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MovIslr).HasColumnName("mov_islr");

                entity.Property(e => e.MovNum).HasColumnName("mov_num");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.Origen)
                    .IsRequired()
                    .HasColumnName("origen")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.OrigenD)
                    .IsRequired()
                    .HasColumnName("origen_d")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Pagar).HasColumnName("pagar");

                entity.Property(e => e.PorcRetn)
                    .HasColumnName("porc_retn")
                    .HasColumnType("decimal(18, 8)");

                entity.Property(e => e.RengSi).HasColumnName("reng_si");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Salestax)
                    .IsRequired()
                    .HasColumnName("salestax")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.SinoReten).HasColumnName("sino_reten");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasColumnName("status")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Sustraen)
                    .HasColumnName("sustraen")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoSucuNavigation)
                    .WithMany(p => p.OrdPago)
                    .HasForeignKey(d => d.CoSucu)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ord_pago_almacen");

                entity.HasOne(d => d.CodBenNavigation)
                    .WithMany(p => p.OrdPago)
                    .HasForeignKey(d => d.CodBen)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ord_pago_benefici");

                entity.HasOne(d => d.CtaEgreNavigation)
                    .WithMany(p => p.OrdPago)
                    .HasForeignKey(d => d.CtaEgre)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ord_pago_cta_ingr");
            });

            modelBuilder.Entity<OrdeReng>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Orde_reng");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Iva)
                    .HasColumnName("iva")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Iva2)
                    .HasColumnName("iva2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IvaReng)
                    .HasColumnName("iva_reng")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente)
                    .HasColumnName("pendiente")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcDesc)
                    .IsRequired()
                    .HasColumnName("porc_desc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PrecVta)
                    .HasColumnName("prec_vta")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Procesado)
                    .HasColumnName("procesado")
                    .HasColumnType("decimal(38, 6)");

                entity.Property(e => e.RengNeto)
                    .HasColumnName("reng_neto")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RengNeto2)
                    .HasColumnName("reng_neto2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasMaxLength(23)
                    .IsUnicode(false);

                entity.Property(e => e.Tasag)
                    .HasColumnName("tasag")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TotBruto)
                    .HasColumnName("tot_bruto")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotBruto2)
                    .HasColumnName("tot_bruto2")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotNeto)
                    .HasColumnName("tot_neto")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotNeto2)
                    .HasColumnName("tot_neto2")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalDev)
                    .HasColumnName("total_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Ordenes>(entity =>
            {
                entity.HasKey(e => e.FactNum)
                    .HasName("ordenes_ord_num");

                entity.ToTable("ordenes");

                entity.HasIndex(e => e.CoCli)
                    .HasName("ico_cli");

                entity.HasIndex(e => e.FecEmis)
                    .HasName("ifec_emis");

                entity.HasIndex(e => e.FormaPag)
                    .HasName("iforma_pag");

                entity.HasIndex(e => e.Moneda)
                    .HasName("imoneda");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_444580672")
                    .IsUnique();

                entity.HasIndex(e => e.Status)
                    .HasName("istatus");

                entity.HasIndex(e => new { e.Feccom, e.Numcom })
                    .HasName("ifeccom_numcom");

                entity.Property(e => e.FactNum)
                    .HasColumnName("fact_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Anulada).HasColumnName("anulada");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoTran)
                    .IsRequired()
                    .HasColumnName("co_tran")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Contrib).HasColumnName("contrib");

                entity.Property(e => e.CtaContab)
                    .IsRequired()
                    .HasColumnName("cta_contab")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DirEnt)
                    .IsRequired()
                    .HasColumnName("dir_ent")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("('01/01/1900')");

                entity.Property(e => e.FormaPag)
                    .IsRequired()
                    .HasColumnName("forma_pag")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.GlobDesc)
                    .HasColumnName("glob_desc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Impresa).HasColumnName("impresa");

                entity.Property(e => e.InfImp)
                    .IsRequired()
                    .HasColumnName("inf_imp")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Iva)
                    .HasColumnName("iva")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.IvaDev)
                    .HasColumnName("iva_dev")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MonIlc)
                    .HasColumnName("mon_ilc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Nit)
                    .IsRequired()
                    .HasColumnName("nit")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasColumnName("nombre")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.Origen)
                    .IsRequired()
                    .HasColumnName("origen")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.OrigenD)
                    .IsRequired()
                    .HasColumnName("origen_d")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Otros1)
                    .HasColumnName("otros1")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Otros2)
                    .HasColumnName("otros2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Otros3)
                    .HasColumnName("otros3")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcGdesc)
                    .IsRequired()
                    .HasColumnName("porc_gdesc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PorcReca)
                    .IsRequired()
                    .HasColumnName("porc_reca")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rif)
                    .IsRequired()
                    .HasColumnName("rif")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Saldo)
                    .HasColumnName("saldo")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Salestax)
                    .IsRequired()
                    .HasColumnName("salestax")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Seriales).HasColumnName("seriales");

                entity.Property(e => e.StaProd)
                    .HasColumnName("sta_prod")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasColumnName("status")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Tasag)
                    .HasColumnName("tasag")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasag10)
                    .HasColumnName("tasag10")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasag20)
                    .HasColumnName("tasag20")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Telefono)
                    .IsRequired()
                    .HasColumnName("telefono")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((60)))");

                entity.Property(e => e.TotBruto)
                    .HasColumnName("tot_bruto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotFlete)
                    .HasColumnName("tot_flete")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotNeto)
                    .HasColumnName("tot_neto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotReca)
                    .HasColumnName("tot_reca")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalCp)
                    .HasColumnName("total_cp")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalUc)
                    .HasColumnName("total_uc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Totklu)
                    .HasColumnName("totklu")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoCliNavigation)
                    .WithMany(p => p.Ordenes)
                    .HasForeignKey(d => d.CoCli)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ordenes_prov");

                entity.HasOne(d => d.CoSucuNavigation)
                    .WithMany(p => p.Ordenes)
                    .HasForeignKey(d => d.CoSucu)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ordenes_almacen");

                entity.HasOne(d => d.FormaPagNavigation)
                    .WithMany(p => p.Ordenes)
                    .HasForeignKey(d => d.FormaPag)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ordenes_condicio");

                entity.HasOne(d => d.MonedaNavigation)
                    .WithMany(p => p.Ordenes)
                    .HasForeignKey(d => d.Moneda)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ordenes_moneda");
            });

            modelBuilder.Entity<PagoRengpago>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Pago_rengpago");

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CobNum).HasColumnName("cob_num");

                entity.Property(e => e.FecCob)
                    .HasColumnName("fec_cob")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MontDoc)
                    .HasColumnName("mont_doc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Monto)
                    .HasColumnName("monto")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Recibo)
                    .IsRequired()
                    .HasColumnName("recibo")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TipCob)
                    .IsRequired()
                    .HasColumnName("tip_cob")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Pagos>(entity =>
            {
                entity.HasKey(e => e.CobNum)
                    .HasName("pagos_pag_num");

                entity.ToTable("pagos");

                entity.HasIndex(e => e.CoCli)
                    .HasName("ico_cli");

                entity.HasIndex(e => e.FecCob)
                    .HasName("ifec_cob");

                entity.HasIndex(e => e.Moneda)
                    .HasName("imoneda");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_540581014")
                    .IsUnique();

                entity.HasIndex(e => new { e.Feccom, e.Numcom })
                    .HasName("ifeccom_numcom");

                entity.Property(e => e.CobNum)
                    .HasColumnName("cob_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.AdelNum).HasColumnName("adel_num");

                entity.Property(e => e.Anulado).HasColumnName("anulado");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Devdinero).HasColumnName("devdinero");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Dppago)
                    .HasColumnName("dppago")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecCob)
                    .HasColumnName("fec_cob")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("('01/01/1900')");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MontNcr)
                    .HasColumnName("mont_ncr")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Monto)
                    .HasColumnName("monto")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Ncr).HasColumnName("ncr");

                entity.Property(e => e.NumDev).HasColumnName("num_dev");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.Origen)
                    .HasColumnName("origen")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.OrigenD)
                    .HasColumnName("origen_d")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Recibo)
                    .IsRequired()
                    .HasColumnName("recibo")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TcomiArt)
                    .HasColumnName("tcomi_art")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TcomiConc)
                    .HasColumnName("tcomi_conc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TcomiLine)
                    .HasColumnName("tcomi_line")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TcomiPorc)
                    .HasColumnName("tcomi_porc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoCliNavigation)
                    .WithMany(p => p.Pagos)
                    .HasForeignKey(d => d.CoCli)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_pagos_prov");

                entity.HasOne(d => d.CoSucuNavigation)
                    .WithMany(p => p.Pagos)
                    .HasForeignKey(d => d.CoSucu)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_pagos_almacen");

                entity.HasOne(d => d.MonedaNavigation)
                    .WithMany(p => p.Pagos)
                    .HasForeignKey(d => d.Moneda)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_pagos_moneda");
            });

            modelBuilder.Entity<Paises>(entity =>
            {
                entity.HasKey(e => e.CoPais);

                entity.Property(e => e.CoPais)
                    .HasColumnName("co_pais")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoMone)
                    .IsRequired()
                    .HasColumnName("co_mone")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('CCS')");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.PaisDes)
                    .IsRequired()
                    .HasColumnName("pais_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<ParConc>(entity =>
            {
                entity.HasKey(e => e.CoConf);

                entity.ToTable("par_conc");

                entity.Property(e => e.CoConf)
                    .HasColumnName("co_conf")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.CoBan)
                    .IsRequired()
                    .HasColumnName("co_ban")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesConf)
                    .IsRequired()
                    .HasColumnName("des_conf")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Margen).HasColumnName("margen");

                entity.Property(e => e.Margen2).HasColumnName("margen2");

                entity.Property(e => e.OpcDoc).HasColumnName("opc_doc");

                entity.Property(e => e.OpcFec).HasColumnName("opc_fec");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TipConc).HasColumnName("tip_conc");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoBanNavigation)
                    .WithMany(p => p.ParConc)
                    .HasForeignKey(d => d.CoBan)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_par_conc_bancos");
            });

            modelBuilder.Entity<ParEmp>(entity =>
            {
                entity.HasKey(e => e.CodEmp)
                    .IsClustered(false);

                entity.ToTable("par_emp");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1207011381")
                    .IsUnique();

                entity.Property(e => e.CodEmp)
                    .HasColumnName("cod_emp")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AjuNega).HasColumnName("aju_nega");

                entity.Property(e => e.AjuNegac).HasColumnName("aju_negac");

                entity.Property(e => e.AjuNegm).HasColumnName("aju_negm");

                entity.Property(e => e.AjuNegmc).HasColumnName("aju_negmc");

                entity.Property(e => e.AjuPosa).HasColumnName("aju_posa");

                entity.Property(e => e.AjuPosac).HasColumnName("aju_posac");

                entity.Property(e => e.AjuPosm).HasColumnName("aju_posm");

                entity.Property(e => e.AjuPosmc).HasColumnName("aju_posmc");

                entity.Property(e => e.AjusNum).HasColumnName("ajus_num");

                entity.Property(e => e.Artinmp).HasColumnName("artinmp");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Cadena)
                    .IsRequired()
                    .HasColumnName("cadena")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CantArt)
                    .HasColumnName("cant_art")
                    .HasDefaultValueSql("((2))");

                entity.Property(e => e.Caracter)
                    .IsRequired()
                    .HasColumnName("caracter")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CbNum).HasColumnName("cb_num");

                entity.Property(e => e.CcxgNum).HasColumnName("ccxg_num");

                entity.Property(e => e.CedNum).HasColumnName("ced_num");

                entity.Property(e => e.CfxgNum).HasColumnName("cfxg_num");

                entity.Property(e => e.ChdvNum).HasColumnName("chdv_num");

                entity.Property(e => e.Chdvcppnum).HasColumnName("chdvcppnum");

                entity.Property(e => e.CieNum).HasColumnName("cie_num");

                entity.Property(e => e.CierreMes).HasColumnName("cierre_mes");

                entity.Property(e => e.CoAent)
                    .IsRequired()
                    .HasColumnName("co_aent")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAsal)
                    .IsRequired()
                    .HasColumnName("co_asal")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CompNum).HasColumnName("comp_num");

                entity.Property(e => e.CostNum).HasColumnName("cost_num");

                entity.Property(e => e.CotcNum).HasColumnName("cotc_num");

                entity.Property(e => e.CotpNum).HasColumnName("cotp_num");

                entity.Property(e => e.Dataolap)
                    .IsRequired()
                    .HasColumnName("dataolap")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DecCost)
                    .HasColumnName("dec_cost")
                    .HasDefaultValueSql("((2))");

                entity.Property(e => e.DecPrec)
                    .HasColumnName("dec_prec")
                    .HasDefaultValueSql("((2))");

                entity.Property(e => e.DepcNum).HasColumnName("depc_num");

                entity.Property(e => e.DesSer)
                    .IsRequired()
                    .HasColumnName("des_ser")
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DescNum).HasColumnName("desc_num");

                entity.Property(e => e.Desccppnum).HasColumnName("desccppnum");

                entity.Property(e => e.DevNum).HasColumnName("dev_num");

                entity.Property(e => e.DevcNum).HasColumnName("devc_num");

                entity.Property(e => e.Devmax).HasColumnName("devmax");

                entity.Property(e => e.DevpNum).HasColumnName("devp_num");

                entity.Property(e => e.DistNum).HasColumnName("dist_num");

                entity.Property(e => e.DmcNum).HasColumnName("dmc_num");

                entity.Property(e => e.Docum1).HasColumnName("docum1");

                entity.Property(e => e.Docum2).HasColumnName("docum2");

                entity.Property(e => e.EjepNum).HasColumnName("ejep_num");

                entity.Property(e => e.EleCarter).HasColumnName("ele_carter");

                entity.Property(e => e.EleCateg).HasColumnName("ele_categ");

                entity.Property(e => e.EleColor).HasColumnName("ele_color");

                entity.Property(e => e.EleItem).HasColumnName("ele_item");

                entity.Property(e => e.EleLinea).HasColumnName("ele_linea");

                entity.Property(e => e.EleMedid).HasColumnName("ele_medid");

                entity.Property(e => e.EmpImp)
                    .IsRequired()
                    .HasColumnName("emp_imp")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.EmpNum).HasColumnName("emp_num");

                entity.Property(e => e.EntNum).HasColumnName("ent_num");

                entity.Property(e => e.Eprofit).HasColumnName("eprofit");

                entity.Property(e => e.EscNum).HasColumnName("esc_num");

                entity.Property(e => e.ExpNum).HasColumnName("exp_num");

                entity.Property(e => e.ExpNumi).HasColumnName("exp_numi");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecInte)
                    .HasColumnName("fec_inte")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FechaFisi)
                    .HasColumnName("fecha_fisi")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FechaRes)
                    .HasColumnName("fecha_res")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FisiNum).HasColumnName("fisi_num");

                entity.Property(e => e.Garantia)
                    .IsRequired()
                    .HasColumnName("garantia")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.GenkNum).HasColumnName("genk_num");

                entity.Property(e => e.GiroNum).HasColumnName("giro_num");

                entity.Property(e => e.Girocppnum).HasColumnName("girocppnum");

                entity.Property(e => e.Idioma)
                    .IsRequired()
                    .HasColumnName("idioma")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.ImpNum).HasColumnName("imp_num");

                entity.Property(e => e.InpNum).HasColumnName("inp_num");

                entity.Property(e => e.InteNum).HasColumnName("inte_num");

                entity.Property(e => e.InvEmp)
                    .IsRequired()
                    .HasColumnName("inv_emp")
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Login)
                    .IsRequired()
                    .HasColumnName("login")
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Logo)
                    .HasColumnName("logo")
                    .HasColumnType("image");

                entity.Property(e => e.LonCateg).HasColumnName("lon_categ");

                entity.Property(e => e.LonColor).HasColumnName("lon_color");

                entity.Property(e => e.LonItem).HasColumnName("lon_item");

                entity.Property(e => e.LonLinea).HasColumnName("lon_linea");

                entity.Property(e => e.LonMedid).HasColumnName("lon_medid");

                entity.Property(e => e.ManImpr).HasColumnName("man_impr");

                entity.Property(e => e.Manivalic).HasColumnName("manivalic");

                entity.Property(e => e.MaxLin).HasColumnName("max_lin");

                entity.Property(e => e.MenNum).HasColumnName("men_num");

                entity.Property(e => e.MoneArt)
                    .IsRequired()
                    .HasColumnName("mone_art")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('BS')");

                entity.Property(e => e.MovbNum)
                    .HasColumnName("movb_num")
                    .HasDefaultValueSql("((2))");

                entity.Property(e => e.MovcNum).HasColumnName("movc_num");

                entity.Property(e => e.Namedb)
                    .IsRequired()
                    .HasColumnName("namedb")
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NcNum).HasColumnName("nc_num");

                entity.Property(e => e.NccppNum).HasColumnName("nccpp_num");

                entity.Property(e => e.NdNum).HasColumnName("nd_num");

                entity.Property(e => e.NdcppNum).HasColumnName("ndcpp_num");

                entity.Property(e => e.NddNum).HasColumnName("ndd_num");

                entity.Property(e => e.NdeNum).HasColumnName("nde_num");

                entity.Property(e => e.NdrNum).HasColumnName("ndr_num");

                entity.Property(e => e.NotaNum).HasColumnName("nota_num");

                entity.Property(e => e.NumKit).HasColumnName("num_kit");

                entity.Property(e => e.OdpNum).HasColumnName("odp_num");

                entity.Property(e => e.OpenFisi).HasColumnName("open_fisi");

                entity.Property(e => e.OrdNum).HasColumnName("ord_num");

                entity.Property(e => e.OrdpNum).HasColumnName("ordp_num");

                entity.Property(e => e.OrdsNum).HasColumnName("ords_num");

                entity.Property(e => e.PAjuComi).HasColumnName("p_aju_comi");

                entity.Property(e => e.PArt20).HasColumnName("p_art_20");

                entity.Property(e => e.PArtDol).HasColumnName("p_art_dol");

                entity.Property(e => e.PComAuto).HasColumnName("p_com_auto");

                entity.Property(e => e.PComvCon).HasColumnName("p_comv_con");

                entity.Property(e => e.PComvKlu).HasColumnName("p_comv_klu");

                entity.Property(e => e.PComvRC).HasColumnName("p_comv_r_c");

                entity.Property(e => e.PComvRP).HasColumnName("p_comv_r_p");

                entity.Property(e => e.PComvTip).HasColumnName("p_comv_tip");

                entity.Property(e => e.PComvVen).HasColumnName("p_comv_ven");

                entity.Property(e => e.PComvVol).HasColumnName("p_comv_vol");

                entity.Property(e => e.PCostoDo).HasColumnName("p_costo_do");

                entity.Property(e => e.PCyfDol).HasColumnName("p_cyf_dol");

                entity.Property(e => e.PDebAut).HasColumnName("p_deb_aut");

                entity.Property(e => e.PDebBan).HasColumnName("p_deb_ban");

                entity.Property(e => e.PDescArt).HasColumnName("p_desc_art");

                entity.Property(e => e.PDescCat).HasColumnName("p_desc_cat");

                entity.Property(e => e.PDescGlo).HasColumnName("p_desc_glo");

                entity.Property(e => e.PDescLin).HasColumnName("p_desc_lin");

                entity.Property(e => e.PDescOfe).HasColumnName("p_desc_ofe");

                entity.Property(e => e.PDespacho).HasColumnName("p_despacho");

                entity.Property(e => e.PDirEnt).HasColumnName("p_dir_ent");

                entity.Property(e => e.PDobleUn).HasColumnName("p_doble_un");

                entity.Property(e => e.PEntNew).HasColumnName("p_ent_new");

                entity.Property(e => e.PFactAlm).HasColumnName("p_fact_alm");

                entity.Property(e => e.PGrabRen).HasColumnName("p_grab_ren");

                entity.Property(e => e.PIdb).HasColumnName("p_idb");

                entity.Property(e => e.PImp65).HasColumnName("p_imp65");

                entity.Property(e => e.PImpKit).HasColumnName("p_imp_kit");

                entity.Property(e => e.PLicores).HasColumnName("p_licores");

                entity.Property(e => e.PLoteaut).HasColumnName("p_loteaut");

                entity.Property(e => e.PLotefec).HasColumnName("p_lotefec");

                entity.Property(e => e.PLotenro).HasColumnName("p_lotenro");

                entity.Property(e => e.PMargCap).HasColumnName("p_marg_cap");

                entity.Property(e => e.POpenCom).HasColumnName("p_open_com");

                entity.Property(e => e.PPara1).HasColumnName("p_para1");

                entity.Property(e => e.PPara10).HasColumnName("p_para10");

                entity.Property(e => e.PPara2).HasColumnName("p_para2");

                entity.Property(e => e.PPara3).HasColumnName("p_para3");

                entity.Property(e => e.PPara4).HasColumnName("p_para4");

                entity.Property(e => e.PPara5).HasColumnName("p_para5");

                entity.Property(e => e.PPara6).HasColumnName("p_para6");

                entity.Property(e => e.PPara7).HasColumnName("p_para7");

                entity.Property(e => e.PPara8).HasColumnName("p_para8");

                entity.Property(e => e.PPara9).HasColumnName("p_para9");

                entity.Property(e => e.PPrec1Isv).HasColumnName("p_prec1_isv");

                entity.Property(e => e.PPrec2Isv).HasColumnName("p_prec2_isv");

                entity.Property(e => e.PPrec3Isv).HasColumnName("p_prec3_isv");

                entity.Property(e => e.PPrec4Isv).HasColumnName("p_prec4_isv");

                entity.Property(e => e.PPrec5Isv).HasColumnName("p_prec5_isv");

                entity.Property(e => e.PPrecIsv).HasColumnName("p_prec_isv");

                entity.Property(e => e.PProntPg).HasColumnName("p_pront_pg");

                entity.Property(e => e.PProvNew).HasColumnName("p_prov_new");

                entity.Property(e => e.PRedCom).HasColumnName("p_red_com");

                entity.Property(e => e.PRoundequ).HasColumnName("p_roundequ");

                entity.Property(e => e.PRoundfac).HasColumnName("p_roundfac");

                entity.Property(e => e.PRoundinf).HasColumnName("p_roundinf");

                entity.Property(e => e.PRoundsup).HasColumnName("p_roundsup");

                entity.Property(e => e.PSerArt).HasColumnName("p_ser_art");

                entity.Property(e => e.PSerNew).HasColumnName("p_ser_new");

                entity.Property(e => e.PStockNeg).HasColumnName("p_stock_neg");

                entity.Property(e => e.PSucursal).HasColumnName("p_sucursal");

                entity.Property(e => e.PValRed).HasColumnName("p_val_red");

                entity.Property(e => e.Pais)
                    .IsRequired()
                    .HasColumnName("pais")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.ParNum).HasColumnName("par_num");

                entity.Property(e => e.Password)
                    .IsRequired()
                    .HasColumnName("password")
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Pcontrol1).HasColumnName("pcontrol_1");

                entity.Property(e => e.Pcontrol2).HasColumnName("pcontrol_2");

                entity.Property(e => e.Pcontrol3).HasColumnName("pcontrol_3");

                entity.Property(e => e.Pcontrol4).HasColumnName("pcontrol_4");

                entity.Property(e => e.Pcontrol5).HasColumnName("pcontrol_5");

                entity.Property(e => e.PedNum).HasColumnName("ped_num");

                entity.Property(e => e.PgNum)
                    .HasColumnName("pg_num")
                    .HasDefaultValueSql("((2))");

                entity.Property(e => e.PlaNum).HasColumnName("pla_num");

                entity.Property(e => e.PlcNum).HasColumnName("plc_num");

                entity.Property(e => e.PlvNum).HasColumnName("plv_num");

                entity.Property(e => e.PorcDb)
                    .HasColumnName("porc_db")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PostNum).HasColumnName("post_num");

                entity.Property(e => e.Postcppnum).HasColumnName("postcppnum");

                entity.Property(e => e.Ptovta).HasColumnName("ptovta");

                entity.Property(e => e.Pventa).HasColumnName("pventa");

                entity.Property(e => e.ReemProv)
                    .IsRequired()
                    .HasColumnName("reem_prov")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.ReqNum).HasColumnName("req_num");

                entity.Property(e => e.RetenNum).HasColumnName("reten_num");

                entity.Property(e => e.Retencppnum).HasColumnName("retencppnum");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.RmaCli).HasColumnName("rma_cli");

                entity.Property(e => e.RmaEntc).HasColumnName("rma_entc");

                entity.Property(e => e.RmaEntp).HasColumnName("rma_entp");

                entity.Property(e => e.RmaProv).HasColumnName("rma_prov");

                entity.Property(e => e.RmaRegs).HasColumnName("rma_regs");

                entity.Property(e => e.RmaTrans)
                    .IsRequired()
                    .HasColumnName("rma_trans")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rmacliente)
                    .IsRequired()
                    .HasColumnName("rmacliente")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.SerAuto)
                    .HasColumnName("ser_auto")
                    .HasColumnType("numeric(8, 0)");

                entity.Property(e => e.Serial)
                    .IsRequired()
                    .HasColumnName("serial")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Serie).HasColumnName("serie");

                entity.Property(e => e.Server)
                    .IsRequired()
                    .HasColumnName("server")
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Serverolap)
                    .IsRequired()
                    .HasColumnName("serverolap")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Tabislr).HasColumnName("tabislr");

                entity.Property(e => e.TaxNum).HasColumnName("tax_num");

                entity.Property(e => e.TempChar)
                    .IsRequired()
                    .HasColumnName("temp_char")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TempChar1)
                    .IsRequired()
                    .HasColumnName("temp_char1")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TempChar2)
                    .IsRequired()
                    .HasColumnName("temp_char2")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TempChar3)
                    .IsRequired()
                    .HasColumnName("temp_char3")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TempChar4)
                    .IsRequired()
                    .HasColumnName("temp_char4")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TempChar5)
                    .IsRequired()
                    .HasColumnName("temp_char5")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TempChar6)
                    .IsRequired()
                    .HasColumnName("temp_char6")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TempChar7)
                    .IsRequired()
                    .HasColumnName("temp_char7")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TempChar8)
                    .IsRequired()
                    .HasColumnName("temp_char8")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TempFech)
                    .HasColumnName("temp_fech")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.TempNum).HasColumnName("temp_num");

                entity.Property(e => e.Tempor1).HasColumnName("tempor1");

                entity.Property(e => e.TipCmat).HasColumnName("tip_cmat");

                entity.Property(e => e.TipCosto).HasColumnName("tip_costo");

                entity.Property(e => e.Tipcosdev).HasColumnName("tipcosdev");

                entity.Property(e => e.TipoCom).HasColumnName("tipo_com");

                entity.Property(e => e.TipoInve)
                    .HasColumnName("tipo_inve")
                    .HasColumnType("numeric(1, 0)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TipoLib)
                    .IsRequired()
                    .HasColumnName("tipo_lib")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TotalCod).HasColumnName("total_cod");

                entity.Property(e => e.TrasNum).HasColumnName("tras_num");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Turnosic).HasColumnName("turnosic");

                entity.Property(e => e.ValIdb)
                    .HasColumnName("val_idb")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ValMax).HasColumnName("val_max");
            });

            modelBuilder.Entity<ParWeb>(entity =>
            {
                entity.ToTable("par_web");

                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Authoriza)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('0101010111101110')");

                entity.Property(e => e.Auto).HasColumnName("auto");

                entity.Property(e => e.Caja)
                    .IsRequired()
                    .HasColumnName("caja")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoIng)
                    .IsRequired()
                    .HasColumnName("co_ing")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSeg)
                    .IsRequired()
                    .HasColumnName("co_seg")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucur)
                    .IsRequired()
                    .HasColumnName("co_sucur")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoTran)
                    .IsRequired()
                    .HasColumnName("co_tran")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoZon)
                    .IsRequired()
                    .HasColumnName("co_zon")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Db)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Dep)
                    .IsRequired()
                    .HasColumnName("dep")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FPago)
                    .IsRequired()
                    .HasColumnName("f_pago")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Fecha)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/1900')");

                entity.Property(e => e.Horas).HasColumnName("horas");

                entity.Property(e => e.Largo).HasColumnName("largo");

                entity.Property(e => e.License)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.LicenseN)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Master)
                    .IsRequired()
                    .HasColumnName("master")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MaxofOrder)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/2030')");

                entity.Property(e => e.Meses)
                    .HasColumnName("meses")
                    .HasDefaultValueSql("((12))");

                entity.Property(e => e.PassWord)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('.*ö[({')");

                entity.Property(e => e.Prefijo)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Roundtype)
                    .IsRequired()
                    .HasColumnName("roundtype")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.Server)
                    .IsRequired()
                    .HasColumnName("server")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Slog)
                    .IsRequired()
                    .HasColumnName("slog")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Sqlpass)
                    .IsRequired()
                    .HasColumnName("sqlpass")
                    .HasMaxLength(180)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Sqluser)
                    .IsRequired()
                    .HasColumnName("sqluser")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Tipo).HasColumnName("tipo");

                entity.Property(e => e.TipoCli)
                    .IsRequired()
                    .HasColumnName("tipo_cli")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Tipoaut)
                    .HasColumnName("tipoaut")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Unidad)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Url)
                    .IsRequired()
                    .HasColumnName("url")
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('http://server.com/WS/SynchronizationService.asmx?wsdl')");

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('softech')");

                entity.Property(e => e.Visa)
                    .IsRequired()
                    .HasColumnName("visa")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.WsNumber)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<PedReng>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Ped_reng");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.Iva)
                    .HasColumnName("iva")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Iva2)
                    .HasColumnName("iva2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IvaReng)
                    .HasColumnName("iva_reng")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.IvaRengOm)
                    .HasColumnName("iva_reng_om")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente)
                    .HasColumnName("pendiente")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcDesc)
                    .IsRequired()
                    .HasColumnName("porc_desc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.PrecVta)
                    .HasColumnName("prec_vta")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Procesado)
                    .HasColumnName("procesado")
                    .HasColumnType("decimal(38, 6)");

                entity.Property(e => e.ProcesadoOm)
                    .HasColumnName("procesado_om")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RengNeto)
                    .HasColumnName("reng_neto")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.RengNeto2)
                    .HasColumnName("reng_neto2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RengNetoOm)
                    .HasColumnName("reng_neto_om")
                    .HasColumnType("numeric(38, 6)");

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasMaxLength(23)
                    .IsUnicode(false);

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasag)
                    .HasColumnName("tasag")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.TotBruto)
                    .HasColumnName("tot_bruto")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotBruto2)
                    .HasColumnName("tot_bruto2")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotNeto)
                    .HasColumnName("tot_neto")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotNeto2)
                    .HasColumnName("tot_neto2")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalDev)
                    .HasColumnName("total_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(37, 10)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Pedidos>(entity =>
            {
                entity.HasKey(e => e.FactNum)
                    .HasName("pedidos_ped_num");

                entity.ToTable("pedidos");

                entity.HasIndex(e => e.CoCli)
                    .HasName("ico_cli");

                entity.HasIndex(e => e.CoTran)
                    .HasName("ico_tran");

                entity.HasIndex(e => e.CoVen)
                    .HasName("ico_ven");

                entity.HasIndex(e => e.FeUsMo)
                    .HasName("IX_pedidos_1");

                entity.HasIndex(e => e.FecEmis)
                    .HasName("ifec_emis");

                entity.HasIndex(e => e.FormaPag)
                    .HasName("iforma_pag");

                entity.HasIndex(e => e.Id)
                    .HasName("IX_pedidos");

                entity.HasIndex(e => e.Moneda)
                    .HasName("imoneda");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1203535371")
                    .IsUnique();

                entity.HasIndex(e => e.Status)
                    .HasName("istatus");

                entity.HasIndex(e => new { e.Feccom, e.Numcom })
                    .HasName("ifeccom_numcom");

                entity.Property(e => e.FactNum)
                    .HasColumnName("fact_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Anulada).HasColumnName("anulada");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoTran)
                    .IsRequired()
                    .HasColumnName("co_tran")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Contrib).HasColumnName("contrib");

                entity.Property(e => e.CtaContab)
                    .IsRequired()
                    .HasColumnName("cta_contab")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DirEnt)
                    .IsRequired()
                    .HasColumnName("dir_ent")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("('01/01/1900')");

                entity.Property(e => e.FormaPag)
                    .IsRequired()
                    .HasColumnName("forma_pag")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.GlobDesc)
                    .HasColumnName("glob_desc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasDefaultValueSql("((-1))");

                entity.Property(e => e.Impresa).HasColumnName("impresa");

                entity.Property(e => e.Iva)
                    .HasColumnName("iva")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IvaDev)
                    .HasColumnName("iva_dev")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MonIlc)
                    .HasColumnName("mon_ilc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Nit)
                    .IsRequired()
                    .HasColumnName("nit")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasColumnName("nombre")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.Origen)
                    .HasColumnName("origen")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.OrigenD)
                    .HasColumnName("origen_d")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Otros1)
                    .HasColumnName("otros1")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Otros2)
                    .HasColumnName("otros2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Otros3)
                    .HasColumnName("otros3")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcGdesc)
                    .IsRequired()
                    .HasColumnName("porc_gdesc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PorcReca)
                    .IsRequired()
                    .HasColumnName("porc_reca")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rif)
                    .IsRequired()
                    .HasColumnName("rif")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Saldo)
                    .HasColumnName("saldo")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Salestax)
                    .IsRequired()
                    .HasColumnName("salestax")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Seriales).HasColumnName("seriales");

                entity.Property(e => e.Serialp)
                    .IsRequired()
                    .HasColumnName("serialp")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.StaProd)
                    .HasColumnName("sta_prod")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasColumnName("status")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Tasag)
                    .HasColumnName("tasag")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasag10)
                    .HasColumnName("tasag10")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasag20)
                    .HasColumnName("tasag20")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Telefono)
                    .IsRequired()
                    .HasColumnName("telefono")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((60)))");

                entity.Property(e => e.TotBruto)
                    .HasColumnName("tot_bruto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotFlete)
                    .HasColumnName("tot_flete")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotNeto)
                    .HasColumnName("tot_neto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotReca)
                    .HasColumnName("tot_reca")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalCp)
                    .HasColumnName("total_cp")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalUc)
                    .HasColumnName("total_uc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Totklu)
                    .HasColumnName("totklu")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Valido).HasColumnName("valido");

                entity.HasOne(d => d.CoCliNavigation)
                    .WithMany(p => p.Pedidos)
                    .HasForeignKey(d => d.CoCli)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_pedidos_clientes");

                entity.HasOne(d => d.CoSucuNavigation)
                    .WithMany(p => p.Pedidos)
                    .HasForeignKey(d => d.CoSucu)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_pedidos_almacen");

                entity.HasOne(d => d.CoTranNavigation)
                    .WithMany(p => p.Pedidos)
                    .HasForeignKey(d => d.CoTran)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_pedidos_transpor");

                entity.HasOne(d => d.CoVenNavigation)
                    .WithMany(p => p.Pedidos)
                    .HasForeignKey(d => d.CoVen)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_pedidos_vendedor");

                entity.HasOne(d => d.FormaPagNavigation)
                    .WithMany(p => p.Pedidos)
                    .HasForeignKey(d => d.FormaPag)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_pedidos_condicio");

                entity.HasOne(d => d.MonedaNavigation)
                    .WithMany(p => p.Pedidos)
                    .HasForeignKey(d => d.Moneda)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_pedidos_moneda");
            });

            modelBuilder.Entity<Pistas>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("pistas");

                entity.HasIndex(e => e.Codigo)
                    .HasName("IX_pistas_4");

                entity.HasIndex(e => e.Fecha)
                    .HasName("IX_pistas_1")
                    .IsClustered();

                entity.HasIndex(e => e.UsuarioId)
                    .HasName("IX_pistas_2");

                entity.Property(e => e.Aux01)
                    .HasColumnName("AUX01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("AUX02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campos)
                    .IsRequired()
                    .HasColumnName("campos")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasColumnName("codigo")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Empresa)
                    .IsRequired()
                    .HasColumnName("empresa")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Fecha)
                    .HasColumnName("fecha")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Maquina)
                    .IsRequired()
                    .HasColumnName("maquina")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumDoc).HasColumnName("num_doc");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Tabla)
                    .IsRequired()
                    .HasColumnName("tabla")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoOp)
                    .IsRequired()
                    .HasColumnName("tipo_op")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Usuario)
                    .IsRequired()
                    .HasColumnName("usuario")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.UsuarioId)
                    .IsRequired()
                    .HasColumnName("usuario_id")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Placom>(entity =>
            {
                entity.HasKey(e => e.FactNum)
                    .HasName("placom_plc_num");

                entity.ToTable("placom");

                entity.HasIndex(e => e.CoCli)
                    .HasName("ico_cli");

                entity.HasIndex(e => e.FecEmis)
                    .HasName("ifec_emis");

                entity.HasIndex(e => e.FormaPag)
                    .HasName("iforma_pag");

                entity.HasIndex(e => e.Moneda)
                    .HasName("imoneda");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_928058999")
                    .IsUnique();

                entity.HasIndex(e => e.Status)
                    .HasName("istatus");

                entity.HasIndex(e => new { e.Feccom, e.Numcom })
                    .HasName("ifeccom_numcom");

                entity.Property(e => e.FactNum)
                    .HasColumnName("fact_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Anulada).HasColumnName("anulada");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoTran)
                    .IsRequired()
                    .HasColumnName("co_tran")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Contrib).HasColumnName("contrib");

                entity.Property(e => e.CtaContab)
                    .IsRequired()
                    .HasColumnName("cta_contab")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DirEnt)
                    .IsRequired()
                    .HasColumnName("dir_ent")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("('01/01/1900')");

                entity.Property(e => e.FormaPag)
                    .IsRequired()
                    .HasColumnName("forma_pag")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.GlobDesc)
                    .HasColumnName("glob_desc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ImpNum).HasColumnName("imp_num");

                entity.Property(e => e.Import).HasColumnName("import");

                entity.Property(e => e.Impresa).HasColumnName("impresa");

                entity.Property(e => e.Iva)
                    .HasColumnName("iva")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.IvaDev)
                    .HasColumnName("iva_dev")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MonIlc)
                    .HasColumnName("mon_ilc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Nit)
                    .IsRequired()
                    .HasColumnName("nit")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasColumnName("nombre")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.Origen)
                    .IsRequired()
                    .HasColumnName("origen")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.OrigenD)
                    .IsRequired()
                    .HasColumnName("origen_d")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Otros1)
                    .HasColumnName("otros1")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Otros2)
                    .HasColumnName("otros2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Otros3)
                    .HasColumnName("otros3")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcGdesc)
                    .IsRequired()
                    .HasColumnName("porc_gdesc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PorcReca)
                    .IsRequired()
                    .HasColumnName("porc_reca")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rif)
                    .IsRequired()
                    .HasColumnName("rif")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Saldo)
                    .HasColumnName("saldo")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Salestax)
                    .IsRequired()
                    .HasColumnName("salestax")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Seriales).HasColumnName("seriales");

                entity.Property(e => e.StaProd)
                    .HasColumnName("sta_prod")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasColumnName("status")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Tasag)
                    .HasColumnName("tasag")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasag10)
                    .HasColumnName("tasag10")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasag20)
                    .HasColumnName("tasag20")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Telefono)
                    .IsRequired()
                    .HasColumnName("telefono")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((60)))");

                entity.Property(e => e.TotBruto)
                    .HasColumnName("tot_bruto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotFlete)
                    .HasColumnName("tot_flete")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotNeto)
                    .HasColumnName("tot_neto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotReca)
                    .HasColumnName("tot_reca")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalCp)
                    .HasColumnName("total_cp")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalUc)
                    .HasColumnName("total_uc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Totklu)
                    .HasColumnName("totklu")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoCliNavigation)
                    .WithMany(p => p.Placom)
                    .HasForeignKey(d => d.CoCli)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_placom_prov");

                entity.HasOne(d => d.FormaPagNavigation)
                    .WithMany(p => p.Placom)
                    .HasForeignKey(d => d.FormaPag)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_placom_condicio");

                entity.HasOne(d => d.MonedaNavigation)
                    .WithMany(p => p.Placom)
                    .HasForeignKey(d => d.Moneda)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_placom_moneda");
            });

            modelBuilder.Entity<PlanFis>(entity =>
            {
                entity.HasKey(e => e.CoPlan);

                entity.ToTable("plan_fis");

                entity.Property(e => e.CoPlan)
                    .HasColumnName("co_plan")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.AccPlan)
                    .IsRequired()
                    .HasColumnName("acc_plan")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesPlan)
                    .IsRequired()
                    .HasColumnName("des_plan")
                    .HasMaxLength(250)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.NomPlan)
                    .IsRequired()
                    .HasColumnName("nom_plan")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.XmlPlan)
                    .IsRequired()
                    .HasColumnName("xml_plan")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.XmlPrin)
                    .IsRequired()
                    .HasColumnName("xml_prin")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Plavent>(entity =>
            {
                entity.HasKey(e => e.FactNum)
                    .HasName("plavent_plv_num");

                entity.ToTable("plavent");

                entity.HasIndex(e => e.CoCli)
                    .HasName("ico_cli");

                entity.HasIndex(e => e.CoVen)
                    .HasName("ico_ven");

                entity.HasIndex(e => e.FecEmis)
                    .HasName("ifec_emis");

                entity.HasIndex(e => e.FormaPag)
                    .HasName("iforma_pag");

                entity.HasIndex(e => e.Moneda)
                    .HasName("imoneda");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_832058999")
                    .IsUnique();

                entity.HasIndex(e => e.Status)
                    .HasName("istatus");

                entity.HasIndex(e => new { e.Feccom, e.Numcom })
                    .HasName("ifeccom_numcom");

                entity.Property(e => e.FactNum)
                    .HasColumnName("fact_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Anulada).HasColumnName("anulada");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoTran)
                    .IsRequired()
                    .HasColumnName("co_tran")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Contrib).HasColumnName("contrib");

                entity.Property(e => e.CtaContab)
                    .IsRequired()
                    .HasColumnName("cta_contab")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DirEnt)
                    .IsRequired()
                    .HasColumnName("dir_ent")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('01/01/1900')");

                entity.Property(e => e.FormaPag)
                    .IsRequired()
                    .HasColumnName("forma_pag")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.GlobDesc)
                    .HasColumnName("glob_desc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Impresa).HasColumnName("impresa");

                entity.Property(e => e.Iva)
                    .HasColumnName("iva")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.IvaDev)
                    .HasColumnName("iva_dev")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MonIlc)
                    .HasColumnName("mon_ilc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Nit)
                    .IsRequired()
                    .HasColumnName("nit")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasColumnName("nombre")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.Origen)
                    .IsRequired()
                    .HasColumnName("origen")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.OrigenD)
                    .IsRequired()
                    .HasColumnName("origen_d")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Otros1)
                    .HasColumnName("otros1")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Otros2)
                    .HasColumnName("otros2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Otros3)
                    .HasColumnName("otros3")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcGdesc)
                    .IsRequired()
                    .HasColumnName("porc_gdesc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PorcReca)
                    .IsRequired()
                    .HasColumnName("porc_reca")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rif)
                    .IsRequired()
                    .HasColumnName("rif")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Saldo)
                    .HasColumnName("saldo")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Salestax)
                    .IsRequired()
                    .HasColumnName("salestax")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Seriales).HasColumnName("seriales");

                entity.Property(e => e.StaProd)
                    .HasColumnName("sta_prod")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasColumnName("status")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Tasag)
                    .HasColumnName("tasag")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasag10)
                    .HasColumnName("tasag10")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasag20)
                    .HasColumnName("tasag20")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Telefono)
                    .IsRequired()
                    .HasColumnName("telefono")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((60)))");

                entity.Property(e => e.TotBruto)
                    .HasColumnName("tot_bruto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotFlete)
                    .HasColumnName("tot_flete")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotNeto)
                    .HasColumnName("tot_neto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotReca)
                    .HasColumnName("tot_reca")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalCp)
                    .HasColumnName("total_cp")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TotalUc)
                    .HasColumnName("total_uc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Totklu)
                    .HasColumnName("totklu")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoCliNavigation)
                    .WithMany(p => p.Plavent)
                    .HasForeignKey(d => d.CoCli)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_plavent_clientes");

                entity.HasOne(d => d.CoSucuNavigation)
                    .WithMany(p => p.Plavent)
                    .HasForeignKey(d => d.CoSucu)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_plavent_almacen");

                entity.HasOne(d => d.CoTranNavigation)
                    .WithMany(p => p.Plavent)
                    .HasForeignKey(d => d.CoTran)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_plavent_transpor");

                entity.HasOne(d => d.CoVenNavigation)
                    .WithMany(p => p.Plavent)
                    .HasForeignKey(d => d.CoVen)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_plavent_vendedor");

                entity.HasOne(d => d.FormaPagNavigation)
                    .WithMany(p => p.Plavent)
                    .HasForeignKey(d => d.FormaPag)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_plavent_condicio");

                entity.HasOne(d => d.MonedaNavigation)
                    .WithMany(p => p.Plavent)
                    .HasForeignKey(d => d.Moneda)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_plavent_moneda");
            });

            modelBuilder.Entity<Proceden>(entity =>
            {
                entity.HasKey(e => e.CodProc)
                    .HasName("proceden_cod_proc");

                entity.ToTable("proceden");

                entity.HasIndex(e => e.DesProc)
                    .HasName("ides_proc");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_636581356")
                    .IsUnique();

                entity.Property(e => e.CodProc)
                    .HasColumnName("cod_proc")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesProc)
                    .IsRequired()
                    .HasColumnName("des_proc")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Prov>(entity =>
            {
                entity.HasKey(e => e.CoProv)
                    .HasName("prov_co_prov");

                entity.ToTable("prov");

                entity.HasIndex(e => e.CoSeg)
                    .HasName("ico_seg");

                entity.HasIndex(e => e.CoZon)
                    .HasName("ico_zon");

                entity.HasIndex(e => e.ProvDes)
                    .HasName("iprov_des");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1987538164")
                    .IsUnique();

                entity.HasIndex(e => e.Tipo)
                    .HasName("itipo");

                entity.Property(e => e.CoProv)
                    .HasColumnName("co_prov")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Ciudad)
                    .IsRequired()
                    .HasColumnName("ciudad")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoIngr)
                    .IsRequired()
                    .HasColumnName("co_ingr")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoPais)
                    .IsRequired()
                    .HasColumnName("co_pais")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSeg)
                    .IsRequired()
                    .HasColumnName("co_seg")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoTab).HasColumnName("co_tab");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoZon)
                    .IsRequired()
                    .HasColumnName("co_zon")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.ComUltCo).HasColumnName("com_ult_co");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.ContribuE).HasColumnName("contribu_e");

                entity.Property(e => e.DescGlob)
                    .HasColumnName("desc_glob")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.DescPpago)
                    .HasColumnName("desc_ppago")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Direc1)
                    .IsRequired()
                    .HasColumnName("direc1")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Direc2)
                    .IsRequired()
                    .HasColumnName("direc2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasColumnName("email")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Fax)
                    .IsRequired()
                    .HasColumnName("fax")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecUltCo)
                    .HasColumnName("fec_ult_co")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FechaReg)
                    .HasColumnName("fecha_reg")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Formtype)
                    .IsRequired()
                    .HasColumnName("formtype")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Inactivo).HasColumnName("inactivo");

                entity.Property(e => e.Iva)
                    .HasColumnName("iva")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Juridico).HasColumnName("juridico");

                entity.Property(e => e.Matriz)
                    .IsRequired()
                    .HasColumnName("matriz")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.MontCre)
                    .HasColumnName("mont_cre")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Nacional).HasColumnName("nacional");

                entity.Property(e => e.NetUltCo)
                    .HasColumnName("net_ult_co")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Nit)
                    .IsRequired()
                    .HasColumnName("nit")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PlazPag).HasColumnName("plaz_pag");

                entity.Property(e => e.PorcEsp).HasColumnName("porc_esp");

                entity.Property(e => e.Productos)
                    .IsRequired()
                    .HasColumnName("productos")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.ProvDes)
                    .IsRequired()
                    .HasColumnName("prov_des")
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Respons)
                    .IsRequired()
                    .HasColumnName("respons")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rif)
                    .IsRequired()
                    .HasColumnName("rif")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Saldo)
                    .HasColumnName("saldo")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.SaldoIni)
                    .HasColumnName("saldo_ini")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Taxid)
                    .IsRequired()
                    .HasColumnName("taxid")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Telefonos)
                    .IsRequired()
                    .HasColumnName("telefonos")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasColumnName("tipo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoAdi)
                    .HasColumnName("tipo_adi")
                    .HasColumnType("numeric(1, 0)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TipoIva)
                    .IsRequired()
                    .HasColumnName("tipo_iva")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoPer)
                    .IsRequired()
                    .HasColumnName("tipo_per")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Website)
                    .IsRequired()
                    .HasColumnName("website")
                    .HasMaxLength(200)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Zip)
                    .IsRequired()
                    .HasColumnName("zip")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoIngrNavigation)
                    .WithMany(p => p.Prov)
                    .HasForeignKey(d => d.CoIngr)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_prov_cta_ingr");

                entity.HasOne(d => d.CoSegNavigation)
                    .WithMany(p => p.Prov)
                    .HasForeignKey(d => d.CoSeg)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_prov_segmento");

                entity.HasOne(d => d.CoZonNavigation)
                    .WithMany(p => p.Prov)
                    .HasForeignKey(d => d.CoZon)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_prov_zona");

                entity.HasOne(d => d.TipoNavigation)
                    .WithMany(p => p.Prov)
                    .HasForeignKey(d => d.Tipo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_prov_tipo_pro");
            });

            modelBuilder.Entity<Pventa>(entity =>
            {
                entity.HasKey(e => e.FactNum)
                    .IsClustered(false);

                entity.ToTable("pventa");

                entity.HasIndex(e => e.NumTurno)
                    .HasName("IX_pventa");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_465465724654");

                entity.HasIndex(e => new { e.Feccom, e.Numcom })
                    .HasName("ifeccom_numcom");

                entity.Property(e => e.FactNum)
                    .HasColumnName("fact_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Anulada).HasColumnName("anulada");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoTran)
                    .IsRequired()
                    .HasColumnName("co_tran")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Contrib).HasColumnName("contrib");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DirEnt)
                    .IsRequired()
                    .HasColumnName("dir_ent")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("('01/01/1900')");

                entity.Property(e => e.FormaPag)
                    .IsRequired()
                    .HasColumnName("forma_pag")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.GlobDesc).HasColumnName("glob_desc");

                entity.Property(e => e.Impresa).HasColumnName("impresa");

                entity.Property(e => e.Iva).HasColumnName("iva");

                entity.Property(e => e.IvaDev).HasColumnName("iva_dev");

                entity.Property(e => e.MonIlc).HasColumnName("mon_ilc");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MontoDev).HasColumnName("monto_dev");

                entity.Property(e => e.Nit)
                    .IsRequired()
                    .HasColumnName("nit")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasColumnName("nombre")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumContro).HasColumnName("num_contro");

                entity.Property(e => e.NumTurno).HasColumnName("num_turno");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.Numcon)
                    .IsRequired()
                    .HasColumnName("numcon")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Origen)
                    .HasColumnName("origen")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.OrigenD)
                    .HasColumnName("origen_d")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Otros1).HasColumnName("otros1");

                entity.Property(e => e.Otros2).HasColumnName("otros2");

                entity.Property(e => e.Otros3).HasColumnName("otros3");

                entity.Property(e => e.PorcGdesc)
                    .IsRequired()
                    .HasColumnName("porc_gdesc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PorcReca)
                    .IsRequired()
                    .HasColumnName("porc_reca")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rif)
                    .IsRequired()
                    .HasColumnName("rif")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Saldo).HasColumnName("saldo");

                entity.Property(e => e.Salestax)
                    .IsRequired()
                    .HasColumnName("salestax")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Seriales).HasColumnName("seriales");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasColumnName("status")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Tasag).HasColumnName("tasag");

                entity.Property(e => e.Tasag10).HasColumnName("tasag10");

                entity.Property(e => e.Tasag20).HasColumnName("tasag20");

                entity.Property(e => e.Telefono)
                    .IsRequired()
                    .HasColumnName("telefono")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((60)))");

                entity.Property(e => e.TotBruto).HasColumnName("tot_bruto");

                entity.Property(e => e.TotFlete).HasColumnName("tot_flete");

                entity.Property(e => e.TotNeto).HasColumnName("tot_neto");

                entity.Property(e => e.TotReca).HasColumnName("tot_reca");

                entity.Property(e => e.TotalCp).HasColumnName("total_cp");

                entity.Property(e => e.TotalUc).HasColumnName("total_uc");

                entity.Property(e => e.Totklu).HasColumnName("totklu");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Vuelto).HasColumnName("vuelto");
            });

            modelBuilder.Entity<RImpCo>(entity =>
            {
                entity.HasKey(e => new { e.FactNu1, e.RengNu1, e.FactNu2, e.RengNu2 })
                    .HasName("PK_r_imp_co_1");

                entity.ToTable("r_imp_co");

                entity.Property(e => e.FactNu1).HasColumnName("fact_nu1");

                entity.Property(e => e.RengNu1).HasColumnName("reng_nu1");

                entity.Property(e => e.FactNu2).HasColumnName("fact_nu2");

                entity.Property(e => e.RengNu2).HasColumnName("reng_nu2");

                entity.Property(e => e.Monto)
                    .HasColumnName("monto")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.HasOne(d => d.RengAim)
                    .WithMany(p => p.RImpCo)
                    .HasForeignKey(d => new { d.FactNu1, d.RengNu1 })
                    .HasConstraintName("FK_r_imp_co_reng_aim");

                entity.HasOne(d => d.RengAco)
                    .WithMany(p => p.RImpCo)
                    .HasForeignKey(d => new { d.FactNu2, d.RengNu2 })
                    .HasConstraintName("FK_r_imp_co_reng_aco");
            });

            modelBuilder.Entity<Recosteo>(entity =>
            {
                entity.HasKey(e => e.Rowguid)
                    .HasName("PK_recosteo_1");

                entity.ToTable("recosteo");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.CoArt)
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CostUnit)
                    .HasColumnName("cost_unit")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.CostUnitOm)
                    .HasColumnName("cost_unit_om")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.CostoTot)
                    .HasColumnName("costo_tot")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Factura).HasColumnName("factura");

                entity.Property(e => e.Neto)
                    .HasColumnName("neto")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Renglon).HasColumnName("renglon");

                entity.Property(e => e.RowIdDoc)
                    .HasColumnName("row_id_doc")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TipoDoc)
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(4)
                    .IsFixedLength();

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<RengAce>(entity =>
            {
                entity.HasKey(e => new { e.CoCed, e.RengNum });

                entity.ToTable("reng_ace");

                entity.Property(e => e.CoCed).HasColumnName("co_ced");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Cant)
                    .HasColumnName("cant")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CantProd)
                    .HasColumnName("cant_prod")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CoUni)
                    .IsRequired()
                    .HasColumnName("co_uni")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.PorCos)
                    .HasColumnName("por_cos")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Subced).HasColumnName("subced");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengAce)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_ace_art");

                entity.HasOne(d => d.CoCedNavigation)
                    .WithMany(p => p.RengAce)
                    .HasForeignKey(d => d.CoCed)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_ace_spced");
            });

            modelBuilder.Entity<RengAco>(entity =>
            {
                entity.HasKey(e => new { e.ImpNum, e.RengNum })
                    .HasName("PK_reng_aco_1");

                entity.ToTable("reng_aco");

                entity.Property(e => e.ImpNum).HasColumnName("imp_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.ArtGast).HasColumnName("art_gast");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FacGast).HasColumnName("fac_gast");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Monto)
                    .HasColumnName("monto")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.MontoAp)
                    .HasColumnName("monto_ap")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.NCosto)
                    .IsRequired()
                    .HasColumnName("n_costo")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.RengDoc).HasColumnName("reng_doc");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.TipoDis).HasColumnName("tipo_dis");

                entity.Property(e => e.TipoDoc)
                    .IsRequired()
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengAco)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_aco_art");

                entity.HasOne(d => d.ImpNumNavigation)
                    .WithMany(p => p.RengAco)
                    .HasForeignKey(d => d.ImpNum)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_aco_import");

                entity.HasOne(d => d.MonedaNavigation)
                    .WithMany(p => p.RengAco)
                    .HasForeignKey(d => d.Moneda)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_aco_moneda");
            });

            modelBuilder.Entity<RengAim>(entity =>
            {
                entity.HasKey(e => new { e.ImpNum, e.RengNum })
                    .HasName("PK_reng_aim_1");

                entity.ToTable("reng_aim");

                entity.HasIndex(e => new { e.FactNum, e.RengDoc })
                    .HasName("IX_reng_aim")
                    .IsUnique();

                entity.Property(e => e.ImpNum).HasColumnName("imp_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Cantidad)
                    .HasColumnName("cantidad")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CostoD)
                    .HasColumnName("costo_d")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.Margen)
                    .HasColumnName("margen")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Neto)
                    .HasColumnName("neto")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.NuevoCo)
                    .HasColumnName("nuevo_co")
                    .HasColumnType("decimal(20, 8)");

                entity.Property(e => e.Peso)
                    .HasColumnName("peso")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PieCub)
                    .HasColumnName("pie_cub")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PorcAra)
                    .HasColumnName("porc_ara")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RengDoc).HasColumnName("reng_doc");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 2)");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengAim)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_aim_art");

                entity.HasOne(d => d.ImpNumNavigation)
                    .WithMany(p => p.RengAim)
                    .HasForeignKey(d => d.ImpNum)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_aim_import");

                entity.HasOne(d => d.MonedaNavigation)
                    .WithMany(p => p.RengAim)
                    .HasForeignKey(d => d.Moneda)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_aim_moneda");

                entity.HasOne(d => d.RengCom)
                    .WithOne(p => p.RengAim)
                    .HasForeignKey<RengAim>(d => new { d.FactNum, d.RengDoc })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_aim_reng_com");
            });

            modelBuilder.Entity<RengAju>(entity =>
            {
                entity.HasKey(e => new { e.AjueNum, e.RengNum })
                    .HasName("reng_aju_reng_aju");

                entity.ToTable("reng_aju");

                entity.HasIndex(e => e.AjueNum)
                    .HasName("ajue_num");

                entity.HasIndex(e => e.CoAlma)
                    .HasName("ico_alma");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.RengNum)
                    .HasName("reng_num");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1725965225")
                    .IsUnique();

                entity.HasIndex(e => e.Tipo)
                    .HasName("itipo");

                entity.HasIndex(e => new { e.Feccom, e.Numcom })
                    .HasName("ifeccom_numcom");

                entity.HasIndex(e => new { e.AjueNum, e.RengNum, e.Produccion })
                    .HasName("iaju_reng_prod");

                entity.Property(e => e.AjueNum).HasColumnName("ajue_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CostUnit)
                    .HasColumnName("cost_unit")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CostUnitOm)
                    .HasColumnName("cost_unit_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FecLote)
                    .HasColumnName("fec_lote")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("('01/01/1900')");

                entity.Property(e => e.GfCant)
                    .HasColumnName("gf_cant")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.GfCantOm)
                    .HasColumnName("gf_cant_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MoCant)
                    .HasColumnName("mo_cant")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MoCantOm)
                    .HasColumnName("mo_cant_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.NroLote)
                    .IsRequired()
                    .HasColumnName("nro_lote")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumDoc2).HasColumnName("num_doc2");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.Pendiente2)
                    .HasColumnName("pendiente2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Produccion).HasColumnName("produccion");

                entity.Property(e => e.RengDoc2).HasColumnName("reng_doc2");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.StotalArt)
                    .HasColumnName("stotal_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.SuniCompr)
                    .IsRequired()
                    .HasColumnName("suni_compr")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.SuniVenta)
                    .IsRequired()
                    .HasColumnName("suni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasColumnName("tipo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoDoc2)
                    .IsRequired()
                    .HasColumnName("tipo_doc2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UniCompra)
                    .IsRequired()
                    .HasColumnName("uni_compra")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoAlmaNavigation)
                    .WithMany(p => p.RengAju)
                    .HasForeignKey(d => d.CoAlma)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_aju_sub_alma");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengAju)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_aju_art");

                entity.HasOne(d => d.TipoNavigation)
                    .WithMany(p => p.RengAju)
                    .HasForeignKey(d => d.Tipo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_aju_tipo_aju");
            });

            modelBuilder.Entity<RengAra>(entity =>
            {
                entity.HasKey(e => new { e.CoArt, e.CoConv });

                entity.ToTable("reng_ara");

                entity.HasIndex(e => new { e.CoArt, e.CoConv })
                    .HasName("IX_reng_ara")
                    .IsUnique();

                entity.Property(e => e.CoArt)
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoConv)
                    .HasColumnName("co_conv")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesReng)
                    .IsRequired()
                    .HasColumnName("des_reng")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PorcAra)
                    .HasColumnName("porc_ara")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RengAra1)
                    .IsRequired()
                    .HasColumnName("reng_ara")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengAra)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_ara_art");

                entity.HasOne(d => d.CoConvNavigation)
                    .WithMany(p => p.RengAra)
                    .HasForeignKey(d => d.CoConv)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_ara_conv_imp");
            });

            modelBuilder.Entity<RengArt>(entity =>
            {
                entity.HasKey(e => new { e.CoArt, e.RengNum });

                entity.ToTable("reng_art");

                entity.HasIndex(e => e.CoArt)
                    .HasName("IX_reng_art");

                entity.HasIndex(e => e.CodRelac)
                    .HasName("IX_reng_art_2");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("IX_reng_art_1");

                entity.Property(e => e.CoArt)
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CodRelac)
                    .IsRequired()
                    .HasColumnName("cod_relac")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengArt)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_art_art");
            });

            modelBuilder.Entity<RengAtb>(entity =>
            {
                entity.HasKey(e => new { e.CoTar, e.RengNum });

                entity.ToTable("reng_atb");

                entity.Property(e => e.CoTar)
                    .HasColumnName("co_tar")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.CoAtriv)
                    .IsRequired()
                    .HasColumnName("co_atriv")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Valor)
                    .IsRequired()
                    .HasColumnName("valor")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.HasOne(d => d.CoAtrivNavigation)
                    .WithMany(p => p.RengAtb)
                    .HasForeignKey(d => d.CoAtriv)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_atb_spatriv");

                entity.HasOne(d => d.CoTarNavigation)
                    .WithMany(p => p.RengAtb)
                    .HasForeignKey(d => d.CoTar)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_atb_sptar");
            });

            modelBuilder.Entity<RengAtc>(entity =>
            {
                entity.HasKey(e => new { e.CoCed, e.RengNum });

                entity.ToTable("reng_atc");

                entity.Property(e => e.CoCed).HasColumnName("co_ced");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.CoAtriv)
                    .IsRequired()
                    .HasColumnName("co_atriv")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Valor)
                    .IsRequired()
                    .HasColumnName("valor")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoAtrivNavigation)
                    .WithMany(p => p.RengAtc)
                    .HasForeignKey(d => d.CoAtriv)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_atc_spatriv");

                entity.HasOne(d => d.CoCedNavigation)
                    .WithMany(p => p.RengAtc)
                    .HasForeignKey(d => d.CoCed)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_atc_spced");
            });

            modelBuilder.Entity<RengCac>(entity =>
            {
                entity.HasKey(e => new { e.FactNum, e.RengNum })
                    .HasName("reng_cac_reng_cac");

                entity.ToTable("reng_cac");

                entity.HasIndex(e => e.CoAlma)
                    .HasName("ico_alma");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.FactNum)
                    .HasName("fact_num");

                entity.HasIndex(e => e.RengNum)
                    .HasName("reng_num");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1299535713")
                    .IsUnique();

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Anulado).HasColumnName("anulado");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CantImp)
                    .HasColumnName("cant_imp")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CantProd)
                    .HasColumnName("cant_prod")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAlma2)
                    .IsRequired()
                    .HasColumnName("co_alma2")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.DesArt)
                    .IsRequired()
                    .HasColumnName("des_art")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FecLote)
                    .HasColumnName("fec_lote")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.ImpProd)
                    .HasColumnName("imp_prod")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MonIlc)
                    .HasColumnName("mon_ilc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.NroLote)
                    .IsRequired()
                    .HasColumnName("nro_lote")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumDoc).HasColumnName("num_doc");

                entity.Property(e => e.NumDoc2).HasColumnName("num_doc2");

                entity.Property(e => e.Otros)
                    .HasColumnName("otros")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente)
                    .HasColumnName("pendiente")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente2)
                    .HasColumnName("pendiente2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcDesc)
                    .IsRequired()
                    .HasColumnName("porc_desc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PrecVta)
                    .HasColumnName("prec_vta")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PrecVta2)
                    .HasColumnName("prec_vta2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.RengDoc).HasColumnName("reng_doc");

                entity.Property(e => e.RengDoc2).HasColumnName("reng_doc2");

                entity.Property(e => e.RengNeto)
                    .HasColumnName("reng_neto")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Seleccion).HasColumnName("seleccion");

                entity.Property(e => e.StotalArt)
                    .HasColumnName("stotal_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TipoDoc)
                    .IsRequired()
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoDoc2)
                    .IsRequired()
                    .HasColumnName("tipo_doc2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalDev)
                    .HasColumnName("total_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoAlmaNavigation)
                    .WithMany(p => p.RengCac)
                    .HasForeignKey(d => d.CoAlma)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_cac_sub_alma");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengCac)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_cac_art");

                entity.HasOne(d => d.TipoImpNavigation)
                    .WithMany(p => p.RengCac)
                    .HasForeignKey(d => d.TipoImp)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_cac_tabulado");
            });

            modelBuilder.Entity<RengCdp>(entity =>
            {
                entity.HasKey(e => new { e.FactNum, e.RengNum })
                    .HasName("reng_cdp_reng_cdp");

                entity.ToTable("reng_cdp");

                entity.HasIndex(e => e.CoAlma)
                    .HasName("ico_alma");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.FactNum)
                    .HasName("fact_num");

                entity.HasIndex(e => e.RengNum)
                    .HasName("reng_num");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1395536055")
                    .IsUnique();

                entity.HasIndex(e => e.TipoImp)
                    .HasName("itipo_imp");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Anulado).HasColumnName("anulado");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CantImp)
                    .HasColumnName("cant_imp")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CantProd)
                    .HasColumnName("cant_prod")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAlma2)
                    .IsRequired()
                    .HasColumnName("co_alma2")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.DesArt)
                    .IsRequired()
                    .HasColumnName("des_art")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FecLote)
                    .HasColumnName("fec_lote")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.ImpProd)
                    .HasColumnName("imp_prod")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MonIlc)
                    .HasColumnName("mon_ilc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.NroLote)
                    .IsRequired()
                    .HasColumnName("nro_lote")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumDoc).HasColumnName("num_doc");

                entity.Property(e => e.NumDoc2).HasColumnName("num_doc2");

                entity.Property(e => e.Otros)
                    .HasColumnName("otros")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente)
                    .HasColumnName("pendiente")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente2)
                    .HasColumnName("pendiente2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcDesc)
                    .IsRequired()
                    .HasColumnName("porc_desc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PrecVta)
                    .HasColumnName("prec_vta")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PrecVta2)
                    .HasColumnName("prec_vta2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.RengDoc).HasColumnName("reng_doc");

                entity.Property(e => e.RengDoc2).HasColumnName("reng_doc2");

                entity.Property(e => e.RengNeto)
                    .HasColumnName("reng_neto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Seleccion).HasColumnName("seleccion");

                entity.Property(e => e.StotalArt)
                    .HasColumnName("stotal_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TipoDoc)
                    .IsRequired()
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoDoc2)
                    .IsRequired()
                    .HasColumnName("tipo_doc2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalDev)
                    .HasColumnName("total_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoAlmaNavigation)
                    .WithMany(p => p.RengCdp)
                    .HasForeignKey(d => d.CoAlma)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_cdp_sub_alma");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengCdp)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_cdp_art");
            });

            modelBuilder.Entity<RengCie>(entity =>
            {
                entity.HasKey(e => new { e.EntNum, e.RengNum });

                entity.ToTable("reng_cie");

                entity.Property(e => e.EntNum).HasColumnName("ent_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUni)
                    .IsRequired()
                    .HasColumnName("co_uni")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FecLote)
                    .HasColumnName("fec_lote")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.NroLote)
                    .IsRequired()
                    .HasColumnName("nro_lote")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.StotalArt)
                    .HasColumnName("stotal_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengCie)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_cie_art");

                entity.HasOne(d => d.EntNumNavigation)
                    .WithMany(p => p.RengCie)
                    .HasForeignKey(d => d.EntNum)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_cie_spcierre");
            });

            modelBuilder.Entity<RengCob>(entity =>
            {
                entity.HasKey(e => new { e.RengNum, e.CobNum })
                    .HasName("reng_cob_reng_cob");

                entity.ToTable("reng_cob");

                entity.HasIndex(e => e.CobNum)
                    .HasName("IX_COB_NUM");

                entity.HasIndex(e => e.DocNum)
                    .HasName("doc_num");

                entity.HasIndex(e => e.RengNum)
                    .HasName("rengnum");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1788585460")
                    .IsUnique();

                entity.HasIndex(e => e.TpDocCob)
                    .HasName("itp_doc_co");

                entity.HasIndex(e => new { e.CobNum, e.Neto, e.TpDocCob, e.DocNum })
                    .HasName("IX_tp_doc_cob_doc_num");

                entity.HasIndex(e => new { e.DocNum, e.Neto, e.FactIva, e.CobNum, e.TpDocCob })
                    .HasName("IX_cob_num_tp_doc_cob");

                entity.HasIndex(e => new { e.Neto, e.MontoReten, e.RetIva, e.CobNum, e.TpDocCob, e.DocNum })
                    .HasName("IX_tp_doc_cob_doc_num_2");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.CobNum).HasColumnName("cob_num");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoIslr)
                    .IsRequired()
                    .HasColumnName("co_islr")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.ComiCob)
                    .HasColumnName("comi_cob")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Comis1)
                    .HasColumnName("comis1")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Comis2)
                    .HasColumnName("comis2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Comis3)
                    .HasColumnName("comis3")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Comis4)
                    .HasColumnName("comis4")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Comis5)
                    .HasColumnName("comis5")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Comis6)
                    .HasColumnName("comis6")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.DocNum).HasColumnName("doc_num");

                entity.Property(e => e.Dppago)
                    .HasColumnName("dppago")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.DppagoTmp).HasColumnName("dppago_tmp");

                entity.Property(e => e.FactIva).HasColumnName("fact_iva");

                entity.Property(e => e.FecCom)
                    .HasColumnName("fec_com")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.ImpPago)
                    .HasColumnName("imp_pago")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Isv)
                    .HasColumnName("isv")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MontCob)
                    .HasColumnName("mont_cob")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MontoDppago)
                    .HasColumnName("monto_dppago")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MontoObj)
                    .HasColumnName("monto_obj")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MontoReten)
                    .HasColumnName("monto_reten")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Neto)
                    .HasColumnName("neto")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.NetoTmp)
                    .HasColumnName("neto_tmp")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.NroFact)
                    .IsRequired()
                    .HasColumnName("nro_fact")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Numcon)
                    .IsRequired()
                    .HasColumnName("numcon")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PorCob)
                    .HasColumnName("por_cob")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PorcAjuC)
                    .HasColumnName("porc_aju_c")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PorcDesc)
                    .HasColumnName("porc_desc")
                    .HasColumnType("decimal(18, 8)");

                entity.Property(e => e.PorcRetn)
                    .HasColumnName("porc_retn")
                    .HasColumnType("decimal(18, 8)");

                entity.Property(e => e.ProvTer)
                    .IsRequired()
                    .HasColumnName("prov_ter")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.RengNcr).HasColumnName("reng_ncr");

                entity.Property(e => e.RengTer).HasColumnName("reng_ter");

                entity.Property(e => e.RetIva)
                    .HasColumnName("ret_iva")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.SignAjuC)
                    .IsRequired()
                    .HasColumnName("sign_aju_c")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.SinoPago).HasColumnName("sino_pago");

                entity.Property(e => e.SinoReten).HasColumnName("sino_reten");

                entity.Property(e => e.Sustraen)
                    .HasColumnName("sustraen")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TpDocCob)
                    .IsRequired()
                    .HasColumnName("tp_doc_cob")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<RengCom>(entity =>
            {
                entity.HasKey(e => new { e.FactNum, e.RengNum })
                    .HasName("reng_com_reng_com");

                entity.ToTable("reng_com");

                entity.HasIndex(e => e.CoAlma)
                    .HasName("ico_alma");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.FactNum)
                    .HasName("ifact_num");

                entity.HasIndex(e => e.RengNum)
                    .HasName("reng_num");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_2141966707")
                    .IsUnique();

                entity.HasIndex(e => e.TipoImp)
                    .HasName("itipo_imp");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Anulado).HasColumnName("anulado");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CantImp)
                    .HasColumnName("cant_imp")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CantProd)
                    .HasColumnName("cant_prod")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAlma2)
                    .IsRequired()
                    .HasColumnName("co_alma2")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.DesArt)
                    .IsRequired()
                    .HasColumnName("des_art")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FecLote)
                    .HasColumnName("fec_lote")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.ImpProd)
                    .HasColumnName("imp_prod")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MonIlc)
                    .HasColumnName("mon_ilc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.NroLote)
                    .IsRequired()
                    .HasColumnName("nro_lote")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumDoc).HasColumnName("num_doc");

                entity.Property(e => e.NumDoc2).HasColumnName("num_doc2");

                entity.Property(e => e.Otros)
                    .HasColumnName("otros")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente)
                    .HasColumnName("pendiente")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente2)
                    .HasColumnName("pendiente2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Peso)
                    .HasColumnName("peso")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pie)
                    .HasColumnName("pie")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcDesc)
                    .IsRequired()
                    .HasColumnName("porc_desc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PorcGas)
                    .HasColumnName("porc_gas")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PrecVta)
                    .HasColumnName("prec_vta")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PrecVta2)
                    .HasColumnName("prec_vta2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.RengDoc).HasColumnName("reng_doc");

                entity.Property(e => e.RengDoc2).HasColumnName("reng_doc2");

                entity.Property(e => e.RengNeto)
                    .HasColumnName("reng_neto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Seleccion).HasColumnName("seleccion");

                entity.Property(e => e.StotalArt)
                    .HasColumnName("stotal_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TipoDoc)
                    .IsRequired()
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoDoc2)
                    .IsRequired()
                    .HasColumnName("tipo_doc2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalDev)
                    .HasColumnName("total_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoAlmaNavigation)
                    .WithMany(p => p.RengCom)
                    .HasForeignKey(d => d.CoAlma)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_com_sub_alma");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengCom)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_com_art");
            });

            modelBuilder.Entity<RengCon>(entity =>
            {
                entity.HasKey(e => new { e.CodCta, e.Mes, e.Ano, e.RengNum })
                    .IsClustered(false);

                entity.ToTable("reng_con");

                entity.Property(e => e.CodCta)
                    .HasColumnName("cod_cta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Mes).HasColumnName("mes");

                entity.Property(e => e.Ano).HasColumnName("ano");

                entity.Property(e => e.RengNum).HasColumnName("Reng_num");

                entity.Property(e => e.DepCon).HasColumnName("dep_con");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DocNum)
                    .IsRequired()
                    .HasColumnName("doc_num")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FecMov)
                    .HasColumnName("fec_mov")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Idb)
                    .HasColumnName("idb")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MontoD)
                    .HasColumnName("monto_d")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MontoH)
                    .HasColumnName("monto_h")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Origen)
                    .IsRequired()
                    .HasColumnName("origen")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TipoOp)
                    .IsRequired()
                    .HasColumnName("tipo_op")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.ConcAut)
                    .WithMany(p => p.RengCon)
                    .HasForeignKey(d => new { d.CodCta, d.Mes, d.Ano })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_con_conc_aut");
            });

            modelBuilder.Entity<RengCos>(entity =>
            {
                entity.HasKey(e => new { e.CostNum, e.RengNum });

                entity.ToTable("reng_cos");

                entity.Property(e => e.CostNum).HasColumnName("cost_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUni)
                    .IsRequired()
                    .HasColumnName("co_uni")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.GfCant)
                    .HasColumnName("gf_cant")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.GfCantOm)
                    .HasColumnName("gf_cant_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MemCant)
                    .HasColumnName("mem_cant")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MemCantOm)
                    .HasColumnName("mem_cant_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MenCant)
                    .HasColumnName("men_cant")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MenCantOm)
                    .HasColumnName("men_cant_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MoCant)
                    .HasColumnName("mo_cant")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MoCantOm)
                    .HasColumnName("mo_cant_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MpCant)
                    .HasColumnName("mp_cant")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MpCantOm)
                    .HasColumnName("mp_cant_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.OiCant)
                    .HasColumnName("oi_cant")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.OiCantOm)
                    .HasColumnName("oi_cant_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorGf)
                    .HasColumnName("por_gf")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorGfOm)
                    .HasColumnName("por_gf_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorMem)
                    .HasColumnName("por_mem")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorMemOm)
                    .HasColumnName("por_mem_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorMen)
                    .HasColumnName("por_men")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorMenOm)
                    .HasColumnName("por_men_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorMo)
                    .HasColumnName("por_mo")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorMoOm)
                    .HasColumnName("por_mo_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorMp)
                    .HasColumnName("por_mp")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorMpOm)
                    .HasColumnName("por_mp_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorOi)
                    .HasColumnName("por_oi")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorOiOm)
                    .HasColumnName("por_oi_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Total)
                    .HasColumnName("total")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalOm)
                    .HasColumnName("total_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.CostNumNavigation)
                    .WithMany(p => p.RengCos)
                    .HasForeignKey(d => d.CostNum)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_cos_spcostest");
            });

            modelBuilder.Entity<RengDcc>(entity =>
            {
                entity.HasKey(e => new { e.TipoDoc, e.NroDoc, e.RengNum });

                entity.ToTable("reng_dcc");

                entity.HasIndex(e => e.CoArt)
                    .HasName("IX_reng_dcc");

                entity.HasIndex(e => e.NroDoc)
                    .HasName("nro_doc");

                entity.HasIndex(e => e.TipoDoc)
                    .HasName("tipo_doc");

                entity.Property(e => e.TipoDoc)
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroDoc).HasColumnName("nro_doc");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesArt)
                    .IsRequired()
                    .HasColumnName("des_art")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PrecVta)
                    .HasColumnName("prec_vta")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PrecVta2)
                    .HasColumnName("prec_vta2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.RengNeto)
                    .HasColumnName("reng_neto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengDcc)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_dcc_art");
            });

            modelBuilder.Entity<RengDcp>(entity =>
            {
                entity.HasKey(e => new { e.TipoDoc, e.NroDoc, e.RengNum });

                entity.ToTable("reng_dcp");

                entity.HasIndex(e => e.CoArt)
                    .HasName("IX_reng_dcp_3");

                entity.HasIndex(e => e.NroDoc)
                    .HasName("IX_reng_dcp_1");

                entity.HasIndex(e => e.RengNum)
                    .HasName("IX_reng_dcp_2");

                entity.HasIndex(e => e.TipoDoc)
                    .HasName("IX_reng_dcp");

                entity.Property(e => e.TipoDoc)
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroDoc).HasColumnName("nro_doc");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesArt)
                    .IsRequired()
                    .HasColumnName("des_art")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PrecVta)
                    .HasColumnName("prec_vta")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PrecVta2)
                    .HasColumnName("prec_vta2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.RengNeto)
                    .HasColumnName("reng_neto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengDcp)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_dcp_art");
            });

            modelBuilder.Entity<RengDev>(entity =>
            {
                entity.HasKey(e => new { e.DevNum, e.RengNum });

                entity.ToTable("reng_dev");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.DevNum)
                    .HasName("dev_num");

                entity.HasIndex(e => e.NroLote)
                    .HasName("nro_lote");

                entity.HasIndex(e => e.RengNum)
                    .HasName("rengnum");

                entity.Property(e => e.DevNum).HasColumnName("dev_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.CantCom)
                    .HasColumnName("cant_com")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CantDev)
                    .HasColumnName("cant_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CantEnt)
                    .HasColumnName("cant_ent")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CantXdev)
                    .HasColumnName("cant_xdev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoTar)
                    .IsRequired()
                    .HasColumnName("co_tar")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FecLote)
                    .HasColumnName("fec_lote")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Multilote)
                    .IsRequired()
                    .HasColumnName("multilote")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NroLote)
                    .IsRequired()
                    .HasColumnName("nro_lote")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumDoc2).HasColumnName("num_doc2");

                entity.Property(e => e.Pendiente2)
                    .HasColumnName("pendiente2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.RengDoc2).HasColumnName("reng_doc2");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.StotalArt)
                    .HasColumnName("stotal_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Subced).HasColumnName("subced");

                entity.Property(e => e.SuniVenta)
                    .IsRequired()
                    .HasColumnName("suni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoDoc2)
                    .IsRequired()
                    .HasColumnName("tipo_doc2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalArt2)
                    .HasColumnName("total_art2")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<RengDmc>(entity =>
            {
                entity.HasKey(e => new { e.DmcNum, e.RengNum });

                entity.ToTable("reng_dmc");

                entity.Property(e => e.DmcNum).HasColumnName("dmc_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Arancel)
                    .IsRequired()
                    .HasColumnName("arancel")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.ArtDesc)
                    .IsRequired()
                    .HasColumnName("art_desc")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CanBult).HasColumnName("can_bult");

                entity.Property(e => e.ClaBult)
                    .IsRequired()
                    .HasColumnName("cla_bult")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Peso)
                    .HasColumnName("peso")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.UnidEnt).HasColumnName("unid_ent");

                entity.Property(e => e.UnidFrc)
                    .HasColumnName("unid_frc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UnidTip)
                    .IsRequired()
                    .HasColumnName("unid_tip")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Valor)
                    .HasColumnName("valor")
                    .HasColumnType("decimal(18, 5)");
            });

            modelBuilder.Entity<RengDoc>(entity =>
            {
                entity.HasKey(e => new { e.ExpNum, e.RengNum });

                entity.ToTable("reng_doc");

                entity.Property(e => e.ExpNum).HasColumnName("exp_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.DocCom)
                    .IsRequired()
                    .HasColumnName("doc_com")
                    .HasMaxLength(254)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DocCop).HasColumnName("doc_cop");

                entity.Property(e => e.Fecha)
                    .HasColumnName("fecha")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.NumDoc)
                    .IsRequired()
                    .HasColumnName("num_doc")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TipoDoc)
                    .IsRequired()
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(254)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.ExpNumNavigation)
                    .WithMany(p => p.RengDoc)
                    .HasForeignKey(d => d.ExpNum)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_doc_exp_imp");
            });

            modelBuilder.Entity<RengDp>(entity =>
            {
                entity.HasKey(e => new { e.RengNum, e.DepNum })
                    .HasName("reng_dp_reng_dp");

                entity.ToTable("reng_dp");

                entity.HasIndex(e => e.Codigo)
                    .HasName("icodigo");

                entity.HasIndex(e => e.DepNum)
                    .HasName("dep_num");

                entity.HasIndex(e => e.DocNum)
                    .HasName("idoc_num");

                entity.HasIndex(e => e.FormaPag)
                    .HasName("iforma_pag");

                entity.HasIndex(e => e.RengNum)
                    .HasName("reng_num");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1811537537")
                    .IsUnique();

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.DepNum).HasColumnName("dep_num");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.BancTarj)
                    .IsRequired()
                    .HasColumnName("banc_tarj")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CobPag).HasColumnName("cob_pag");

                entity.Property(e => e.Codigo)
                    .IsRequired()
                    .HasColumnName("codigo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comision)
                    .HasColumnName("comision")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DocNum)
                    .IsRequired()
                    .HasColumnName("doc_num")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Fecha)
                    .HasColumnName("fecha")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FormaPag)
                    .IsRequired()
                    .HasColumnName("forma_pag")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Impuesto)
                    .HasColumnName("impuesto")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Monto)
                    .HasColumnName("monto")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MovAfec).HasColumnName("mov_afec");

                entity.Property(e => e.MovGene).HasColumnName("mov_gene");

                entity.Property(e => e.Origen)
                    .IsRequired()
                    .HasColumnName("origen")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TipoPlazo)
                    .IsRequired()
                    .HasColumnName("tipo_plazo")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CodigoNavigation)
                    .WithMany(p => p.RengDp)
                    .HasForeignKey(d => d.Codigo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_dp_cajas");
            });

            modelBuilder.Entity<RengDvc>(entity =>
            {
                entity.HasKey(e => new { e.FactNum, e.RengNum })
                    .HasName("reng_dvc_reng_dvc");

                entity.ToTable("reng_dvc");

                entity.HasIndex(e => e.CoAlma)
                    .HasName("ico_alma");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.FactNum)
                    .HasName("fact_num");

                entity.HasIndex(e => e.RengNum)
                    .HasName("reng_num");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_154483629")
                    .IsUnique();

                entity.HasIndex(e => new { e.CoArt, e.TipoDoc })
                    .HasName("iart_tip");

                entity.HasIndex(e => new { e.FactNum, e.RengNum, e.TipoDoc, e.RengDoc })
                    .HasName("ifac_reng_tip_doc");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Anulado).HasColumnName("anulado");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CantImp)
                    .HasColumnName("cant_imp")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CantProd)
                    .HasColumnName("cant_prod")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAlma2)
                    .IsRequired()
                    .HasColumnName("co_alma2")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.DesArt)
                    .IsRequired()
                    .HasColumnName("des_art")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FecLote)
                    .HasColumnName("fec_lote")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.ImpProd)
                    .HasColumnName("imp_prod")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MonIlc)
                    .HasColumnName("mon_ilc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.NroLote)
                    .IsRequired()
                    .HasColumnName("nro_lote")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumDoc).HasColumnName("num_doc");

                entity.Property(e => e.NumDoc2).HasColumnName("num_doc2");

                entity.Property(e => e.Otros)
                    .HasColumnName("otros")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente)
                    .HasColumnName("pendiente")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente2)
                    .HasColumnName("pendiente2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcDesc)
                    .IsRequired()
                    .HasColumnName("porc_desc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PrecVta)
                    .HasColumnName("prec_vta")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PrecVta2)
                    .HasColumnName("prec_vta2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.RengDoc).HasColumnName("reng_doc");

                entity.Property(e => e.RengDoc2).HasColumnName("reng_doc2");

                entity.Property(e => e.RengNeto)
                    .HasColumnName("reng_neto")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Seleccion).HasColumnName("seleccion");

                entity.Property(e => e.StotalArt)
                    .HasColumnName("stotal_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TipoDoc)
                    .IsRequired()
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoDoc2)
                    .IsRequired()
                    .HasColumnName("tipo_doc2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoPrec)
                    .IsRequired()
                    .HasColumnName("tipo_prec")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalDev)
                    .HasColumnName("total_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoAlmaNavigation)
                    .WithMany(p => p.RengDvc)
                    .HasForeignKey(d => d.CoAlma)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_dvc_sub_alma");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengDvc)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_dvc_art");

                entity.HasOne(d => d.TipoImpNavigation)
                    .WithMany(p => p.RengDvc)
                    .HasForeignKey(d => d.TipoImp)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_dvc_tabulado");
            });

            modelBuilder.Entity<RengDvp>(entity =>
            {
                entity.HasKey(e => new { e.FactNum, e.RengNum })
                    .HasName("reng_dvp_reng_dvp");

                entity.ToTable("reng_dvp");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.FactNum)
                    .HasName("fact_num");

                entity.HasIndex(e => e.RengNum)
                    .HasName("reng_num");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_250483971")
                    .IsUnique();

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Anulado).HasColumnName("anulado");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CantImp)
                    .HasColumnName("cant_imp")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CantProd)
                    .HasColumnName("cant_prod")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAlma2)
                    .IsRequired()
                    .HasColumnName("co_alma2")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.DesArt)
                    .IsRequired()
                    .HasColumnName("des_art")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FecLote)
                    .HasColumnName("fec_lote")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.ImpProd)
                    .HasColumnName("imp_prod")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MonIlc)
                    .HasColumnName("mon_ilc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.NroLote)
                    .IsRequired()
                    .HasColumnName("nro_lote")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumDoc).HasColumnName("num_doc");

                entity.Property(e => e.NumDoc2).HasColumnName("num_doc2");

                entity.Property(e => e.Otros)
                    .HasColumnName("otros")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente)
                    .HasColumnName("pendiente")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente2)
                    .HasColumnName("pendiente2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcDesc)
                    .IsRequired()
                    .HasColumnName("porc_desc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PrecVta)
                    .HasColumnName("prec_vta")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PrecVta2)
                    .HasColumnName("prec_vta2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.RengDoc).HasColumnName("reng_doc");

                entity.Property(e => e.RengDoc2).HasColumnName("reng_doc2");

                entity.Property(e => e.RengNeto)
                    .HasColumnName("reng_neto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Seleccion).HasColumnName("seleccion");

                entity.Property(e => e.StotalArt)
                    .HasColumnName("stotal_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TipoDoc)
                    .IsRequired()
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoDoc2)
                    .IsRequired()
                    .HasColumnName("tipo_doc2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalDev)
                    .HasColumnName("total_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoAlmaNavigation)
                    .WithMany(p => p.RengDvp)
                    .HasForeignKey(d => d.CoAlma)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_dvp_sub_alma");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengDvp)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_dvp_art");
            });

            modelBuilder.Entity<RengEce>(entity =>
            {
                entity.HasKey(e => new { e.CoCed, e.RengNum });

                entity.ToTable("reng_ece");

                entity.Property(e => e.CoCed).HasColumnName("co_ced");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Cantidad).HasColumnName("cantidad");

                entity.Property(e => e.CoEmp)
                    .IsRequired()
                    .HasColumnName("co_emp")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Horas)
                    .HasColumnName("horas")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.HasOne(d => d.CoCedNavigation)
                    .WithMany(p => p.RengEce)
                    .HasForeignKey(d => d.CoCed)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_ece_spced");

                entity.HasOne(d => d.CoEmpNavigation)
                    .WithMany(p => p.RengEce)
                    .HasForeignKey(d => d.CoEmp)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_ece_spemple");
            });

            modelBuilder.Entity<RengEmb>(entity =>
            {
                entity.HasKey(e => new { e.ExpNum, e.RengNum });

                entity.ToTable("reng_emb");

                entity.Property(e => e.ExpNum).HasColumnName("exp_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.CantCon)
                    .IsRequired()
                    .HasColumnName("cant_con")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CantEmp).HasColumnName("cant_emp");

                entity.Property(e => e.CoUni)
                    .IsRequired()
                    .HasColumnName("co_uni")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.EmpTra)
                    .IsRequired()
                    .HasColumnName("emp_tra")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.FecEta)
                    .HasColumnName("fec_eta")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEtd)
                    .HasColumnName("fec_etd")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.LugEmb)
                    .IsRequired()
                    .HasColumnName("lug_emb")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumDoc)
                    .IsRequired()
                    .HasColumnName("num_doc")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PesoTo)
                    .HasColumnName("peso_to")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PesoVo)
                    .HasColumnName("peso_vo")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TipoTra).HasColumnName("tipo_tra");

                entity.Property(e => e.VehNom)
                    .IsRequired()
                    .HasColumnName("veh_nom")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.VolTot)
                    .HasColumnName("vol_tot")
                    .HasColumnType("decimal(18, 2)");

                entity.HasOne(d => d.CoUniNavigation)
                    .WithMany(p => p.RengEmb)
                    .HasForeignKey(d => d.CoUni)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_emb_unidades");

                entity.HasOne(d => d.ExpNumNavigation)
                    .WithMany(p => p.RengEmb)
                    .HasForeignKey(d => d.ExpNum)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_emb_exp_imp");
            });

            modelBuilder.Entity<RengEmp>(entity =>
            {
                entity.HasKey(e => new { e.EmpNum, e.RengNum });

                entity.ToTable("reng_emp");

                entity.HasIndex(e => e.CoArt)
                    .HasName("IX_reng_emp_1");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("IX_reng_emp_2")
                    .IsUnique();

                entity.Property(e => e.EmpNum).HasColumnName("emp_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Agrupar).HasColumnName("agrupar");

                entity.Property(e => e.CantOrgs)
                    .HasColumnName("cant_orgs")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.CantOrgt)
                    .HasColumnName("cant_orgt")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FecLote)
                    .HasColumnName("fec_lote")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.NroLote)
                    .IsRequired()
                    .HasColumnName("nro_lote")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NroReng).HasColumnName("nro_reng");

                entity.Property(e => e.NumBlto).HasColumnName("num_blto");

                entity.Property(e => e.PrecVta)
                    .HasColumnName("prec_vta")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.StotalArt)
                    .HasColumnName("stotal_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Unid)
                    .IsRequired()
                    .HasColumnName("unid")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.UnidR)
                    .IsRequired()
                    .HasColumnName("unid_r")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((6)))");

                entity.HasOne(d => d.EmpNumNavigation)
                    .WithMany(p => p.RengEmp)
                    .HasForeignKey(d => d.EmpNum)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_emp_Empaques");
            });

            modelBuilder.Entity<RengEnc>(entity =>
            {
                entity.HasKey(e => new { e.RengNum, e.RmaNum })
                    .HasName("reng_enc_reng_enc");

                entity.ToTable("reng_enc");

                entity.HasIndex(e => e.RengNum)
                    .HasName("reng_num");

                entity.HasIndex(e => e.RmaNum)
                    .HasName("rma_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.RmaNum).HasColumnName("rma_num");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoReem)
                    .IsRequired()
                    .HasColumnName("co_reem")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesArt)
                    .IsRequired()
                    .HasColumnName("des_art")
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NdNum).HasColumnName("nd_num");

                entity.Property(e => e.NumDoc).HasColumnName("num_doc");

                entity.Property(e => e.PrecVta).HasColumnName("prec_vta");

                entity.Property(e => e.PrecVta2).HasColumnName("prec_vta2");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Serial)
                    .IsRequired()
                    .HasColumnName("serial")
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.SerialDev)
                    .IsRequired()
                    .HasColumnName("serial_dev")
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoDoc)
                    .IsRequired()
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Treemplazo)
                    .IsRequired()
                    .HasColumnName("treemplazo")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoAlmaNavigation)
                    .WithMany(p => p.RengEnc)
                    .HasForeignKey(d => d.CoAlma)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_enc_sub_alma");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengEnc)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_enc_art");

                entity.HasOne(d => d.CoReemNavigation)
                    .WithMany(p => p.RengEnc)
                    .HasForeignKey(d => d.CoReem)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_enc_rma_reem");

                entity.HasOne(d => d.RmaNumNavigation)
                    .WithMany(p => p.RengEnc)
                    .HasForeignKey(d => d.RmaNum)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_enc_rma_entc");
            });

            modelBuilder.Entity<RengEnp>(entity =>
            {
                entity.HasKey(e => new { e.RengNum, e.RmaNum })
                    .HasName("reng_enp_reng_enp");

                entity.ToTable("reng_enp");

                entity.HasIndex(e => e.RengNum)
                    .HasName("reng_num");

                entity.HasIndex(e => e.RmaNum)
                    .HasName("rma_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.RmaNum).HasColumnName("rma_num");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoReem)
                    .IsRequired()
                    .HasColumnName("co_reem")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesArt)
                    .IsRequired()
                    .HasColumnName("des_art")
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NcNum).HasColumnName("nc_num");

                entity.Property(e => e.NumDoc).HasColumnName("num_doc");

                entity.Property(e => e.PrecVta).HasColumnName("prec_vta");

                entity.Property(e => e.PrecVta2).HasColumnName("prec_vta2");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Serial)
                    .IsRequired()
                    .HasColumnName("serial")
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.SerialDev)
                    .IsRequired()
                    .HasColumnName("serial_dev")
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoDoc)
                    .IsRequired()
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Treemplazo)
                    .IsRequired()
                    .HasColumnName("treemplazo")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoAlmaNavigation)
                    .WithMany(p => p.RengEnp)
                    .HasForeignKey(d => d.CoAlma)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_enp_sub_alma");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengEnp)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_enp_art");

                entity.HasOne(d => d.CoReemNavigation)
                    .WithMany(p => p.RengEnp)
                    .HasForeignKey(d => d.CoReem)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_enp_rma_reep");

                entity.HasOne(d => d.RmaNumNavigation)
                    .WithMany(p => p.RengEnp)
                    .HasForeignKey(d => d.RmaNum)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_enp_rma_entp");
            });

            modelBuilder.Entity<RengEnt>(entity =>
            {
                entity.HasKey(e => new { e.EntNum, e.RengNum });

                entity.ToTable("reng_ent");

                entity.Property(e => e.EntNum).HasColumnName("ent_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUni)
                    .IsRequired()
                    .HasColumnName("co_uni")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FecLote)
                    .HasColumnName("fec_lote")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.NroLote)
                    .IsRequired()
                    .HasColumnName("nro_lote")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.StotalArt)
                    .HasColumnName("stotal_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengEnt)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_ent_art");

                entity.HasOne(d => d.EntNumNavigation)
                    .WithMany(p => p.RengEnt)
                    .HasForeignKey(d => d.EntNum)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_ent_spentre");
            });

            modelBuilder.Entity<RengEsc>(entity =>
            {
                entity.HasKey(e => new { e.EscNum, e.RengNum });

                entity.ToTable("reng_esc");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.EscNum)
                    .HasName("esc_num");

                entity.HasIndex(e => e.RengNum)
                    .HasName("rengnum");

                entity.Property(e => e.EscNum).HasColumnName("esc_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt2)
                    .IsRequired()
                    .HasColumnName("co_art2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CosCalcular)
                    .HasColumnName("cos_calcular")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TotalArt).HasColumnName("total_art");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<RengExp>(entity =>
            {
                entity.HasKey(e => new { e.ExpNum, e.RengNum });

                entity.ToTable("reng_exp");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.ExpNum)
                    .HasName("exp_num");

                entity.HasIndex(e => e.RengNum)
                    .HasName("rengnum");

                entity.Property(e => e.ExpNum).HasColumnName("exp_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.CantSol).HasColumnName("cant_sol");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CodCed).HasColumnName("cod_ced");

                entity.Property(e => e.CosProOm).HasColumnName("cos_pro_om");

                entity.Property(e => e.CosProUn).HasColumnName("cos_pro_un");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumDoc2).HasColumnName("num_doc2");

                entity.Property(e => e.Pendiente2).HasColumnName("pendiente2");

                entity.Property(e => e.RengDoc2).HasColumnName("reng_doc2");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.StotalArt).HasColumnName("stotal_art");

                entity.Property(e => e.SuniVenta)
                    .IsRequired()
                    .HasColumnName("suni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoDoc2)
                    .IsRequired()
                    .HasColumnName("tipo_doc2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TotalArt).HasColumnName("total_art");

                entity.Property(e => e.TotalUni).HasColumnName("total_uni");

                entity.Property(e => e.UltCosOm).HasColumnName("ult_cos_om");

                entity.Property(e => e.UltCosUn).HasColumnName("ult_cos_un");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.RengNumNavigation)
                    .WithMany(p => p.RengExp)
                    .HasForeignKey(d => d.RengNum)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_exp_spexplosion");
            });

            modelBuilder.Entity<RengExp2>(entity =>
            {
                entity.HasKey(e => new { e.ExpNum, e.RengNum });

                entity.ToTable("reng_exp2");

                entity.Property(e => e.ExpNum).HasColumnName("exp_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt2)
                    .IsRequired()
                    .HasColumnName("co_art2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Costo).HasColumnName("costo");

                entity.Property(e => e.CostoPro).HasColumnName("costo_pro");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Existencia).HasColumnName("existencia");

                entity.Property(e => e.Faltante).HasColumnName("faltante");

                entity.Property(e => e.Porllegar).HasColumnName("porllegar");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TotalArt).HasColumnName("total_art");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.ExpNumNavigation)
                    .WithMany(p => p.RengExp2)
                    .HasForeignKey(d => d.ExpNum)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_exp2_spexplosion");
            });

            modelBuilder.Entity<RengFac>(entity =>
            {
                entity.HasKey(e => new { e.FactNum, e.RengNum })
                    .HasName("reng_fac_reng_fac");

                entity.ToTable("reng_fac");

                entity.HasIndex(e => e.CoAlma)
                    .HasName("ico_alma");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.FactNum)
                    .HasName("fact_num");

                entity.HasIndex(e => e.RengNum)
                    .HasName("reng_num");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_647009386")
                    .IsUnique();

                entity.HasIndex(e => new { e.FactNum, e.RengNum })
                    .HasName("ifac_reng1");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Anulado).HasColumnName("anulado");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CantImp)
                    .HasColumnName("cant_imp")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CantProd)
                    .HasColumnName("cant_prod")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAlma2)
                    .IsRequired()
                    .HasColumnName("co_alma2")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.DesArt)
                    .IsRequired()
                    .HasColumnName("des_art")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FecLote)
                    .HasColumnName("fec_lote")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.ImpProd)
                    .HasColumnName("imp_prod")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Isv)
                    .HasColumnName("isv")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MonIlc)
                    .HasColumnName("mon_ilc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.NroLote)
                    .IsRequired()
                    .HasColumnName("nro_lote")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumDoc).HasColumnName("num_doc");

                entity.Property(e => e.NumDoc2).HasColumnName("num_doc2");

                entity.Property(e => e.Otros)
                    .HasColumnName("otros")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente)
                    .HasColumnName("pendiente")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente2)
                    .HasColumnName("pendiente2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcDesc)
                    .IsRequired()
                    .HasColumnName("porc_desc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PrecVta)
                    .HasColumnName("prec_vta")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PrecVta2)
                    .HasColumnName("prec_vta2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.RengDoc).HasColumnName("reng_doc");

                entity.Property(e => e.RengDoc2).HasColumnName("reng_doc2");

                entity.Property(e => e.RengNeto)
                    .HasColumnName("reng_neto")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Seleccion).HasColumnName("seleccion");

                entity.Property(e => e.StotalArt)
                    .HasColumnName("stotal_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TipoDoc)
                    .IsRequired()
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoDoc2)
                    .IsRequired()
                    .HasColumnName("tipo_doc2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoPrec)
                    .IsRequired()
                    .HasColumnName("tipo_prec")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalDev)
                    .HasColumnName("total_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoAlmaNavigation)
                    .WithMany(p => p.RengFac)
                    .HasForeignKey(d => d.CoAlma)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_fac_sub_alma");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengFac)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_fac_art");

                entity.HasOne(d => d.TipoImpNavigation)
                    .WithMany(p => p.RengFac)
                    .HasForeignKey(d => d.TipoImp)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_fac_tabulado");
            });

            modelBuilder.Entity<RengFai>(entity =>
            {
                entity.HasKey(e => new { e.ImpNum, e.RengNum });

                entity.ToTable("reng_fai");

                entity.HasIndex(e => e.FactNum)
                    .HasName("IX_reng_fai");

                entity.Property(e => e.ImpNum).HasColumnName("imp_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TotNeto).HasColumnName("tot_neto");
            });

            modelBuilder.Entity<RengFci>(entity =>
            {
                entity.HasKey(e => new { e.ImpNum, e.RengNum });

                entity.ToTable("reng_fci");

                entity.Property(e => e.ImpNum).HasColumnName("imp_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.MontoDis).HasColumnName("monto_dis");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TotNeto).HasColumnName("tot_neto");
            });

            modelBuilder.Entity<RengFis>(entity =>
            {
                entity.HasKey(e => new { e.RengNum, e.NumFis })
                    .HasName("reng_fis_reng_fis");

                entity.ToTable("reng_fis");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.NumFis)
                    .HasName("num_fis");

                entity.HasIndex(e => e.RengNum)
                    .HasName("reng_num");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_442484655")
                    .IsUnique();

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.NumFis).HasColumnName("num_fis");

                entity.Property(e => e.AjuNum)
                    .IsRequired()
                    .HasColumnName("aju_num")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Cerrado).HasColumnName("cerrado");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoLin)
                    .IsRequired()
                    .HasColumnName("co_lin")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CostoUni)
                    .HasColumnName("costo_uni")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CostoUniOm)
                    .HasColumnName("costo_uni_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.FecLote)
                    .HasColumnName("fec_lote")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.NroLote)
                    .IsRequired()
                    .HasColumnName("nro_lote")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumDoc2).HasColumnName("num_doc2");

                entity.Property(e => e.Pendiente2)
                    .HasColumnName("pendiente2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.RengDoc2).HasColumnName("reng_doc2");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.SajuNum).HasColumnName("saju_num");

                entity.Property(e => e.SstockTeo)
                    .HasColumnName("sstock_teo")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.StockReal)
                    .HasColumnName("stock_real")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.StockTeor)
                    .HasColumnName("stock_teor")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.StotalArt)
                    .HasColumnName("stotal_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.SuniVenta)
                    .IsRequired()
                    .HasColumnName("suni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TCosto).HasColumnName("t_costo");

                entity.Property(e => e.TipoDoc2)
                    .IsRequired()
                    .HasColumnName("tipo_doc2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengFis)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_fis_art");
            });

            modelBuilder.Entity<RengGce>(entity =>
            {
                entity.HasKey(e => new { e.CoCed, e.RengNum });

                entity.ToTable("reng_gce");

                entity.Property(e => e.CoCed).HasColumnName("co_ced");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Cantidad)
                    .HasColumnName("cantidad")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CoGas)
                    .IsRequired()
                    .HasColumnName("co_gas")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.HasOne(d => d.CoCedNavigation)
                    .WithMany(p => p.RengGce)
                    .HasForeignKey(d => d.CoCed)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_gce_spced");

                entity.HasOne(d => d.CoGasNavigation)
                    .WithMany(p => p.RengGce)
                    .HasForeignKey(d => d.CoGas)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_gce_spgasfab");
            });

            modelBuilder.Entity<RengGen>(entity =>
            {
                entity.HasKey(e => new { e.GeneNum, e.RengNum })
                    .HasName("reng_gen_reng_gen");

                entity.ToTable("reng_gen");

                entity.HasIndex(e => e.CoAlma)
                    .HasName("ico_alma");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.GeneNum)
                    .HasName("gene_num");

                entity.HasIndex(e => e.RengNum)
                    .HasName("reng_num");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_538484997")
                    .IsUnique();

                entity.HasIndex(e => new { e.GeneNum, e.RengNum })
                    .HasName("igen_reng");

                entity.Property(e => e.GeneNum).HasColumnName("gene_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.AjuSal).HasColumnName("aju_sal");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CostoUni)
                    .HasColumnName("costo_uni")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FecLote)
                    .HasColumnName("fec_lote")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Neto)
                    .HasColumnName("neto")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.NroLote)
                    .IsRequired()
                    .HasColumnName("nro_lote")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumDoc2).HasColumnName("num_doc2");

                entity.Property(e => e.Pendiente2)
                    .HasColumnName("pendiente2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.RengDoc2).HasColumnName("reng_doc2");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.StotalArt)
                    .HasColumnName("stotal_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.SuniVenta)
                    .IsRequired()
                    .HasColumnName("suni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoDoc2)
                    .IsRequired()
                    .HasColumnName("tipo_doc2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoAlmaNavigation)
                    .WithMany(p => p.RengGen)
                    .HasForeignKey(d => d.CoAlma)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_gen_sub_alma");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengGen)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_gen_art");
            });

            modelBuilder.Entity<RengImp>(entity =>
            {
                entity.HasKey(e => new { e.InpNum, e.RengNum });

                entity.ToTable("reng_imp");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.InpNum)
                    .HasName("inp_num");

                entity.HasIndex(e => e.RengNum)
                    .HasName("rengnum");

                entity.Property(e => e.InpNum).HasColumnName("inp_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt2)
                    .IsRequired()
                    .HasColumnName("co_art2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Existencia)
                    .HasColumnName("existencia")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.InpNumNavigation)
                    .WithMany(p => p.RengImp)
                    .HasForeignKey(d => d.InpNum)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_imp_spimplosion");
            });

            modelBuilder.Entity<RengIsl>(entity =>
            {
                entity.HasKey(e => new { e.TipoDoc, e.DocNum, e.RengNum, e.FactNum });

                entity.ToTable("reng_isl");

                entity.Property(e => e.TipoDoc)
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DocNum).HasColumnName("doc_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.CoIslr)
                    .IsRequired()
                    .HasColumnName("co_islr")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MontoObj)
                    .HasColumnName("monto_obj")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MontoReten)
                    .HasColumnName("monto_reten")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcRetn)
                    .HasColumnName("porc_retn")
                    .HasColumnType("decimal(18, 8)");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Sustraen)
                    .HasColumnName("sustraen")
                    .HasColumnType("decimal(18, 2)");

                entity.HasOne(d => d.CoIslrNavigation)
                    .WithMany(p => p.RengIsl)
                    .HasForeignKey(d => d.CoIslr)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_isl_con_islr");
            });

            modelBuilder.Entity<RengKit>(entity =>
            {
                entity.HasKey(e => new { e.RengNum, e.KitNum })
                    .HasName("reng_kit_reng_kit");

                entity.ToTable("reng_kit");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.KitNum)
                    .HasName("kit_num");

                entity.HasIndex(e => e.RengNum)
                    .HasName("reng_nun");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_634485339")
                    .IsUnique();

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.KitNum).HasColumnName("kit_num");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesKit)
                    .IsRequired()
                    .HasColumnName("des_kit")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecLote)
                    .HasColumnName("fec_lote")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.NroLote)
                    .IsRequired()
                    .HasColumnName("nro_lote")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumDoc2).HasColumnName("num_doc2");

                entity.Property(e => e.Pendiente2)
                    .HasColumnName("pendiente2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.RengDoc2).HasColumnName("reng_doc2");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TipoDoc2)
                    .IsRequired()
                    .HasColumnName("tipo_doc2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengKit)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_kit_art");
            });

            modelBuilder.Entity<RengMce>(entity =>
            {
                entity.HasKey(e => new { e.CoCed, e.RengNum });

                entity.ToTable("reng_mce");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.Property(e => e.CoCed).HasColumnName("co_ced");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.CantMax)
                    .HasColumnName("cant_max")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Cantidad)
                    .HasColumnName("cantidad")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoTar)
                    .IsRequired()
                    .HasColumnName("co_tar")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUni)
                    .IsRequired()
                    .HasColumnName("co_uni")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.StotalArt)
                    .HasColumnName("stotal_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.CoCedNavigation)
                    .WithMany(p => p.RengMce)
                    .HasForeignKey(d => d.CoCed)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_mce_spced");

                entity.HasOne(d => d.CoTarNavigation)
                    .WithMany(p => p.RengMce)
                    .HasForeignKey(d => d.CoTar)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_mce_sptar");
            });

            modelBuilder.Entity<RengMen>(entity =>
            {
                entity.HasKey(e => new { e.MenNum, e.RengNum });

                entity.ToTable("reng_men");

                entity.HasIndex(e => e.CoArt)
                    .HasName("IRm_co_art");

                entity.HasIndex(e => e.RengNum)
                    .HasName("IX_reng_num");

                entity.Property(e => e.MenNum).HasColumnName("men_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Cantidad)
                    .HasColumnName("cantidad")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Cantprod)
                    .HasColumnName("cantprod")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CodCed).HasColumnName("cod_ced");

                entity.Property(e => e.Comprom).HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Diasinv)
                    .HasColumnName("diasinv")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Diasprod).HasColumnName("diasprod");

                entity.Property(e => e.Holgura).HasColumnName("holgura");

                entity.Property(e => e.Mesprox)
                    .HasColumnName("mesprox")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.OdpNum).HasColumnName("odp_num");

                entity.Property(e => e.Pendpro)
                    .HasColumnName("pendpro")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Periodo)
                    .IsRequired()
                    .HasColumnName("periodo")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Producir).HasColumnName("producir");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Stockact)
                    .HasColumnName("stockact")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Stockop)
                    .HasColumnName("stockop")
                    .HasColumnType("decimal(18, 5)");

                entity.HasOne(d => d.MenNumNavigation)
                    .WithMany(p => p.RengMen)
                    .HasForeignKey(d => d.MenNum)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_men_spmenenc");
            });

            modelBuilder.Entity<RengNdd>(entity =>
            {
                entity.HasKey(e => new { e.FactNum, e.RengNum })
                    .HasName("reng_ndd_reng_ndd");

                entity.ToTable("reng_ndd");

                entity.HasIndex(e => e.CoAlma)
                    .HasName("ico_alma");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.FactNum)
                    .HasName("fact_num");

                entity.HasIndex(e => e.RengNum)
                    .HasName("reng_num");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_551009044")
                    .IsUnique();

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Anulado).HasColumnName("anulado");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CantImp)
                    .HasColumnName("cant_imp")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CantProd)
                    .HasColumnName("cant_prod")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAlma2)
                    .IsRequired()
                    .HasColumnName("co_alma2")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.DesArt)
                    .IsRequired()
                    .HasColumnName("des_art")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FecLote)
                    .HasColumnName("fec_lote")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.ImpProd)
                    .HasColumnName("imp_prod")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MonIlc)
                    .HasColumnName("mon_ilc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.NroLote)
                    .IsRequired()
                    .HasColumnName("nro_lote")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumDoc).HasColumnName("num_doc");

                entity.Property(e => e.NumDoc2).HasColumnName("num_doc2");

                entity.Property(e => e.Otros)
                    .HasColumnName("otros")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente)
                    .HasColumnName("pendiente")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente2)
                    .HasColumnName("pendiente2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcDesc)
                    .IsRequired()
                    .HasColumnName("porc_desc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PrecVta)
                    .HasColumnName("prec_vta")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PrecVta2)
                    .HasColumnName("prec_vta2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.RengDoc).HasColumnName("reng_doc");

                entity.Property(e => e.RengDoc2).HasColumnName("reng_doc2");

                entity.Property(e => e.RengNeto)
                    .HasColumnName("reng_neto")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Seleccion).HasColumnName("seleccion");

                entity.Property(e => e.StotalArt)
                    .HasColumnName("stotal_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TipoDoc)
                    .IsRequired()
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoDoc2)
                    .IsRequired()
                    .HasColumnName("tipo_doc2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalDev)
                    .HasColumnName("total_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoAlmaNavigation)
                    .WithMany(p => p.RengNdd)
                    .HasForeignKey(d => d.CoAlma)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_ndd_sub_alma");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengNdd)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_ndd_art");

                entity.HasOne(d => d.TipoImpNavigation)
                    .WithMany(p => p.RengNdd)
                    .HasForeignKey(d => d.TipoImp)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_ndd_tabulado");
            });

            modelBuilder.Entity<RengNde>(entity =>
            {
                entity.HasKey(e => new { e.FactNum, e.RengNum })
                    .HasName("reng_nde_reng_nde");

                entity.ToTable("reng_nde");

                entity.HasIndex(e => e.CoAlma)
                    .HasName("ico_alma");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.FactNum)
                    .HasName("fact_num");

                entity.HasIndex(e => e.RengNum)
                    .HasName("reng_num");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_826486023")
                    .IsUnique();

                entity.HasIndex(e => new { e.FactNum, e.RengNum })
                    .HasName("ifac_reng2");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Anulado).HasColumnName("anulado");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CantImp)
                    .HasColumnName("cant_imp")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CantProd)
                    .HasColumnName("cant_prod")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAlma2)
                    .IsRequired()
                    .HasColumnName("co_alma2")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.DesArt)
                    .IsRequired()
                    .HasColumnName("des_art")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FecLote)
                    .HasColumnName("fec_lote")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.ImpProd)
                    .HasColumnName("imp_prod")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MonIlc)
                    .HasColumnName("mon_ilc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.NroLote)
                    .IsRequired()
                    .HasColumnName("nro_lote")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumDoc).HasColumnName("num_doc");

                entity.Property(e => e.NumDoc2).HasColumnName("num_doc2");

                entity.Property(e => e.Otros)
                    .HasColumnName("otros")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente)
                    .HasColumnName("pendiente")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente2)
                    .HasColumnName("pendiente2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcDesc)
                    .IsRequired()
                    .HasColumnName("porc_desc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PrecVta)
                    .HasColumnName("prec_vta")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PrecVta2)
                    .HasColumnName("prec_vta2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.RengDoc).HasColumnName("reng_doc");

                entity.Property(e => e.RengDoc2).HasColumnName("reng_doc2");

                entity.Property(e => e.RengNeto)
                    .HasColumnName("reng_neto")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Seleccion).HasColumnName("seleccion");

                entity.Property(e => e.StotalArt)
                    .HasColumnName("stotal_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TipoDoc)
                    .IsRequired()
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoDoc2)
                    .IsRequired()
                    .HasColumnName("tipo_doc2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalDev)
                    .HasColumnName("total_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoAlmaNavigation)
                    .WithMany(p => p.RengNde)
                    .HasForeignKey(d => d.CoAlma)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_nde_sub_alma");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengNde)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_nde_art");
            });

            modelBuilder.Entity<RengNdr>(entity =>
            {
                entity.HasKey(e => new { e.FactNum, e.RengNum })
                    .HasName("reng_ndr_reng_ndr");

                entity.ToTable("reng_ndr");

                entity.HasIndex(e => e.CoAlma)
                    .HasName("ico_alma");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.FactNum)
                    .HasName("fact_num");

                entity.HasIndex(e => e.RengNum)
                    .HasName("reng_num");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_922486365")
                    .IsUnique();

                entity.HasIndex(e => e.TipoImp)
                    .HasName("itipo_imp");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Anulado).HasColumnName("anulado");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CantImp)
                    .HasColumnName("cant_imp")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CantProd)
                    .HasColumnName("cant_prod")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAlma2)
                    .IsRequired()
                    .HasColumnName("co_alma2")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.DesArt)
                    .IsRequired()
                    .HasColumnName("des_art")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FecLote)
                    .HasColumnName("fec_lote")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.ImpProd)
                    .HasColumnName("imp_prod")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MonIlc)
                    .HasColumnName("mon_ilc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.NroLote)
                    .IsRequired()
                    .HasColumnName("nro_lote")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumDoc).HasColumnName("num_doc");

                entity.Property(e => e.NumDoc2).HasColumnName("num_doc2");

                entity.Property(e => e.Otros)
                    .HasColumnName("otros")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente)
                    .HasColumnName("pendiente")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente2)
                    .HasColumnName("pendiente2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcDesc)
                    .IsRequired()
                    .HasColumnName("porc_desc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PrecVta)
                    .HasColumnName("prec_vta")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PrecVta2)
                    .HasColumnName("prec_vta2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.RengDoc).HasColumnName("reng_doc");

                entity.Property(e => e.RengDoc2).HasColumnName("reng_doc2");

                entity.Property(e => e.RengNeto)
                    .HasColumnName("reng_neto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Seleccion).HasColumnName("seleccion");

                entity.Property(e => e.StotalArt)
                    .HasColumnName("stotal_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TipoDoc)
                    .IsRequired()
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoDoc2)
                    .IsRequired()
                    .HasColumnName("tipo_doc2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalDev)
                    .HasColumnName("total_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoAlmaNavigation)
                    .WithMany(p => p.RengNdr)
                    .HasForeignKey(d => d.CoAlma)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_ndr_sub_alma");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengNdr)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_ndr_art");
            });

            modelBuilder.Entity<RengOdp>(entity =>
            {
                entity.HasKey(e => new { e.OdpNum, e.RengNum });

                entity.ToTable("reng_odp");

                entity.Property(e => e.OdpNum).HasColumnName("odp_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.CantCom)
                    .HasColumnName("cant_com")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CantCom2)
                    .HasColumnName("cant_com2")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.CantDev)
                    .HasColumnName("cant_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CantDev2)
                    .HasColumnName("cant_dev2")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.CantEnt)
                    .HasColumnName("cant_ent")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CantEnt2)
                    .HasColumnName("cant_ent2")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.CantMax)
                    .HasColumnName("cant_max")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CantReq)
                    .HasColumnName("cant_req")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CantXde)
                    .HasColumnName("cant_xde")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CantXde2)
                    .HasColumnName("cant_xde2")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoTar)
                    .IsRequired()
                    .HasColumnName("co_tar")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUni)
                    .IsRequired()
                    .HasColumnName("co_uni")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Subced).HasColumnName("subced");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengOdp)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_odp_art");

                entity.HasOne(d => d.OdpNumNavigation)
                    .WithMany(p => p.RengOdp)
                    .HasForeignKey(d => d.OdpNum)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_odp_spodp");
            });

            modelBuilder.Entity<RengOpg>(entity =>
            {
                entity.HasKey(e => new { e.OrdNum, e.RengNum });

                entity.ToTable("reng_opg");

                entity.HasIndex(e => e.CtaEgre)
                    .HasName("IX_reng_opg");

                entity.HasIndex(e => e.OrdNum)
                    .HasName("IX_reng_opg_2");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("IX_reng_opg_1");

                entity.Property(e => e.OrdNum).HasColumnName("ord_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CtaEgre)
                    .IsRequired()
                    .HasColumnName("cta_egre")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MontoA)
                    .HasColumnName("monto_a")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MontoCo)
                    .HasColumnName("monto_co")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CtaEgreNavigation)
                    .WithMany(p => p.RengOpg)
                    .HasForeignKey(d => d.CtaEgre)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_opg_cta_ingr");
            });

            modelBuilder.Entity<RengOrd>(entity =>
            {
                entity.HasKey(e => new { e.FactNum, e.RengNum })
                    .HasName("reng_ord_reng_ord");

                entity.ToTable("reng_ord");

                entity.HasIndex(e => e.CoAlma)
                    .HasName("ico_alma");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.FactNum)
                    .HasName("fact_num");

                entity.HasIndex(e => e.RengNum)
                    .HasName("reng_num");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1018486707")
                    .IsUnique();

                entity.HasIndex(e => e.TipoImp)
                    .HasName("itipo_imp");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Anulado).HasColumnName("anulado");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CantImp)
                    .HasColumnName("cant_imp")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CantProd)
                    .HasColumnName("cant_prod")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAlma2)
                    .IsRequired()
                    .HasColumnName("co_alma2")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.DesArt)
                    .IsRequired()
                    .HasColumnName("des_art")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FecLote)
                    .HasColumnName("fec_lote")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.ImpProd)
                    .HasColumnName("imp_prod")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MonIlc)
                    .HasColumnName("mon_ilc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.NroLote)
                    .IsRequired()
                    .HasColumnName("nro_lote")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumDoc).HasColumnName("num_doc");

                entity.Property(e => e.NumDoc2).HasColumnName("num_doc2");

                entity.Property(e => e.Otros)
                    .HasColumnName("otros")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente)
                    .HasColumnName("pendiente")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente2)
                    .HasColumnName("pendiente2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcDesc)
                    .IsRequired()
                    .HasColumnName("porc_desc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PrecVta)
                    .HasColumnName("prec_vta")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PrecVta2)
                    .HasColumnName("prec_vta2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.RengDoc).HasColumnName("reng_doc");

                entity.Property(e => e.RengDoc2).HasColumnName("reng_doc2");

                entity.Property(e => e.RengNeto)
                    .HasColumnName("reng_neto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Seleccion).HasColumnName("seleccion");

                entity.Property(e => e.StotalArt)
                    .HasColumnName("stotal_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TipoDoc)
                    .IsRequired()
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoDoc2)
                    .IsRequired()
                    .HasColumnName("tipo_doc2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalDev)
                    .HasColumnName("total_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoAlmaNavigation)
                    .WithMany(p => p.RengOrd)
                    .HasForeignKey(d => d.CoAlma)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_ord_sub_alma");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengOrd)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_ord_art");
            });

            modelBuilder.Entity<RengPag>(entity =>
            {
                entity.HasKey(e => new { e.RengNum, e.CobNum })
                    .HasName("reng_pag_reng_pag");

                entity.ToTable("reng_pag");

                entity.HasIndex(e => e.CobNum)
                    .HasName("pagnum");

                entity.HasIndex(e => e.DocNum)
                    .HasName("doc_num");

                entity.HasIndex(e => e.RengNum)
                    .HasName("reng_num");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1868585745")
                    .IsUnique();

                entity.HasIndex(e => e.TpDocCob)
                    .HasName("itp_doc_co");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.CobNum).HasColumnName("cob_num");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoIslr)
                    .IsRequired()
                    .HasColumnName("co_islr")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoVen)
                    .IsRequired()
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.ComiArt)
                    .HasColumnName("comi_art")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ComiCob)
                    .HasColumnName("comi_cob")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ComiConc)
                    .HasColumnName("comi_conc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ComiLinea)
                    .HasColumnName("comi_linea")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ComiPorc)
                    .HasColumnName("comi_porc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.DocNum).HasColumnName("doc_num");

                entity.Property(e => e.Dppago)
                    .HasColumnName("dppago")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.DppagoTmp)
                    .HasColumnName("dppago_tmp")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.FactIva).HasColumnName("fact_iva");

                entity.Property(e => e.FecCom)
                    .HasColumnName("fec_com")
                    .HasColumnType("smalldatetime");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.ImpPago)
                    .HasColumnName("imp_pago")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Isv)
                    .HasColumnName("isv")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MontCob)
                    .HasColumnName("mont_cob")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MontoDppago)
                    .HasColumnName("monto_dppago")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MontoObj)
                    .HasColumnName("monto_obj")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MontoReten)
                    .HasColumnName("monto_reten")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Neto)
                    .HasColumnName("neto")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.NetoTmp)
                    .HasColumnName("neto_tmp")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.NroFact)
                    .IsRequired()
                    .HasColumnName("nro_fact")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Numcon)
                    .IsRequired()
                    .HasColumnName("numcon")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PorCob)
                    .HasColumnName("por_cob")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PorcAjuC)
                    .HasColumnName("porc_aju_c")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.PorcDesc)
                    .HasColumnName("porc_desc")
                    .HasColumnType("decimal(18, 8)");

                entity.Property(e => e.PorcRetn)
                    .HasColumnName("porc_retn")
                    .HasColumnType("decimal(18, 8)");

                entity.Property(e => e.ProvTer)
                    .IsRequired()
                    .HasColumnName("prov_ter")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.RengNcr)
                    .HasColumnName("reng_ncr")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.RengTer).HasColumnName("reng_ter");

                entity.Property(e => e.RetIva)
                    .HasColumnName("ret_iva")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.SignAjuC)
                    .IsRequired()
                    .HasColumnName("sign_aju_c")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.SinoPago).HasColumnName("sino_pago");

                entity.Property(e => e.SinoReten).HasColumnName("sino_reten");

                entity.Property(e => e.Sustraen)
                    .HasColumnName("sustraen")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TpDocCob)
                    .IsRequired()
                    .HasColumnName("tp_doc_cob")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<RengPed>(entity =>
            {
                entity.HasKey(e => new { e.FactNum, e.RengNum })
                    .HasName("reng_ped_reng_ped");

                entity.ToTable("reng_ped");

                entity.HasIndex(e => e.CoAlma)
                    .HasName("ico_alma");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.FactNum)
                    .HasName("fact_num");

                entity.HasIndex(e => e.RengNum)
                    .HasName("reng_num");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1178487277")
                    .IsUnique();

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Anulado).HasColumnName("anulado");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CantImp)
                    .HasColumnName("cant_imp")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CantProd)
                    .HasColumnName("cant_prod")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAlma2)
                    .IsRequired()
                    .HasColumnName("co_alma2")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.DesArt)
                    .IsRequired()
                    .HasColumnName("des_art")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FecLote)
                    .HasColumnName("fec_lote")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.ImpProd)
                    .HasColumnName("imp_prod")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MonIlc)
                    .HasColumnName("mon_ilc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.NroLote)
                    .IsRequired()
                    .HasColumnName("nro_lote")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumDoc).HasColumnName("num_doc");

                entity.Property(e => e.NumDoc2).HasColumnName("num_doc2");

                entity.Property(e => e.Otros)
                    .HasColumnName("otros")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente)
                    .HasColumnName("pendiente")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente2)
                    .HasColumnName("pendiente2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcDesc)
                    .IsRequired()
                    .HasColumnName("porc_desc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PrecVta)
                    .HasColumnName("prec_vta")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PrecVta2)
                    .HasColumnName("prec_vta2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.RengDoc).HasColumnName("reng_doc");

                entity.Property(e => e.RengDoc2).HasColumnName("reng_doc2");

                entity.Property(e => e.RengNeto)
                    .HasColumnName("reng_neto")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Seleccion).HasColumnName("seleccion");

                entity.Property(e => e.Serialp)
                    .IsRequired()
                    .HasColumnName("serialp")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.StotalArt)
                    .HasColumnName("stotal_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TipoDoc)
                    .IsRequired()
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoDoc2)
                    .IsRequired()
                    .HasColumnName("tipo_doc2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalDev)
                    .HasColumnName("total_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Valido).HasColumnName("valido");

                entity.HasOne(d => d.CoAlmaNavigation)
                    .WithMany(p => p.RengPed)
                    .HasForeignKey(d => d.CoAlma)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_ped_sub_alma");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengPed)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_ped_art");

                entity.HasOne(d => d.TipoImpNavigation)
                    .WithMany(p => p.RengPed)
                    .HasForeignKey(d => d.TipoImp)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_ped_tabulado");
            });

            modelBuilder.Entity<RengPla>(entity =>
            {
                entity.HasKey(e => new { e.PlaNum, e.RengNum });

                entity.ToTable("reng_pla");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ireng_pla_co_art");

                entity.HasIndex(e => e.RengNum)
                    .HasName("ireng_pla_reng_num");

                entity.Property(e => e.PlaNum).HasColumnName("pla_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.D1)
                    .HasColumnName("d1")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.D10)
                    .HasColumnName("d10")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.D11)
                    .HasColumnName("d11")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.D12)
                    .HasColumnName("d12")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.D2)
                    .HasColumnName("d2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.D3)
                    .HasColumnName("d3")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.D4)
                    .HasColumnName("d4")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.D5)
                    .HasColumnName("d5")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.D6)
                    .HasColumnName("d6")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.D7)
                    .HasColumnName("d7")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.D8)
                    .HasColumnName("d8")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.D9)
                    .HasColumnName("d9")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Enero).HasColumnName("enero");

                entity.Property(e => e.M1)
                    .HasColumnName("m1")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.M10)
                    .HasColumnName("m10")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.M11)
                    .HasColumnName("m11")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.M12)
                    .HasColumnName("m12")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.M2)
                    .HasColumnName("m2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.M3)
                    .HasColumnName("m3")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.M4)
                    .HasColumnName("m4")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.M5)
                    .HasColumnName("m5")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.M6)
                    .HasColumnName("m6")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.M7)
                    .HasColumnName("m7")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.M8)
                    .HasColumnName("m8")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.M9)
                    .HasColumnName("m9")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Xstock).HasColumnName("xstock");

                entity.HasOne(d => d.PlaNumNavigation)
                    .WithMany(p => p.RengPla)
                    .HasForeignKey(d => d.PlaNum)
                    .HasConstraintName("FK_reng_pla_spplanenc");
            });

            modelBuilder.Entity<RengPlc>(entity =>
            {
                entity.HasKey(e => new { e.FactNum, e.RengNum })
                    .HasName("reng_plc_reng_plc");

                entity.ToTable("reng_plc");

                entity.HasIndex(e => e.CoAlma)
                    .HasName("ico_alma");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.FactNum)
                    .HasName("fact_num");

                entity.HasIndex(e => e.RengNum)
                    .HasName("reng_num");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1985535999")
                    .IsUnique();

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Anulado).HasColumnName("anulado");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CantImp)
                    .HasColumnName("cant_imp")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CantProd)
                    .HasColumnName("cant_prod")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAlma2)
                    .IsRequired()
                    .HasColumnName("co_alma2")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.DesArt)
                    .IsRequired()
                    .HasColumnName("des_art")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FecLote)
                    .HasColumnName("fec_lote")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.ImpProd)
                    .HasColumnName("imp_prod")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MonIlc)
                    .HasColumnName("mon_ilc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.NroLote)
                    .IsRequired()
                    .HasColumnName("nro_lote")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumDoc).HasColumnName("num_doc");

                entity.Property(e => e.NumDoc2).HasColumnName("num_doc2");

                entity.Property(e => e.Otros)
                    .HasColumnName("otros")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente)
                    .HasColumnName("pendiente")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente2)
                    .HasColumnName("pendiente2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcDesc)
                    .IsRequired()
                    .HasColumnName("porc_desc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PrecVta)
                    .HasColumnName("prec_vta")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PrecVta2)
                    .HasColumnName("prec_vta2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.RengDoc).HasColumnName("reng_doc");

                entity.Property(e => e.RengDoc2).HasColumnName("reng_doc2");

                entity.Property(e => e.RengNeto)
                    .HasColumnName("reng_neto")
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Seleccion).HasColumnName("seleccion");

                entity.Property(e => e.StotalArt)
                    .HasColumnName("stotal_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TipoDoc)
                    .IsRequired()
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoDoc2)
                    .IsRequired()
                    .HasColumnName("tipo_doc2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalDev)
                    .HasColumnName("total_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoAlmaNavigation)
                    .WithMany(p => p.RengPlc)
                    .HasForeignKey(d => d.CoAlma)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_plc_sub_alma");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengPlc)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_plc_art");
            });

            modelBuilder.Entity<RengPlv>(entity =>
            {
                entity.HasKey(e => new { e.FactNum, e.RengNum })
                    .HasName("reng_plv_reng_plv");

                entity.ToTable("reng_plv");

                entity.HasIndex(e => e.CoAlma)
                    .HasName("ico_alma");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.FactNum)
                    .HasName("fact_num");

                entity.HasIndex(e => e.RengNum)
                    .HasName("reng_num");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1299535999")
                    .IsUnique();

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Anulado).HasColumnName("anulado");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CantImp)
                    .HasColumnName("cant_imp")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CantProd)
                    .HasColumnName("cant_prod")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAlma2)
                    .IsRequired()
                    .HasColumnName("co_alma2")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.DesArt)
                    .IsRequired()
                    .HasColumnName("des_art")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FecLote)
                    .HasColumnName("fec_lote")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.ImpProd)
                    .HasColumnName("imp_prod")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MonIlc)
                    .HasColumnName("mon_ilc")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MontoDev)
                    .HasColumnName("monto_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.NroLote)
                    .IsRequired()
                    .HasColumnName("nro_lote")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumDoc).HasColumnName("num_doc");

                entity.Property(e => e.NumDoc2).HasColumnName("num_doc2");

                entity.Property(e => e.Otros)
                    .HasColumnName("otros")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente)
                    .HasColumnName("pendiente")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendiente2)
                    .HasColumnName("pendiente2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PorcDesc)
                    .IsRequired()
                    .HasColumnName("porc_desc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PrecVta)
                    .HasColumnName("prec_vta")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.PrecVta2)
                    .HasColumnName("prec_vta2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.RengDoc).HasColumnName("reng_doc");

                entity.Property(e => e.RengDoc2).HasColumnName("reng_doc2");

                entity.Property(e => e.RengNeto)
                    .HasColumnName("reng_neto")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Seleccion).HasColumnName("seleccion");

                entity.Property(e => e.StotalArt)
                    .HasColumnName("stotal_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TipoDoc)
                    .IsRequired()
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoDoc2)
                    .IsRequired()
                    .HasColumnName("tipo_doc2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalDev)
                    .HasColumnName("total_dev")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoAlmaNavigation)
                    .WithMany(p => p.RengPlv)
                    .HasForeignKey(d => d.CoAlma)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_plv_sub_alma");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengPlv)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_plv_art");
            });

            modelBuilder.Entity<RengPve>(entity =>
            {
                entity.HasKey(e => new { e.FactNum, e.RengNum });

                entity.ToTable("reng_pve");

                entity.HasIndex(e => e.FactNum)
                    .HasName("IX_reng_pve");

                entity.HasIndex(e => e.RengNum)
                    .HasName("IX_reng_pve_1");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_112124545");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Anulado).HasColumnName("anulado");

                entity.Property(e => e.CantImp).HasColumnName("cant_imp");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAlma2)
                    .IsRequired()
                    .HasColumnName("co_alma2")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CosProOm).HasColumnName("cos_pro_om");

                entity.Property(e => e.CosProUn).HasColumnName("cos_pro_un");

                entity.Property(e => e.DesArt)
                    .IsRequired()
                    .HasColumnName("des_art")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FecLote)
                    .HasColumnName("fec_lote")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Isv).HasColumnName("isv");

                entity.Property(e => e.MonIlc).HasColumnName("mon_ilc");

                entity.Property(e => e.MontoDev).HasColumnName("monto_dev");

                entity.Property(e => e.NroLote)
                    .IsRequired()
                    .HasColumnName("nro_lote")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumDoc).HasColumnName("num_doc");

                entity.Property(e => e.NumDoc2).HasColumnName("num_doc2");

                entity.Property(e => e.Otros).HasColumnName("otros");

                entity.Property(e => e.Pendiente).HasColumnName("pendiente");

                entity.Property(e => e.Pendiente2).HasColumnName("pendiente2");

                entity.Property(e => e.PorcDesc)
                    .IsRequired()
                    .HasColumnName("porc_desc")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PrecVta).HasColumnName("prec_vta");

                entity.Property(e => e.PrecVta2).HasColumnName("prec_vta2");

                entity.Property(e => e.RengDoc).HasColumnName("reng_doc");

                entity.Property(e => e.RengDoc2).HasColumnName("reng_doc2");

                entity.Property(e => e.RengNeto).HasColumnName("reng_neto");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Seleccion).HasColumnName("seleccion");

                entity.Property(e => e.StotalArt).HasColumnName("stotal_art");

                entity.Property(e => e.TipoDoc)
                    .IsRequired()
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoDoc2)
                    .IsRequired()
                    .HasColumnName("tipo_doc2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoImp)
                    .IsRequired()
                    .HasColumnName("tipo_imp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TotalArt).HasColumnName("total_art");

                entity.Property(e => e.TotalDev).HasColumnName("total_dev");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UltCosOm).HasColumnName("ult_cos_om");

                entity.Property(e => e.UltCosUn).HasColumnName("ult_cos_un");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<RengReq>(entity =>
            {
                entity.HasKey(e => new { e.ReqNum, e.RengNum });

                entity.ToTable("reng_req");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.NroLote)
                    .HasName("nro_lote");

                entity.HasIndex(e => e.RengNum)
                    .HasName("rengnum");

                entity.HasIndex(e => e.ReqNum)
                    .HasName("req_num");

                entity.HasIndex(e => new { e.ReqNum, e.RengNum })
                    .HasName("ireq_reng");

                entity.Property(e => e.ReqNum).HasColumnName("req_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.CantCom)
                    .HasColumnName("cant_com")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CantReq)
                    .HasColumnName("cant_req")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CantSol)
                    .HasColumnName("cant_sol")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CantSol2)
                    .HasColumnName("cant_sol2")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.CantXsol)
                    .HasColumnName("cant_xsol")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoTar)
                    .IsRequired()
                    .HasColumnName("co_tar")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FecLote)
                    .HasColumnName("fec_lote")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Multilote)
                    .IsRequired()
                    .HasColumnName("multilote")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NroLote)
                    .IsRequired()
                    .HasColumnName("nro_lote")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumDoc2).HasColumnName("num_doc2");

                entity.Property(e => e.Pendiente2)
                    .HasColumnName("pendiente2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.RengDoc2).HasColumnName("reng_doc2");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.StotalArt)
                    .HasColumnName("stotal_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Subced).HasColumnName("subced");

                entity.Property(e => e.SuniVenta)
                    .IsRequired()
                    .HasColumnName("suni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Sustituto).HasColumnName("sustituto");

                entity.Property(e => e.TipoDoc2)
                    .IsRequired()
                    .HasColumnName("tipo_doc2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalArt2)
                    .HasColumnName("total_art2")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<RengRes>(entity =>
            {
                entity.HasKey(e => new { e.RmaNum, e.RengNum });

                entity.ToTable("reng_res");

                entity.HasIndex(e => e.CoAlma)
                    .HasName("ico_alma");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.RengNum)
                    .HasName("reng_num");

                entity.HasIndex(e => e.RmaNum)
                    .HasName("rma_num");

                entity.Property(e => e.RmaNum).HasColumnName("rma_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesArt)
                    .IsRequired()
                    .HasColumnName("des_art")
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.StotalArt).HasColumnName("stotal_art");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasColumnName("tipo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TotalArt).HasColumnName("total_art");

                entity.Property(e => e.Unidad)
                    .IsRequired()
                    .HasColumnName("unidad")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoAlmaNavigation)
                    .WithMany(p => p.RengRes)
                    .HasForeignKey(d => d.CoAlma)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_res_sub_alma");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengRes)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_res_art");

                entity.HasOne(d => d.RmaNumNavigation)
                    .WithMany(p => p.RengRes)
                    .HasForeignKey(d => d.RmaNum)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_res_rma_res");
            });

            modelBuilder.Entity<RengRmc>(entity =>
            {
                entity.HasKey(e => new { e.RmaNum, e.RengNum });

                entity.ToTable("reng_rmc");

                entity.HasIndex(e => e.RengNum)
                    .HasName("reng_num");

                entity.HasIndex(e => e.RmaNum)
                    .HasName("rma_num");

                entity.HasIndex(e => new { e.RmaNum, e.Serial })
                    .HasName("reng_rmc1");

                entity.HasIndex(e => new { e.RmaNumPr, e.Serial })
                    .HasName("reng_rmc2");

                entity.Property(e => e.RmaNum).HasColumnName("rma_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoFalla)
                    .IsRequired()
                    .HasColumnName("co_falla")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoProv)
                    .IsRequired()
                    .HasColumnName("co_prov")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoReem)
                    .IsRequired()
                    .HasColumnName("co_reem")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoRevi)
                    .IsRequired()
                    .HasColumnName("co_revi")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoTec)
                    .IsRequired()
                    .HasColumnName("co_tec")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesArt)
                    .IsRequired()
                    .HasColumnName("des_art")
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DocNumS).HasColumnName("doc_num_s");

                entity.Property(e => e.DocTipS)
                    .IsRequired()
                    .HasColumnName("doc_tip_s")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FecDocS)
                    .HasColumnName("fec_doc_s")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecEntreg)
                    .HasColumnName("fec_entreg")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecVenc)
                    .HasColumnName("fec_venc")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.NumDoc).HasColumnName("num_doc");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.RmaNumPr).HasColumnName("rma_num_pr");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Seleccion).HasColumnName("seleccion");

                entity.Property(e => e.Serial)
                    .IsRequired()
                    .HasColumnName("serial")
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasColumnName("status")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TiempoGar).HasColumnName("tiempo_gar");

                entity.Property(e => e.TipoDoc)
                    .IsRequired()
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Treemplazo)
                    .IsRequired()
                    .HasColumnName("treemplazo")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoAlmaNavigation)
                    .WithMany(p => p.RengRmc)
                    .HasForeignKey(d => d.CoAlma)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_rmc_sub_alma");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengRmc)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_rmc_art");

                entity.HasOne(d => d.CoReemNavigation)
                    .WithMany(p => p.RengRmc)
                    .HasForeignKey(d => d.CoReem)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_rmc_rma_reem");

                entity.HasOne(d => d.CoReviNavigation)
                    .WithMany(p => p.RengRmc)
                    .HasForeignKey(d => d.CoRevi)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_rmc_rma_revi");

                entity.HasOne(d => d.CoTecNavigation)
                    .WithMany(p => p.RengRmc)
                    .HasForeignKey(d => d.CoTec)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_rmc_tecnico");

                entity.HasOne(d => d.RmaNumNavigation)
                    .WithMany(p => p.RengRmc)
                    .HasForeignKey(d => d.RmaNum)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_rmc_rma_cli");
            });

            modelBuilder.Entity<RengRmp>(entity =>
            {
                entity.HasKey(e => new { e.RengNum, e.RmaNum })
                    .HasName("reng_rmp_reng_rmp");

                entity.ToTable("reng_rmp");

                entity.HasIndex(e => e.RengNum)
                    .HasName("reng_num");

                entity.HasIndex(e => e.RmaNum)
                    .HasName("rma_num");

                entity.HasIndex(e => new { e.RmaNum, e.CoSucu, e.Serial })
                    .HasName("reng_rmp1");

                entity.HasIndex(e => new { e.RmaNum, e.Serial, e.CoArt })
                    .HasName("reng_rmp2");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.RmaNum).HasColumnName("rma_num");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoFalla)
                    .IsRequired()
                    .HasColumnName("co_falla")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoReem)
                    .IsRequired()
                    .HasColumnName("co_reem")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesArt)
                    .IsRequired()
                    .HasColumnName("des_art")
                    .HasMaxLength(120)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DocNumE).HasColumnName("doc_num_e");

                entity.Property(e => e.DocTipE)
                    .IsRequired()
                    .HasColumnName("doc_tip_e")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FecDocE)
                    .HasColumnName("fec_doc_e")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.NumDoc).HasColumnName("num_doc");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Seleccion).HasColumnName("seleccion");

                entity.Property(e => e.Serial)
                    .IsRequired()
                    .HasColumnName("serial")
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasColumnName("status")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoDoc)
                    .IsRequired()
                    .HasColumnName("tipo_doc")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Treemplazo)
                    .IsRequired()
                    .HasColumnName("treemplazo")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoAlmaNavigation)
                    .WithMany(p => p.RengRmp)
                    .HasForeignKey(d => d.CoAlma)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_rmp_sub_alma");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengRmp)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_rmp_art");

                entity.HasOne(d => d.CoReemNavigation)
                    .WithMany(p => p.RengRmp)
                    .HasForeignKey(d => d.CoReem)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_rmp_rma_reep");

                entity.HasOne(d => d.RmaNumNavigation)
                    .WithMany(p => p.RengRmp)
                    .HasForeignKey(d => d.RmaNum)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_rmp_rma_prov");
            });

            modelBuilder.Entity<RengTab>(entity =>
            {
                entity.HasKey(e => new { e.CoTab, e.RengNum });

                entity.ToTable("reng_tab");

                entity.HasIndex(e => e.CoTab)
                    .HasName("IX_reng_tab_1");

                entity.HasIndex(e => e.IslrDes)
                    .HasName("IX_reng_tab");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("IX_reng_tab_2");

                entity.Property(e => e.CoTab).HasColumnName("co_tab");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.CoIslr)
                    .IsRequired()
                    .HasColumnName("co_islr")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.IslrDes)
                    .IsRequired()
                    .HasColumnName("islr_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PorcImp).HasColumnName("porc_imp");

                entity.Property(e => e.PorcRet).HasColumnName("porc_ret");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Sustraen).HasColumnName("sustraen");

                entity.HasOne(d => d.CoIslrNavigation)
                    .WithMany(p => p.RengTab)
                    .HasForeignKey(d => d.CoIslr)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_tab_con_islr");
            });

            modelBuilder.Entity<RengTar>(entity =>
            {
                entity.HasKey(e => new { e.CoTar, e.RengNum });

                entity.ToTable("reng_tar");

                entity.Property(e => e.CoTar)
                    .HasColumnName("co_tar")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.CoMaq)
                    .IsRequired()
                    .HasColumnName("co_maq")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.HasOne(d => d.CoMaqNavigation)
                    .WithMany(p => p.RengTar)
                    .HasForeignKey(d => d.CoMaq)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_tar_spmaq");

                entity.HasOne(d => d.CoTarNavigation)
                    .WithMany(p => p.RengTar)
                    .HasForeignKey(d => d.CoTar)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_tar_sptar");
            });

            modelBuilder.Entity<RengTax>(entity =>
            {
                entity.HasKey(e => new { e.TaxNum, e.RengNum });

                entity.ToTable("Reng_tax");

                entity.HasIndex(e => e.RengNum)
                    .HasName("Reng_num");

                entity.HasIndex(e => e.TaxId)
                    .HasName("Tax_id");

                entity.HasIndex(e => e.TaxNum)
                    .HasName("Tax_Num");

                entity.Property(e => e.TaxNum).HasColumnName("Tax_Num");

                entity.Property(e => e.RengNum).HasColumnName("Reng_num");

                entity.Property(e => e.Limite).HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Porc1).HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Porc2).HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Rowguid).HasDefaultValueSql("(newid())");

                entity.Property(e => e.Tasa1).HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasa2).HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasa3).HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TaxId)
                    .IsRequired()
                    .HasColumnName("Tax_id")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.Tax)
                    .WithMany(p => p.RengTax)
                    .HasForeignKey(d => d.TaxId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Reng_tax_Tax");

                entity.HasOne(d => d.TaxNumNavigation)
                    .WithMany(p => p.RengTax)
                    .HasForeignKey(d => d.TaxNum)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Reng_tax_Tax_enc");
            });

            modelBuilder.Entity<RengTcp>(entity =>
            {
                entity.HasKey(e => new { e.RengNum, e.CobNum })
                    .HasName("reng_tcp_reng_tcp");

                entity.ToTable("reng_tcp");

                entity.HasIndex(e => e.CobNum)
                    .HasName("pagnum");

                entity.HasIndex(e => e.RengNum)
                    .HasName("reng_num");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1274487619")
                    .IsUnique();

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.CobNum).HasColumnName("cob_num");

                entity.Property(e => e.Banco)
                    .IsRequired()
                    .HasColumnName("banco")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CodCaja)
                    .IsRequired()
                    .HasColumnName("cod_caja")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesCaja)
                    .IsRequired()
                    .HasColumnName("des_caja")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Devuelto).HasColumnName("devuelto");

                entity.Property(e => e.FecCheq)
                    .HasColumnName("fec_cheq")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MontDoc)
                    .HasColumnName("mont_doc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MontTmp)
                    .HasColumnName("mont_tmp")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Movi).HasColumnName("movi");

                entity.Property(e => e.NombreBan)
                    .IsRequired()
                    .HasColumnName("nombre_ban")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumDoc)
                    .IsRequired()
                    .HasColumnName("num_doc")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Numero)
                    .IsRequired()
                    .HasColumnName("numero")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TipCob)
                    .IsRequired()
                    .HasColumnName("tip_cob")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<RengTip>(entity =>
            {
                entity.HasKey(e => new { e.RengNum, e.CobNum })
                    .HasName("reng_tip_reng_tip");

                entity.ToTable("reng_tip");

                entity.HasIndex(e => e.CobNum)
                    .HasName("cobnum");

                entity.HasIndex(e => e.Movi)
                    .HasName("IX_reng_tip");

                entity.HasIndex(e => e.RengNum)
                    .HasName("reng_num");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1338487847")
                    .IsUnique();

                entity.HasIndex(e => new { e.CobNum, e.TipCob, e.NumDoc, e.MontDoc })
                    .HasName("IX_mont_doc");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.CobNum).HasColumnName("cob_num");

                entity.Property(e => e.Banco)
                    .IsRequired()
                    .HasColumnName("banco")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Clave)
                    .IsRequired()
                    .HasColumnName("clave")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.CodCaja)
                    .IsRequired()
                    .HasColumnName("cod_caja")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesCaja)
                    .IsRequired()
                    .HasColumnName("des_caja")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Devuelto).HasColumnName("devuelto");

                entity.Property(e => e.FecCheq)
                    .HasColumnName("fec_cheq")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.MontDoc)
                    .HasColumnName("mont_doc")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.MontTmp)
                    .HasColumnName("mont_tmp")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Movi).HasColumnName("movi");

                entity.Property(e => e.NombreBan)
                    .IsRequired()
                    .HasColumnName("nombre_ban")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumDoc)
                    .IsRequired()
                    .HasColumnName("num_doc")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Numero)
                    .IsRequired()
                    .HasColumnName("numero")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Operador)
                    .IsRequired()
                    .HasColumnName("operador")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((0)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TipCob)
                    .IsRequired()
                    .HasColumnName("tip_cob")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<RengTra>(entity =>
            {
                entity.HasKey(e => new { e.TrasNum, e.RengNum })
                    .HasName("reng_tra_reng_tra");

                entity.ToTable("reng_tra");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.RengNum)
                    .HasName("rengnum");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1402488075")
                    .IsUnique();

                entity.HasIndex(e => e.TrasNum)
                    .HasName("tras_num");

                entity.HasIndex(e => new { e.TrasNum, e.RengNum, e.Produccion })
                    .HasName("itras_reng_prod");

                entity.Property(e => e.TrasNum).HasColumnName("tras_num");

                entity.Property(e => e.RengNum).HasColumnName("reng_num");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CantSol).HasColumnName("cant_sol");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CosProOm)
                    .HasColumnName("cos_pro_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CosProUn)
                    .HasColumnName("cos_pro_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FecLote)
                    .HasColumnName("fec_lote")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.NroLote)
                    .IsRequired()
                    .HasColumnName("nro_lote")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumDoc2).HasColumnName("num_doc2");

                entity.Property(e => e.Pendiente2)
                    .HasColumnName("pendiente2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Produccion).HasColumnName("produccion");

                entity.Property(e => e.RengDoc2).HasColumnName("reng_doc2");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.StotalArt)
                    .HasColumnName("stotal_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.SuniVenta)
                    .IsRequired()
                    .HasColumnName("suni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoDoc2)
                    .IsRequired()
                    .HasColumnName("tipo_doc2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TotalArt)
                    .HasColumnName("total_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UltCosOm)
                    .HasColumnName("ult_cos_om")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UltCosUn)
                    .HasColumnName("ult_cos_un")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.RengTra)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_reng_tra_art");
            });

            modelBuilder.Entity<Rentab>(entity =>
            {
                entity.HasKey(e => new { e.TipoRent, e.TipoVen, e.CoRent })
                    .HasName("rentab_co_rent");

                entity.ToTable("rentab");

                entity.HasIndex(e => e.CoRent)
                    .HasName("ico_rent");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_716581641")
                    .IsUnique();

                entity.HasIndex(e => e.TipoRent)
                    .HasName("itipo_rent");

                entity.HasIndex(e => e.TipoVen)
                    .HasName("itipo_ven");

                entity.Property(e => e.TipoRent)
                    .HasColumnName("tipo_rent")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoVen)
                    .HasColumnName("tipo_ven")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoRent)
                    .HasColumnName("co_rent")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Hasta1)
                    .HasColumnName("hasta1")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Hasta2)
                    .HasColumnName("hasta2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Hasta3)
                    .HasColumnName("hasta3")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Hasta4)
                    .HasColumnName("hasta4")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Hasta5)
                    .HasColumnName("hasta5")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Porc1)
                    .HasColumnName("porc1")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Porc2)
                    .HasColumnName("porc2")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Porc3)
                    .HasColumnName("porc3")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Porc4)
                    .HasColumnName("porc4")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Porc5)
                    .HasColumnName("porc5")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Porc6)
                    .HasColumnName("porc6")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoSucuNavigation)
                    .WithMany(p => p.Rentab)
                    .HasForeignKey(d => d.CoSucu)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_rentab_almacen");
            });

            modelBuilder.Entity<Reportes>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("reportes");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_693577509")
                    .IsUnique();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(130)
                    .IsUnicode(false);

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");
            });

            modelBuilder.Entity<RmaAmb>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("rma_amb");

                entity.HasIndex(e => e.AmbRma)
                    .HasName("amb_rma");

                entity.HasIndex(e => new { e.AmbUsua, e.AmbRma })
                    .HasName("amb_usua")
                    .IsUnique();

                entity.Property(e => e.AmbRma)
                    .IsRequired()
                    .HasColumnName("amb_rma")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.AmbUsua)
                    .IsRequired()
                    .HasColumnName("amb_usua")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.BAnular).HasColumnName("b_anular");

                entity.Property(e => e.BArt).HasColumnName("b_art");

                entity.Property(e => e.BClien).HasColumnName("b_clien");

                entity.Property(e => e.BImportar).HasColumnName("b_importar");

                entity.Property(e => e.BProcesar).HasColumnName("b_procesar");

                entity.Property(e => e.BReversar).HasColumnName("b_reversar");

                entity.Property(e => e.BSeriales).HasColumnName("b_seriales");

                entity.Property(e => e.CambArt).HasColumnName("camb_art");

                entity.Property(e => e.CambDoc).HasColumnName("camb_doc");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Chdev).HasColumnName("chdev");

                entity.Property(e => e.CoCli).HasColumnName("co_cli");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoTran).HasColumnName("co_tran");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DcoCli).HasColumnName("dco_cli");

                entity.Property(e => e.DcoTran).HasColumnName("dco_tran");

                entity.Property(e => e.Descrip).HasColumnName("descrip");

                entity.Property(e => e.Dmoneda).HasColumnName("dmoneda");

                entity.Property(e => e.Dreng1).HasColumnName("dreng_1");

                entity.Property(e => e.Dreng2).HasColumnName("dreng_2");

                entity.Property(e => e.Dreng3).HasColumnName("dreng_3");

                entity.Property(e => e.EntcArt).HasColumnName("entc_art");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEmis).HasColumnName("fec_emis");

                entity.Property(e => e.Fvenc).HasColumnName("fvenc");

                entity.Property(e => e.GarVenc).HasColumnName("gar_venc");

                entity.Property(e => e.Listar).HasColumnName("listar");

                entity.Property(e => e.Moneda).HasColumnName("moneda");

                entity.Property(e => e.NroEntPr).HasColumnName("nro_ent_pr");

                entity.Property(e => e.NumListar).HasColumnName("num_listar");

                entity.Property(e => e.Numcopia).HasColumnName("numcopia");

                entity.Property(e => e.PnvoProv).HasColumnName("pnvo_prov");

                entity.Property(e => e.Poscol01).HasColumnName("poscol01");

                entity.Property(e => e.Poscol02).HasColumnName("poscol02");

                entity.Property(e => e.Poscol03).HasColumnName("poscol03");

                entity.Property(e => e.Poscol04).HasColumnName("poscol04");

                entity.Property(e => e.Poscol05).HasColumnName("poscol05");

                entity.Property(e => e.Poscol06).HasColumnName("poscol06");

                entity.Property(e => e.Poscol07).HasColumnName("poscol07");

                entity.Property(e => e.Poscol08).HasColumnName("poscol08");

                entity.Property(e => e.Poscol09).HasColumnName("poscol09");

                entity.Property(e => e.Poscol10).HasColumnName("poscol10");

                entity.Property(e => e.Poscol11).HasColumnName("poscol11");

                entity.Property(e => e.Poscol12).HasColumnName("poscol12");

                entity.Property(e => e.Poscol13).HasColumnName("poscol13");

                entity.Property(e => e.Poscol14).HasColumnName("poscol14");

                entity.Property(e => e.Poscol15).HasColumnName("poscol15");

                entity.Property(e => e.Poscol16).HasColumnName("poscol16");

                entity.Property(e => e.Poscol17).HasColumnName("poscol17");

                entity.Property(e => e.Poscol18).HasColumnName("poscol18");

                entity.Property(e => e.Poscol19).HasColumnName("poscol19");

                entity.Property(e => e.Poscol20).HasColumnName("poscol20");

                entity.Property(e => e.Poscol21).HasColumnName("poscol21");

                entity.Property(e => e.Poscol22).HasColumnName("poscol22");

                entity.Property(e => e.Pseriales).HasColumnName("pseriales");

                entity.Property(e => e.Reng1).HasColumnName("reng_1");

                entity.Property(e => e.Reng2).HasColumnName("reng_2");

                entity.Property(e => e.Reng3).HasColumnName("reng_3");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.RmaNum).HasColumnName("rma_num");

                entity.Property(e => e.RmaProv).HasColumnName("rma_prov");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Saldo).HasColumnName("saldo");

                entity.Property(e => e.SerNulo).HasColumnName("ser_nulo");

                entity.Property(e => e.SinDocu).HasColumnName("sin_docu");

                entity.Property(e => e.Tamcol01).HasColumnName("tamcol01");

                entity.Property(e => e.Tamcol02).HasColumnName("tamcol02");

                entity.Property(e => e.Tamcol03).HasColumnName("tamcol03");

                entity.Property(e => e.Tamcol04).HasColumnName("tamcol04");

                entity.Property(e => e.Tamcol05).HasColumnName("tamcol05");

                entity.Property(e => e.Tamcol06).HasColumnName("tamcol06");

                entity.Property(e => e.Tamcol07).HasColumnName("tamcol07");

                entity.Property(e => e.Tamcol08).HasColumnName("tamcol08");

                entity.Property(e => e.Tamcol09).HasColumnName("tamcol09");

                entity.Property(e => e.Tamcol10).HasColumnName("tamcol10");

                entity.Property(e => e.Tamcol11).HasColumnName("tamcol11");

                entity.Property(e => e.Tamcol12).HasColumnName("tamcol12");

                entity.Property(e => e.Tamcol13).HasColumnName("tamcol13");

                entity.Property(e => e.Tamcol14).HasColumnName("tamcol14");

                entity.Property(e => e.Tamcol15).HasColumnName("tamcol15");

                entity.Property(e => e.Tamcol16).HasColumnName("tamcol16");

                entity.Property(e => e.Tamcol17).HasColumnName("tamcol17");

                entity.Property(e => e.Tamcol18).HasColumnName("tamcol18");

                entity.Property(e => e.Tamcol19).HasColumnName("tamcol19");

                entity.Property(e => e.Tamcol20).HasColumnName("tamcol20");

                entity.Property(e => e.Tamcol21).HasColumnName("tamcol21");

                entity.Property(e => e.Tamcol22).HasColumnName("tamcol22");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.VcoCli)
                    .IsRequired()
                    .HasColumnName("vco_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.VcoTran)
                    .IsRequired()
                    .HasColumnName("vco_tran")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Vmoneda)
                    .IsRequired()
                    .HasColumnName("vmoneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Vreng1)
                    .IsRequired()
                    .HasColumnName("vreng_1")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Vreng2)
                    .IsRequired()
                    .HasColumnName("vreng_2")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Vreng3)
                    .IsRequired()
                    .HasColumnName("vreng_3")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<RmaCli>(entity =>
            {
                entity.HasKey(e => e.RmaNum)
                    .HasName("rma_cli_rma_num");

                entity.ToTable("rma_cli");

                entity.Property(e => e.RmaNum)
                    .HasColumnName("rma_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Nit)
                    .IsRequired()
                    .HasColumnName("nit")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasColumnName("nombre")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rif)
                    .IsRequired()
                    .HasColumnName("rif")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasColumnName("status")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Transfe)
                    .IsRequired()
                    .HasColumnName("transfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoCliNavigation)
                    .WithMany(p => p.RmaCli)
                    .HasForeignKey(d => d.CoCli)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_rma_cli_clientes");
            });

            modelBuilder.Entity<RmaEntc>(entity =>
            {
                entity.HasKey(e => e.RmaNum)
                    .HasName("rma_entc_rma_num");

                entity.ToTable("rma_entc");

                entity.Property(e => e.RmaNum)
                    .HasColumnName("rma_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.AjuAdm).HasColumnName("aju_adm");

                entity.Property(e => e.AjuRma).HasColumnName("aju_rma");

                entity.Property(e => e.Anulada).HasColumnName("anulada");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoCli)
                    .IsRequired()
                    .HasColumnName("co_cli")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Nit)
                    .IsRequired()
                    .HasColumnName("nit")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Nombre)
                    .IsRequired()
                    .HasColumnName("nombre")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rif)
                    .IsRequired()
                    .HasColumnName("rif")
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Transfe)
                    .IsRequired()
                    .HasColumnName("transfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoCliNavigation)
                    .WithMany(p => p.RmaEntc)
                    .HasForeignKey(d => d.CoCli)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_rma_entc_clientes");

                entity.HasOne(d => d.MonedaNavigation)
                    .WithMany(p => p.RmaEntc)
                    .HasForeignKey(d => d.Moneda)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_rma_entc_moneda");
            });

            modelBuilder.Entity<RmaEntp>(entity =>
            {
                entity.HasKey(e => e.RmaNum)
                    .HasName("rma_entp_rma_num");

                entity.ToTable("rma_entp");

                entity.Property(e => e.RmaNum)
                    .HasColumnName("rma_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Anulada).HasColumnName("anulada");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoProv)
                    .IsRequired()
                    .HasColumnName("co_prov")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.EntProv)
                    .IsRequired()
                    .HasColumnName("ent_prov")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Moneda)
                    .IsRequired()
                    .HasColumnName("moneda")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Transfe)
                    .IsRequired()
                    .HasColumnName("transfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoProvNavigation)
                    .WithMany(p => p.RmaEntp)
                    .HasForeignKey(d => d.CoProv)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_rma_entp_prov");

                entity.HasOne(d => d.MonedaNavigation)
                    .WithMany(p => p.RmaEntp)
                    .HasForeignKey(d => d.Moneda)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_rma_entp_moneda");
            });

            modelBuilder.Entity<RmaProv>(entity =>
            {
                entity.HasKey(e => e.RmaNum)
                    .HasName("rma_prov_rma_num");

                entity.ToTable("rma_prov");

                entity.HasIndex(e => e.CoProv)
                    .HasName("co_prov");

                entity.HasIndex(e => e.FecEmis)
                    .HasName("fec_emis");

                entity.HasIndex(e => e.Status)
                    .HasName("status");

                entity.HasIndex(e => new { e.RmaNum, e.Status })
                    .HasName("rma_prov3");

                entity.HasIndex(e => new { e.CoProv, e.CoSucu, e.Status })
                    .HasName("rma_prov1");

                entity.HasIndex(e => new { e.RmaNum, e.CoSucu, e.Status })
                    .HasName("rma_prov2");

                entity.Property(e => e.RmaNum)
                    .HasColumnName("rma_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoProv)
                    .IsRequired()
                    .HasColumnName("co_prov")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoTran)
                    .IsRequired()
                    .HasColumnName("co_tran")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.RmaProv1)
                    .IsRequired()
                    .HasColumnName("rma_prov")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasColumnName("status")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Transfe)
                    .IsRequired()
                    .HasColumnName("transfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoProvNavigation)
                    .WithMany(p => p.RmaProv)
                    .HasForeignKey(d => d.CoProv)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_rma_prov_prov");

                entity.HasOne(d => d.CoTranNavigation)
                    .WithMany(p => p.RmaProv)
                    .HasForeignKey(d => d.CoTran)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_rma_prov_transpor");
            });

            modelBuilder.Entity<RmaReem>(entity =>
            {
                entity.HasKey(e => e.CoReem)
                    .HasName("rma_reem_co_reem");

                entity.ToTable("rma_reem");

                entity.HasIndex(e => e.CoReem)
                    .HasName("ico_reem");

                entity.HasIndex(e => e.DesReem)
                    .HasName("ides_reem");

                entity.Property(e => e.CoReem)
                    .HasColumnName("co_reem")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CantDias).HasColumnName("cant_dias");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesReem)
                    .IsRequired()
                    .HasColumnName("des_reem")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Treemplazo)
                    .IsRequired()
                    .HasColumnName("treemplazo")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<RmaReep>(entity =>
            {
                entity.HasKey(e => e.CoReem)
                    .HasName("rma_reep_co_reem");

                entity.ToTable("rma_reep");

                entity.HasIndex(e => e.CoReem)
                    .HasName("ico_reem");

                entity.HasIndex(e => e.DesReem)
                    .HasName("ides_reem");

                entity.Property(e => e.CoReem)
                    .HasColumnName("co_reem")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesReem)
                    .IsRequired()
                    .HasColumnName("des_reem")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Treemplazo)
                    .IsRequired()
                    .HasColumnName("treemplazo")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<RmaRes>(entity =>
            {
                entity.HasKey(e => e.RmaNum)
                    .HasName("rma_res_rma_num");

                entity.ToTable("rma_res");

                entity.Property(e => e.RmaNum)
                    .HasColumnName("rma_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Fecha)
                    .HasColumnName("fecha")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Seriales).HasColumnName("seriales");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<RmaRevi>(entity =>
            {
                entity.HasKey(e => e.CoRevi)
                    .HasName("rma_revi_co_revi");

                entity.ToTable("rma_revi");

                entity.HasIndex(e => e.CoRevi)
                    .HasName("ico_revi");

                entity.HasIndex(e => e.DesRevi)
                    .HasName("ides_revi");

                entity.Property(e => e.CoRevi)
                    .HasColumnName("co_revi")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesRevi)
                    .IsRequired()
                    .HasColumnName("des_revi")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Trevision)
                    .IsRequired()
                    .HasColumnName("trevision")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Segmento>(entity =>
            {
                entity.HasKey(e => e.CoSeg)
                    .HasName("segmento_co_seg");

                entity.ToTable("segmento");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_796581926")
                    .IsUnique();

                entity.HasIndex(e => e.SegDes)
                    .HasName("iseg_des");

                entity.Property(e => e.CoSeg)
                    .HasColumnName("co_seg")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CCuenta)
                    .IsRequired()
                    .HasColumnName("c_cuenta")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.PCuenta)
                    .IsRequired()
                    .HasColumnName("p_cuenta")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.SegDes)
                    .IsRequired()
                    .HasColumnName("seg_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<SerRma>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("ser_rma");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.DocNumE)
                    .HasName("idoc_num_e");

                entity.HasIndex(e => e.DocNumS)
                    .HasName("idoc_num_s");

                entity.HasIndex(e => e.DocTipE)
                    .HasName("idoc_tip_e");

                entity.HasIndex(e => e.DocTipS)
                    .HasName("idoc_tip_s");

                entity.HasIndex(e => e.Serial)
                    .HasName("iserial");

                entity.HasIndex(e => new { e.CoArt, e.Serial })
                    .HasName("co_art");

                entity.HasIndex(e => new { e.DocTipE, e.DocNumE, e.Serial })
                    .HasName("serial2");

                entity.HasIndex(e => new { e.DocTipS, e.DocNumS, e.Serial })
                    .HasName("serial1");

                entity.Property(e => e.Aux01)
                    .HasColumnName("AUX01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("AUX02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Contador).HasColumnName("contador");

                entity.Property(e => e.DocNumE).HasColumnName("doc_num_e");

                entity.Property(e => e.DocNumS).HasColumnName("doc_num_s");

                entity.Property(e => e.DocTipE)
                    .IsRequired()
                    .HasColumnName("doc_tip_e")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DocTipS)
                    .IsRequired()
                    .HasColumnName("doc_tip_s")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumGara).HasColumnName("num_gara");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Serial)
                    .IsRequired()
                    .HasColumnName("serial")
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Seriales>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("seriales");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.DocNumE)
                    .HasName("idoc_num_e");

                entity.HasIndex(e => e.DocNumS)
                    .HasName("idoc_num_s");

                entity.HasIndex(e => e.DocTipE)
                    .HasName("idoc_tip_e");

                entity.HasIndex(e => e.DocTipS)
                    .HasName("idoc_tip_s");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1333579789")
                    .IsUnique();

                entity.HasIndex(e => e.Serial)
                    .HasName("iserial");

                entity.HasIndex(e => new { e.CoArt, e.Serial })
                    .HasName("co_art");

                entity.Property(e => e.Aux01)
                    .HasColumnName("AUX01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("AUX02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Contador).HasColumnName("contador");

                entity.Property(e => e.DocNumE).HasColumnName("doc_num_e");

                entity.Property(e => e.DocNumS).HasColumnName("doc_num_s");

                entity.Property(e => e.DocTipE)
                    .IsRequired()
                    .HasColumnName("doc_tip_e")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DocTipS)
                    .IsRequired()
                    .HasColumnName("doc_tip_s")
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NumGara).HasColumnName("num_gara");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Serial)
                    .IsRequired()
                    .HasColumnName("serial")
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoAlmaNavigation)
                    .WithMany()
                    .HasForeignKey(d => d.CoAlma)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_seriales_sub_alma");
            });

            modelBuilder.Entity<Spatriv>(entity =>
            {
                entity.HasKey(e => e.CoAtriv);

                entity.ToTable("spatriv");

                entity.Property(e => e.CoAtriv)
                    .HasColumnName("co_atriv")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.AtrivDes)
                    .IsRequired()
                    .HasColumnName("atriv_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Tipo)
                    .HasColumnName("tipo")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Spced>(entity =>
            {
                entity.HasKey(e => e.CoCed)
                    .HasName("ico_ced");

                entity.ToTable("spced");

                entity.HasIndex(e => e.CedDes)
                    .HasName("ced_des");

                entity.HasIndex(e => e.CoSucu)
                    .HasName("ico_sucu");

                entity.HasIndex(e => e.FecEmis)
                    .HasName("ifec_emis");

                entity.Property(e => e.CoCed)
                    .HasColumnName("co_ced")
                    .ValueGeneratedNever();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Cantidad)
                    .HasColumnName("cantidad")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CapMax)
                    .HasColumnName("cap_max")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CedDes)
                    .IsRequired()
                    .HasColumnName("ced_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CoDep)
                    .IsRequired()
                    .HasColumnName("co_dep")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoUni)
                    .IsRequired()
                    .HasColumnName("co_uni")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Dias).HasColumnName("dias");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Estandar).HasColumnName("estandar");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Horas)
                    .HasColumnName("horas")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.PorCos)
                    .HasColumnName("por_cos")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.Spced)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_spced_art");
            });

            modelBuilder.Entity<Spcierre>(entity =>
            {
                entity.HasKey(e => e.EntNum);

                entity.ToTable("spcierre");

                entity.HasIndex(e => e.CieDes)
                    .HasName("icie_des");

                entity.HasIndex(e => e.CoSucu)
                    .HasName("ico_sucu");

                entity.HasIndex(e => e.FecEmis)
                    .HasName("ifec_emis");

                entity.HasIndex(e => e.OdpNum)
                    .HasName("iodp_num");

                entity.Property(e => e.EntNum)
                    .HasColumnName("ent_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.AjuNum).HasColumnName("aju_num");

                entity.Property(e => e.Anulado).HasColumnName("anulado");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CieDes)
                    .IsRequired()
                    .HasColumnName("cie_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSub)
                    .IsRequired()
                    .HasColumnName("co_sub")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Confirma).HasColumnName("confirma");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecConf)
                    .HasColumnName("fec_conf")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Gasadi)
                    .HasColumnName("gasadi")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Moadi)
                    .HasColumnName("moadi")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.OdpNum).HasColumnName("odp_num");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Seriales).HasColumnName("seriales");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.CoSubNavigation)
                    .WithMany(p => p.Spcierre)
                    .HasForeignKey(d => d.CoSub)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_spcierre_sub_alma");

                entity.HasOne(d => d.OdpNumNavigation)
                    .WithMany(p => p.Spcierre)
                    .HasForeignKey(d => d.OdpNum)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_spcierre_spodp");
            });

            modelBuilder.Entity<Spcostest>(entity =>
            {
                entity.HasKey(e => e.CostNum);

                entity.ToTable("spcostest");

                entity.Property(e => e.CostNum)
                    .HasColumnName("cost_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CostDes)
                    .IsRequired()
                    .HasColumnName("cost_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeEmis)
                    .HasColumnName("fe_emis")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FecVig)
                    .HasColumnName("fec_vig")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Spdevalm>(entity =>
            {
                entity.HasKey(e => e.DevNum);

                entity.ToTable("spdevalm");

                entity.HasIndex(e => e.AlmDest)
                    .HasName("ialm_dest");

                entity.HasIndex(e => e.AlmOrig)
                    .HasName("ialm_orig");

                entity.HasIndex(e => e.CoSucu)
                    .HasName("co_sucu");

                entity.HasIndex(e => e.DevNum)
                    .HasName("idev_num");

                entity.HasIndex(e => e.Feccom)
                    .HasName("feccom");

                entity.HasIndex(e => e.Fecha)
                    .HasName("ifecha");

                entity.HasIndex(e => e.Numcom)
                    .HasName("numcom");

                entity.HasIndex(e => e.OdpNum)
                    .HasName("odp_num");

                entity.Property(e => e.DevNum)
                    .HasColumnName("dev_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.AlmDest)
                    .IsRequired()
                    .HasColumnName("alm_dest")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.AlmOrig)
                    .IsRequired()
                    .HasColumnName("alm_orig")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Anulada).HasColumnName("anulada");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Confirma).HasColumnName("confirma");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecConf)
                    .HasColumnName("fec_conf")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Fecha)
                    .HasColumnName("fecha")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Inactivo).HasColumnName("inactivo");

                entity.Property(e => e.MotivoGlo)
                    .IsRequired()
                    .HasColumnName("motivo_glo")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.OdpNum).HasColumnName("odp_num");

                entity.Property(e => e.Reqnfe)
                    .IsRequired()
                    .HasColumnName("reqnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Seriales).HasColumnName("seriales");

                entity.Property(e => e.TrasNum).HasColumnName("tras_num");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Spemple>(entity =>
            {
                entity.HasKey(e => e.CoEmp)
                    .HasName("spemple_co_emp");

                entity.ToTable("spemple");

                entity.HasIndex(e => e.Nombres)
                    .HasName("iemp_des");

                entity.Property(e => e.CoEmp)
                    .HasColumnName("co_emp")
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Nombres)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.SueldoBas)
                    .HasColumnName("sueldo_bas")
                    .HasColumnType("decimal(9, 2)");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Spentre>(entity =>
            {
                entity.HasKey(e => e.EntNum);

                entity.ToTable("spentre");

                entity.Property(e => e.EntNum)
                    .HasColumnName("ent_num")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.AjuNum).HasColumnName("aju_num");

                entity.Property(e => e.Anulado).HasColumnName("anulado");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSub)
                    .IsRequired()
                    .HasColumnName("co_sub")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Confirma).HasColumnName("confirma");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.EntDes)
                    .IsRequired()
                    .HasColumnName("ent_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecConf)
                    .HasColumnName("fec_conf")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.OdpNum).HasColumnName("odp_num");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Seriales).HasColumnName("seriales");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.CoSubNavigation)
                    .WithMany(p => p.Spentre)
                    .HasForeignKey(d => d.CoSub)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_spentre_sub_alma");

                entity.HasOne(d => d.OdpNumNavigation)
                    .WithMany(p => p.Spentre)
                    .HasForeignKey(d => d.OdpNum)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_spentre_spodp");
            });

            modelBuilder.Entity<Spescena>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("spescena");

                entity.HasIndex(e => e.CoSucu)
                    .HasName("co_sucu");

                entity.HasIndex(e => e.EscNum)
                    .HasName("iesc_num");

                entity.HasIndex(e => e.Fecha)
                    .HasName("ifecha");

                entity.Property(e => e.ArtDes)
                    .IsRequired()
                    .HasColumnName("art_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CodCed).HasColumnName("cod_ced");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.EscNum).HasColumnName("esc_num");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Fecha)
                    .HasColumnName("fecha")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Gfabrica)
                    .HasColumnName("gfabrica")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Impnfe)
                    .IsRequired()
                    .HasColumnName("impnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Mobra)
                    .HasColumnName("mobra")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MotivoGlo)
                    .IsRequired()
                    .HasColumnName("motivo_glo")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Mprima)
                    .HasColumnName("mprima")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Porgan)
                    .HasColumnName("porgan")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Totalpro)
                    .HasColumnName("totalpro")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Unidad)
                    .IsRequired()
                    .HasColumnName("unidad")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Spexplosion>(entity =>
            {
                entity.HasKey(e => e.ExpNum);

                entity.ToTable("spexplosion");

                entity.HasIndex(e => e.AlmOrig)
                    .HasName("ialm_orig");

                entity.HasIndex(e => e.CoSucu)
                    .HasName("co_sucu");

                entity.HasIndex(e => e.ExpNum)
                    .HasName("iexp_num");

                entity.HasIndex(e => e.Fecha)
                    .HasName("ifecha");

                entity.Property(e => e.ExpNum)
                    .HasColumnName("exp_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.AlmOrig)
                    .IsRequired()
                    .HasColumnName("alm_orig")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Expnfe)
                    .IsRequired()
                    .HasColumnName("expnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Fecha)
                    .HasColumnName("fecha")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.MotivoGlo)
                    .IsRequired()
                    .HasColumnName("motivo_glo")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Spfalla>(entity =>
            {
                entity.HasKey(e => e.CoFalla)
                    .HasName("spfalla_co_falla");

                entity.ToTable("spfalla");

                entity.HasIndex(e => e.FallaDes)
                    .HasName("falla_des");

                entity.Property(e => e.CoFalla)
                    .HasColumnName("co_falla")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FallaDes)
                    .IsRequired()
                    .HasColumnName("falla_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Spgasfab>(entity =>
            {
                entity.HasKey(e => e.CoGas)
                    .HasName("spgasfab_co_gas");

                entity.ToTable("spgasfab");

                entity.HasIndex(e => e.GasDes)
                    .HasName("Igas_des");

                entity.Property(e => e.CoGas)
                    .HasColumnName("co_gas")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Esdirecto)
                    .HasColumnName("esdirecto")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.GasDes)
                    .IsRequired()
                    .HasColumnName("gas_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Spimplosion>(entity =>
            {
                entity.HasKey(e => e.InpNum);

                entity.ToTable("spimplosion");

                entity.HasIndex(e => e.AlmOrig)
                    .HasName("ialm_orig");

                entity.HasIndex(e => e.CoSucu)
                    .HasName("co_sucu");

                entity.HasIndex(e => e.Fecha)
                    .HasName("ifecha");

                entity.HasIndex(e => e.InpNum)
                    .HasName("iinp_num");

                entity.Property(e => e.InpNum)
                    .HasColumnName("inp_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.AlmOrig)
                    .IsRequired()
                    .HasColumnName("alm_orig")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.ArtDes)
                    .IsRequired()
                    .HasColumnName("art_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CodCed).HasColumnName("cod_ced");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Fecha)
                    .HasColumnName("fecha")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Impnfe)
                    .IsRequired()
                    .HasColumnName("impnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Maxima)
                    .HasColumnName("maxima")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MotivoGlo)
                    .IsRequired()
                    .HasColumnName("motivo_glo")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Unidad)
                    .IsRequired()
                    .HasColumnName("unidad")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Spmaq>(entity =>
            {
                entity.HasKey(e => e.CoMaq)
                    .HasName("spmaq_co_maq");

                entity.ToTable("spmaq");

                entity.HasIndex(e => e.MaqDes)
                    .HasName("imaq_des");

                entity.Property(e => e.CoMaq)
                    .HasColumnName("co_maq")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.MaqDes)
                    .IsRequired()
                    .HasColumnName("maq_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Spmenenc>(entity =>
            {
                entity.HasKey(e => e.MenNum)
                    .HasName("men_num");

                entity.ToTable("spmenenc");

                entity.HasIndex(e => e.DesMen)
                    .HasName("des_men");

                entity.Property(e => e.MenNum)
                    .HasColumnName("men_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesMen)
                    .IsRequired()
                    .HasColumnName("des_men")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Procesado).HasColumnName("procesado");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Spmensual>(entity =>
            {
                entity.HasKey(e => e.CoArt);

                entity.ToTable("spmensual");

                entity.Property(e => e.CoArt)
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Cantidad)
                    .HasColumnName("cantidad")
                    .HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Cantprod)
                    .HasColumnName("cantprod")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CodCed).HasColumnName("cod_ced");

                entity.Property(e => e.Diasinv)
                    .HasColumnName("diasinv")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Diasprod).HasColumnName("diasprod");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Holgura).HasColumnName("holgura");

                entity.Property(e => e.Mesprox)
                    .HasColumnName("mesprox")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Pendpro)
                    .HasColumnName("pendpro")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Periodo)
                    .IsRequired()
                    .HasColumnName("periodo")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Stockact)
                    .HasColumnName("stockact")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Stockop)
                    .HasColumnName("stockop")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Spodp>(entity =>
            {
                entity.HasKey(e => e.OdpNum);

                entity.ToTable("spodp");

                entity.HasIndex(e => e.CoArt)
                    .HasName("co_art");

                entity.HasIndex(e => e.CoCed)
                    .HasName("co_ced");

                entity.HasIndex(e => e.CoSucu)
                    .HasName("co_sucu");

                entity.HasIndex(e => e.OdpNum)
                    .HasName("odp_num");

                entity.Property(e => e.OdpNum)
                    .HasColumnName("odp_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Anulado).HasColumnName("anulado");

                entity.Property(e => e.CaArt)
                    .HasColumnName("ca_art")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoArt)
                    .IsRequired()
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoCed).HasColumnName("co_ced");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Codpcom).HasColumnName("codpcom");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CtEstim)
                    .HasColumnName("ct_estim")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Descrip)
                    .IsRequired()
                    .HasColumnName("descrip")
                    .HasMaxLength(80)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DocOri).HasColumnName("doc_ori");

                entity.Property(e => e.EdoOdp)
                    .IsRequired()
                    .HasColumnName("edo_odp")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("('A')");

                entity.Property(e => e.FeEmis)
                    .HasColumnName("fe_emis")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FeFin)
                    .HasColumnName("fe_fin")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FeInic)
                    .HasColumnName("fe_inic")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.GfCant)
                    .HasColumnName("gf_cant")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MemCant)
                    .HasColumnName("mem_cant")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MenCant)
                    .HasColumnName("men_cant")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MoCant)
                    .HasColumnName("mo_cant")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.MpCant)
                    .HasColumnName("mp_cant")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Nodpcom).HasColumnName("nodpcom");

                entity.Property(e => e.NumMaqblo).HasColumnName("num_maqblo");

                entity.Property(e => e.OiCant)
                    .HasColumnName("oi_cant")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Prioridad)
                    .HasColumnName("prioridad")
                    .HasDefaultValueSql("((3))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TotalUni)
                    .HasColumnName("total_uni")
                    .HasColumnType("decimal(18, 5)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.UniVenta)
                    .IsRequired()
                    .HasColumnName("uni_venta")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoCedNavigation)
                    .WithMany(p => p.Spodp)
                    .HasForeignKey(d => d.CoCed)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_spodp_spced");
            });

            modelBuilder.Entity<Spparmaq>(entity =>
            {
                entity.HasKey(e => e.ParNum);

                entity.ToTable("spparmaq");

                entity.Property(e => e.ParNum)
                    .HasColumnName("par_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoFalla)
                    .IsRequired()
                    .HasColumnName("co_falla")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoMaq)
                    .IsRequired()
                    .HasColumnName("co_maq")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FecFin)
                    .HasColumnName("fec_fin")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecInic)
                    .HasColumnName("fec_inic")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.ParDes)
                    .IsRequired()
                    .HasColumnName("par_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.HasOne(d => d.CoFallaNavigation)
                    .WithMany(p => p.Spparmaq)
                    .HasForeignKey(d => d.CoFalla)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_spparmaq_spfalla");

                entity.HasOne(d => d.CoMaqNavigation)
                    .WithMany(p => p.Spparmaq)
                    .HasForeignKey(d => d.CoMaq)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_spparmaq_spmaq");
            });

            modelBuilder.Entity<Spplan>(entity =>
            {
                entity.HasKey(e => e.CoArt);

                entity.ToTable("spplan");

                entity.Property(e => e.CoArt)
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.D1)
                    .HasColumnName("d1")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.D10)
                    .HasColumnName("d10")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.D11)
                    .HasColumnName("d11")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.D12)
                    .HasColumnName("d12")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.D2)
                    .HasColumnName("d2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.D3)
                    .HasColumnName("d3")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.D4)
                    .HasColumnName("d4")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.D5)
                    .HasColumnName("d5")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.D6)
                    .HasColumnName("d6")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.D7)
                    .HasColumnName("d7")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.D8)
                    .HasColumnName("d8")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.D9)
                    .HasColumnName("d9")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Enero).HasColumnName("enero");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.M1)
                    .HasColumnName("m1")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.M10)
                    .HasColumnName("m10")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.M11)
                    .HasColumnName("m11")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.M12)
                    .HasColumnName("m12")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.M2)
                    .HasColumnName("m2")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.M3)
                    .HasColumnName("m3")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.M4)
                    .HasColumnName("m4")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.M5)
                    .HasColumnName("m5")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.M6)
                    .HasColumnName("m6")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.M7)
                    .HasColumnName("m7")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.M8)
                    .HasColumnName("m8")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.M9)
                    .HasColumnName("m9")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Spplanenc>(entity =>
            {
                entity.HasKey(e => e.PlaNum)
                    .HasName("pla_num");

                entity.ToTable("spplanenc");

                entity.HasIndex(e => e.DesPlan)
                    .HasName("des_plan");

                entity.Property(e => e.PlaNum)
                    .HasColumnName("pla_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesPlan)
                    .IsRequired()
                    .HasColumnName("des_plan")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecEmis)
                    .HasColumnName("fec_emis")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Spreqalm>(entity =>
            {
                entity.HasKey(e => e.ReqNum);

                entity.ToTable("spreqalm");

                entity.HasIndex(e => e.AlmDest)
                    .HasName("ialm_dest");

                entity.HasIndex(e => e.AlmOrig)
                    .HasName("ialm_orig");

                entity.HasIndex(e => e.CoSucu)
                    .HasName("co_sucu");

                entity.HasIndex(e => e.Feccom)
                    .HasName("feccom");

                entity.HasIndex(e => e.Fecha)
                    .HasName("ifecha");

                entity.HasIndex(e => e.Numcom)
                    .HasName("numcom");

                entity.HasIndex(e => e.OdpNum)
                    .HasName("odp_num");

                entity.HasIndex(e => e.ReqNum)
                    .HasName("ireq_num");

                entity.Property(e => e.ReqNum)
                    .HasColumnName("req_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.AlmDest)
                    .IsRequired()
                    .HasColumnName("alm_dest")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.AlmOrig)
                    .IsRequired()
                    .HasColumnName("alm_orig")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Anulada).HasColumnName("anulada");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Confirma).HasColumnName("confirma");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecConf)
                    .HasColumnName("fec_conf")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Fecha)
                    .HasColumnName("fecha")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Inactivo).HasColumnName("inactivo");

                entity.Property(e => e.MotivoGlo)
                    .IsRequired()
                    .HasColumnName("motivo_glo")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.OdpNum).HasColumnName("odp_num");

                entity.Property(e => e.Reqnfe)
                    .IsRequired()
                    .HasColumnName("reqnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Seriales).HasColumnName("seriales");

                entity.Property(e => e.TrasNum).HasColumnName("tras_num");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Sptar>(entity =>
            {
                entity.HasKey(e => e.CoTar)
                    .HasName("sptar_co_tar");

                entity.ToTable("sptar");

                entity.HasIndex(e => e.TarDes)
                    .HasName("itar_des");

                entity.Property(e => e.CoTar)
                    .HasColumnName("co_tar")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Atributo1).HasColumnName("atributo1");

                entity.Property(e => e.Atributo2).HasColumnName("atributo2");

                entity.Property(e => e.Atributo3).HasColumnName("atributo3");

                entity.Property(e => e.Atributo4).HasColumnName("atributo4");

                entity.Property(e => e.Atributo5).HasColumnName("atributo5");

                entity.Property(e => e.Atributo6).HasColumnName("atributo6");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.ManMat)
                    .IsRequired()
                    .HasColumnName("man_mat")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TarDes)
                    .IsRequired()
                    .HasColumnName("tar_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Vatributo1)
                    .IsRequired()
                    .HasColumnName("vatributo1")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Vatributo2)
                    .IsRequired()
                    .HasColumnName("vatributo2")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Vatributo3)
                    .IsRequired()
                    .HasColumnName("vatributo3")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Vatributo4)
                    .IsRequired()
                    .HasColumnName("vatributo4")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Vatributo5)
                    .IsRequired()
                    .HasColumnName("vatributo5")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");

                entity.Property(e => e.Vatributo6)
                    .IsRequired()
                    .HasColumnName("vatributo6")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(' ')");
            });

            modelBuilder.Entity<StAlmac>(entity =>
            {
                entity.HasKey(e => new { e.CoAlma, e.CoArt })
                    .HasName("st_almac_co_stock");

                entity.ToTable("st_almac");

                entity.HasIndex(e => e.CoAlma)
                    .HasName("ico_alma");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1594488759")
                    .IsUnique();

                entity.Property(e => e.CoAlma)
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoArt)
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.SstockAct)
                    .HasColumnName("sstock_act")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.SstockCom)
                    .HasColumnName("sstock_com")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.SstockDes)
                    .HasColumnName("sstock_des")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.SstockLle)
                    .HasColumnName("sstock_lle")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.StockAct)
                    .HasColumnName("stock_act")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.StockCom)
                    .HasColumnName("stock_com")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.StockDes)
                    .HasColumnName("stock_des")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.StockLle)
                    .HasColumnName("stock_lle")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoAlmaNavigation)
                    .WithMany(p => p.StAlmac)
                    .HasForeignKey(d => d.CoAlma)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_st_almac_sub_alma");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.StAlmac)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_st_almac_art");
            });

            modelBuilder.Entity<StLote>(entity =>
            {
                entity.HasKey(e => new { e.CoAlma, e.CoArt, e.NroLote });

                entity.ToTable("st_lote");

                entity.HasIndex(e => e.CoAlma)
                    .HasName("ico_alma");

                entity.HasIndex(e => e.CoArt)
                    .HasName("ico_art");

                entity.HasIndex(e => e.NroLote)
                    .HasName("inro_lote");

                entity.Property(e => e.CoAlma)
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoArt)
                    .HasColumnName("co_art")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NroLote)
                    .HasColumnName("nro_lote")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.SstockAct)
                    .HasColumnName("sstock_act")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.SstockCom)
                    .HasColumnName("sstock_com")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.SstockDes)
                    .HasColumnName("sstock_des")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.SstockLle)
                    .HasColumnName("sstock_lle")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.StockAct)
                    .HasColumnName("stock_act")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.StockCom)
                    .HasColumnName("stock_com")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.StockDes)
                    .HasColumnName("stock_des")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.StockLle)
                    .HasColumnName("stock_lle")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoAlmaNavigation)
                    .WithMany(p => p.StLote)
                    .HasForeignKey(d => d.CoAlma)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_st_lote_sub_alma");

                entity.HasOne(d => d.CoArtNavigation)
                    .WithMany(p => p.StLote)
                    .HasForeignKey(d => d.CoArt)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_st_lote_art");

                entity.HasOne(d => d.Lote)
                    .WithMany(p => p.StLote)
                    .HasForeignKey(d => new { d.CoArt, d.NroLote })
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_st_lote_lote");
            });

            modelBuilder.Entity<SubAlma>(entity =>
            {
                entity.HasKey(e => e.CoSub)
                    .HasName("sub_alma_co_sub");

                entity.ToTable("sub_alma");

                entity.HasIndex(e => e.CoAlma)
                    .HasName("ico_alma");

                entity.HasIndex(e => e.DesSub)
                    .HasName("ides_sub");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_876582211")
                    .IsUnique();

                entity.Property(e => e.CoSub)
                    .HasColumnName("co_sub")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesSub)
                    .IsRequired()
                    .HasColumnName("des_sub")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Materiales).HasColumnName("materiales");

                entity.Property(e => e.Nocompra).HasColumnName("nocompra");

                entity.Property(e => e.Noventa).HasColumnName("noventa");

                entity.Property(e => e.Produccion).HasColumnName("produccion");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoAlmaNavigation)
                    .WithMany(p => p.SubAlma)
                    .HasForeignKey(d => d.CoAlma)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_sub_alma_almacen");
            });

            modelBuilder.Entity<SubLin>(entity =>
            {
                entity.HasKey(e => new { e.CoSubl, e.CoLin })
                    .HasName("sub_lin_co_subl");

                entity.ToTable("sub_lin");

                entity.HasIndex(e => e.CoLin)
                    .HasName("ico_lin");

                entity.HasIndex(e => e.CoSubl)
                    .HasName("ico_subl");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_972582553")
                    .IsUnique();

                entity.HasIndex(e => e.SublDes)
                    .HasName("isubl_des");

                entity.Property(e => e.CoSubl)
                    .HasColumnName("co_subl")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoLin)
                    .HasColumnName("co_lin")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoImun)
                    .IsRequired()
                    .HasColumnName("co_imun")
                    .HasMaxLength(15)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoReten)
                    .IsRequired()
                    .HasColumnName("co_reten")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.ISublDes)
                    .IsRequired()
                    .HasColumnName("i_subl_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Movil).HasColumnName("movil");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.SublDes)
                    .IsRequired()
                    .HasColumnName("subl_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoLinNavigation)
                    .WithMany(p => p.SubLin)
                    .HasForeignKey(d => d.CoLin)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_sub_lin_lin_art");
            });

            modelBuilder.Entity<Sucursales>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("Sucursales");

                entity.Property(e => e.AjuNega).HasColumnName("aju_nega");

                entity.Property(e => e.AjuNegac).HasColumnName("aju_negac");

                entity.Property(e => e.AjuNegm).HasColumnName("aju_negm");

                entity.Property(e => e.AjuNegmc).HasColumnName("aju_negmc");

                entity.Property(e => e.AjuPosa).HasColumnName("aju_posa");

                entity.Property(e => e.AjuPosac).HasColumnName("aju_posac");

                entity.Property(e => e.AjuPosm).HasColumnName("aju_posm");

                entity.Property(e => e.AjuPosmc).HasColumnName("aju_posmc");

                entity.Property(e => e.AjusNum).HasColumnName("ajus_num");

                entity.Property(e => e.AlmaDes)
                    .IsRequired()
                    .HasColumnName("alma_des")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.CbNum).HasColumnName("cb_num");

                entity.Property(e => e.CcxgNum).HasColumnName("ccxg_num");

                entity.Property(e => e.CedNum).HasColumnName("ced_num");

                entity.Property(e => e.CfxgNum).HasColumnName("cfxg_num");

                entity.Property(e => e.ChdvNum).HasColumnName("chdv_num");

                entity.Property(e => e.Chdvcppnum).HasColumnName("chdvcppnum");

                entity.Property(e => e.CieNum).HasColumnName("cie_num");

                entity.Property(e => e.CoAlma)
                    .IsRequired()
                    .HasColumnName("co_alma")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.CompNum).HasColumnName("comp_num");

                entity.Property(e => e.CostNum).HasColumnName("cost_num");

                entity.Property(e => e.CotcNum).HasColumnName("cotc_num");

                entity.Property(e => e.CotpNum).HasColumnName("cotp_num");

                entity.Property(e => e.DepcNum).HasColumnName("depc_num");

                entity.Property(e => e.DevNum).HasColumnName("dev_num");

                entity.Property(e => e.DevcNum).HasColumnName("devc_num");

                entity.Property(e => e.DevpNum).HasColumnName("devp_num");

                entity.Property(e => e.DmcNum).HasColumnName("dmc_num");

                entity.Property(e => e.EmpNum).HasColumnName("emp_num");

                entity.Property(e => e.EntNum).HasColumnName("ent_num");

                entity.Property(e => e.EscNum).HasColumnName("esc_num");

                entity.Property(e => e.ExpNum).HasColumnName("exp_num");

                entity.Property(e => e.FactF1).HasColumnName("fact_f1");

                entity.Property(e => e.FactF2).HasColumnName("fact_f2");

                entity.Property(e => e.FactF3).HasColumnName("fact_f3");

                entity.Property(e => e.FactF4).HasColumnName("fact_f4");

                entity.Property(e => e.FactNum).HasColumnName("fact_num");

                entity.Property(e => e.FactNum2).HasColumnName("fact_num2");

                entity.Property(e => e.FactNum3).HasColumnName("fact_num3");

                entity.Property(e => e.FactNum4).HasColumnName("fact_num4");

                entity.Property(e => e.FactNum5).HasColumnName("fact_num5");

                entity.Property(e => e.FactP1).HasColumnName("fact_p1");

                entity.Property(e => e.FactP2).HasColumnName("fact_p2");

                entity.Property(e => e.FactP3).HasColumnName("fact_p3");

                entity.Property(e => e.FactP4).HasColumnName("fact_p4");

                entity.Property(e => e.FactP5).HasColumnName("fact_p5");

                entity.Property(e => e.FactS1)
                    .IsRequired()
                    .HasColumnName("fact_s1")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FactS2)
                    .IsRequired()
                    .HasColumnName("fact_s2")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FactS3)
                    .IsRequired()
                    .HasColumnName("fact_s3")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FactS4)
                    .IsRequired()
                    .HasColumnName("fact_s4")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FactS5)
                    .IsRequired()
                    .HasColumnName("fact_s5")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime");

                entity.Property(e => e.FisiNum).HasColumnName("fisi_num");

                entity.Property(e => e.GenkNum).HasColumnName("genk_num");

                entity.Property(e => e.GiroNum).HasColumnName("giro_num");

                entity.Property(e => e.Girocppnum).HasColumnName("girocppnum");

                entity.Property(e => e.ImpNum).HasColumnName("imp_num");

                entity.Property(e => e.InpNum).HasColumnName("inp_num");

                entity.Property(e => e.MenNum).HasColumnName("men_num");

                entity.Property(e => e.MovbNum).HasColumnName("movb_num");

                entity.Property(e => e.MovcNum).HasColumnName("movc_num");

                entity.Property(e => e.NcF1).HasColumnName("nc_f1");

                entity.Property(e => e.NcF2).HasColumnName("nc_f2");

                entity.Property(e => e.NcF3).HasColumnName("nc_f3");

                entity.Property(e => e.NcF4).HasColumnName("nc_f4");

                entity.Property(e => e.NcNum).HasColumnName("nc_num");

                entity.Property(e => e.NcNum2).HasColumnName("nc_num2");

                entity.Property(e => e.NcNum3).HasColumnName("nc_num3");

                entity.Property(e => e.NcNum4).HasColumnName("nc_num4");

                entity.Property(e => e.NcNum5).HasColumnName("nc_num5");

                entity.Property(e => e.NcP1).HasColumnName("nc_p1");

                entity.Property(e => e.NcP2).HasColumnName("nc_p2");

                entity.Property(e => e.NcP3).HasColumnName("nc_p3");

                entity.Property(e => e.NcP4).HasColumnName("nc_p4");

                entity.Property(e => e.NcP5).HasColumnName("nc_p5");

                entity.Property(e => e.NcS1)
                    .IsRequired()
                    .HasColumnName("nc_s1")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NcS2)
                    .IsRequired()
                    .HasColumnName("nc_s2")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NcS3)
                    .IsRequired()
                    .HasColumnName("nc_s3")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NcS4)
                    .IsRequired()
                    .HasColumnName("nc_s4")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NcS5)
                    .IsRequired()
                    .HasColumnName("nc_s5")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NccppNum).HasColumnName("nccpp_num");

                entity.Property(e => e.NdF1).HasColumnName("nd_f1");

                entity.Property(e => e.NdF2).HasColumnName("nd_f2");

                entity.Property(e => e.NdF3).HasColumnName("nd_f3");

                entity.Property(e => e.NdF4).HasColumnName("nd_f4");

                entity.Property(e => e.NdNum).HasColumnName("nd_num");

                entity.Property(e => e.NdNum2).HasColumnName("nd_num2");

                entity.Property(e => e.NdNum3).HasColumnName("nd_num3");

                entity.Property(e => e.NdNum4).HasColumnName("nd_num4");

                entity.Property(e => e.NdNum5).HasColumnName("nd_num5");

                entity.Property(e => e.NdP1).HasColumnName("nd_p1");

                entity.Property(e => e.NdP2).HasColumnName("nd_p2");

                entity.Property(e => e.NdP3).HasColumnName("nd_p3");

                entity.Property(e => e.NdP4).HasColumnName("nd_p4");

                entity.Property(e => e.NdP5).HasColumnName("nd_p5");

                entity.Property(e => e.NdS1)
                    .IsRequired()
                    .HasColumnName("nd_s1")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NdS2)
                    .IsRequired()
                    .HasColumnName("nd_s2")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NdS3)
                    .IsRequired()
                    .HasColumnName("nd_s3")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NdS4)
                    .IsRequired()
                    .HasColumnName("nd_s4")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NdS5)
                    .IsRequired()
                    .HasColumnName("nd_s5")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NdcppNum).HasColumnName("ndcpp_num");

                entity.Property(e => e.NddNum).HasColumnName("ndd_num");

                entity.Property(e => e.NdeF1).HasColumnName("nde_f1");

                entity.Property(e => e.NdeF2).HasColumnName("nde_f2");

                entity.Property(e => e.NdeF3).HasColumnName("nde_f3");

                entity.Property(e => e.NdeF4).HasColumnName("nde_f4");

                entity.Property(e => e.NdeNum).HasColumnName("nde_num");

                entity.Property(e => e.NdeNum2).HasColumnName("nde_num2");

                entity.Property(e => e.NdeNum3).HasColumnName("nde_num3");

                entity.Property(e => e.NdeNum4).HasColumnName("nde_num4");

                entity.Property(e => e.NdeNum5).HasColumnName("nde_num5");

                entity.Property(e => e.NdeP1).HasColumnName("nde_p1");

                entity.Property(e => e.NdeP2).HasColumnName("nde_p2");

                entity.Property(e => e.NdeP3).HasColumnName("nde_p3");

                entity.Property(e => e.NdeP4).HasColumnName("nde_p4");

                entity.Property(e => e.NdeP5).HasColumnName("nde_p5");

                entity.Property(e => e.NdeS1)
                    .IsRequired()
                    .HasColumnName("nde_s1")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NdeS2)
                    .IsRequired()
                    .HasColumnName("nde_s2")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NdeS3)
                    .IsRequired()
                    .HasColumnName("nde_s3")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NdeS4)
                    .IsRequired()
                    .HasColumnName("nde_s4")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NdeS5)
                    .IsRequired()
                    .HasColumnName("nde_s5")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NdrNum).HasColumnName("ndr_num");

                entity.Property(e => e.NroFact).HasColumnName("nro_fact");

                entity.Property(e => e.NumFacFin).HasColumnName("num_fac_fin");

                entity.Property(e => e.NumFacIni).HasColumnName("num_fac_ini");

                entity.Property(e => e.NumKit).HasColumnName("num_kit");

                entity.Property(e => e.OdpNum).HasColumnName("odp_num");

                entity.Property(e => e.OrdNum).HasColumnName("ord_num");

                entity.Property(e => e.OrdpNum).HasColumnName("ordp_num");

                entity.Property(e => e.ParNum).HasColumnName("par_num");

                entity.Property(e => e.PedNum).HasColumnName("ped_num");

                entity.Property(e => e.PgNum).HasColumnName("pg_num");

                entity.Property(e => e.PlaNum).HasColumnName("pla_num");

                entity.Property(e => e.PlcNum).HasColumnName("plc_num");

                entity.Property(e => e.PlvNum).HasColumnName("plv_num");

                entity.Property(e => e.PostNum).HasColumnName("post_num");

                entity.Property(e => e.Postcppnum).HasColumnName("postcppnum");

                entity.Property(e => e.Pventa).HasColumnName("pventa");

                entity.Property(e => e.ReqNum).HasColumnName("req_num");

                entity.Property(e => e.RetenNum).HasColumnName("reten_num");

                entity.Property(e => e.Retencppnum).HasColumnName("retencppnum");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RmaCli).HasColumnName("rma_cli");

                entity.Property(e => e.RmaEntc).HasColumnName("rma_entc");

                entity.Property(e => e.RmaEntp).HasColumnName("rma_entp");

                entity.Property(e => e.RmaProv).HasColumnName("rma_prov");

                entity.Property(e => e.RmaRegs).HasColumnName("rma_regs");

                entity.Property(e => e.Rowguid).HasColumnName("rowguid");

                entity.Property(e => e.Serie2).HasColumnName("serie2");

                entity.Property(e => e.Serie3).HasColumnName("serie3");

                entity.Property(e => e.Serie4).HasColumnName("serie4");

                entity.Property(e => e.Serie5).HasColumnName("serie5");

                entity.Property(e => e.Tabislr).HasColumnName("tabislr");

                entity.Property(e => e.TaxNum).HasColumnName("tax_num");

                entity.Property(e => e.TrasNum).HasColumnName("tras_num");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Turnosic).HasColumnName("turnosic");
            });

            modelBuilder.Entity<Syncro>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Syncro1).HasColumnName("Syncro");
            });

            modelBuilder.Entity<TabEnc>(entity =>
            {
                entity.HasKey(e => e.Fecha)
                    .HasName("tab_enc_fecha");

                entity.ToTable("tab_enc");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1706489158")
                    .IsUnique();

                entity.Property(e => e.Fecha)
                    .HasColumnName("fecha")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Compras).HasColumnName("compras");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Tasa)
                    .HasColumnName("tasa")
                    .HasColumnType("decimal(10, 3)")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Tasa3)
                    .HasColumnName("tasa3")
                    .HasColumnType("decimal(10, 3)");

                entity.Property(e => e.Tasa4)
                    .HasColumnName("tasa4")
                    .HasColumnType("decimal(10, 3)");

                entity.Property(e => e.Tasa5)
                    .HasColumnName("tasa5")
                    .HasColumnType("decimal(10, 3)");

                entity.Property(e => e.Tasag10)
                    .HasColumnName("tasag10")
                    .HasColumnType("decimal(10, 3)");

                entity.Property(e => e.Tasag20)
                    .HasColumnName("tasag20")
                    .HasColumnType("decimal(10, 3)");

                entity.Property(e => e.TipoImp).HasColumnName("tipo_imp");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<TabIslr>(entity =>
            {
                entity.HasKey(e => e.CoTab);

                entity.ToTable("tab_islr");

                entity.HasIndex(e => e.TabDes)
                    .HasName("tab_des");

                entity.Property(e => e.CoTab)
                    .HasColumnName("co_tab")
                    .ValueGeneratedNever();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.RangoDe).HasColumnName("rango_de");

                entity.Property(e => e.RangoHa).HasColumnName("rango_ha");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TabDes)
                    .IsRequired()
                    .HasColumnName("tab_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TipoPer)
                    .IsRequired()
                    .HasColumnName("tipo_per")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Tabulado>(entity =>
            {
                entity.HasKey(e => e.Tipo)
                    .HasName("tabulado_tipo");

                entity.ToTable("tabulado");

                entity.HasIndex(e => e.Descripcio)
                    .HasName("idescrip");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1651536967")
                    .IsUnique();

                entity.Property(e => e.Tipo)
                    .HasColumnName("tipo")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Descripcio)
                    .IsRequired()
                    .HasColumnName("descripcio")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PorcComp)
                    .HasColumnName("porc_comp")
                    .HasColumnType("decimal(10, 3)");

                entity.Property(e => e.PorcCxs)
                    .HasColumnName("porc_cxs")
                    .HasColumnType("decimal(10, 3)");

                entity.Property(e => e.PorcOtro)
                    .HasColumnName("porc_otro")
                    .HasColumnType("decimal(10, 3)");

                entity.Property(e => e.PorcVent)
                    .HasColumnName("porc_vent")
                    .HasColumnType("decimal(10, 3)");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<TarjCre>(entity =>
            {
                entity.HasKey(e => e.CoTar)
                    .HasName("tarj_cre_co_tar");

                entity.ToTable("tarj_cre");

                entity.HasIndex(e => e.DesTar)
                    .HasName("ides_tar");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1068582895")
                    .IsUnique();

                entity.Property(e => e.CoTar)
                    .HasColumnName("co_tar")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comision)
                    .HasColumnName("comision")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.DesTar)
                    .IsRequired()
                    .HasColumnName("des_tar")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Impuesto)
                    .HasColumnName("impuesto")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Recargo)
                    .HasColumnName("recargo")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.RowId)
                    .IsRequired()
                    .HasColumnName("row_id")
                    .IsRowVersion()
                    .IsConcurrencyToken();

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Telefono)
                    .IsRequired()
                    .HasColumnName("telefono")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Tasas>(entity =>
            {
                entity.HasKey(e => new { e.CoMone, e.Fecha })
                    .HasName("tasas_co_tasas");

                entity.ToTable("tasas");

                entity.HasIndex(e => e.CoMone)
                    .HasName("co_mone");

                entity.HasIndex(e => e.Fecha)
                    .HasName("fecha");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1834489614")
                    .IsUnique();

                entity.Property(e => e.CoMone)
                    .HasColumnName("co_mone")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Fecha)
                    .HasColumnName("fecha")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TasaC)
                    .HasColumnName("tasa_c")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TasaV)
                    .HasColumnName("tasa_v")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoMoneNavigation)
                    .WithMany(p => p.Tasas)
                    .HasForeignKey(d => d.CoMone)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tasas_moneda");
            });

            modelBuilder.Entity<Tax>(entity =>
            {
                entity.HasIndex(e => e.TaxDes)
                    .HasName("Tax_Des");

                entity.Property(e => e.TaxId)
                    .HasColumnName("Tax_id")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("CAMPO1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("CAMPO2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("CAMPO3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("CAMPO4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("Dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Entidad)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("FE_US_IN")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Limite).HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Porc1).HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Porc2).HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid).HasDefaultValueSql("(newid())");

                entity.Property(e => e.Tasa1).HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasa2).HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Tasa3).HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TaxDes)
                    .IsRequired()
                    .HasColumnName("Tax_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<TaxEnc>(entity =>
            {
                entity.HasKey(e => e.TaxNum)
                    .HasName("Tax_Num");

                entity.ToTable("Tax_enc");

                entity.HasIndex(e => e.Fecha)
                    .HasName("Fecha");

                entity.HasIndex(e => e.TaxGDes)
                    .HasName("TaxG_des");

                entity.HasIndex(e => e.TaxGId)
                    .HasName("TaxG_id");

                entity.HasIndex(e => new { e.TaxGId, e.Fecha })
                    .HasName("Tax_Enc_Fecha")
                    .IsUnique();

                entity.Property(e => e.TaxNum)
                    .HasColumnName("Tax_Num")
                    .ValueGeneratedNever();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("Dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("FE_US_IN")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Fecha)
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Formula).HasColumnName("formula");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid).HasDefaultValueSql("(newid())");

                entity.Property(e => e.T1Total)
                    .HasColumnName("T1_Total")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.T2Total)
                    .HasColumnName("T2_Total")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.T3Total)
                    .HasColumnName("T3_Total")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.TaxGDes)
                    .IsRequired()
                    .HasColumnName("TaxG_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.TaxGId)
                    .IsRequired()
                    .HasColumnName("TaxG_id")
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Tecnico>(entity =>
            {
                entity.HasKey(e => e.CoTec)
                    .HasName("tecnico_co_tec");

                entity.ToTable("tecnico");

                entity.HasIndex(e => e.CoTec)
                    .HasName("ico_tec");

                entity.HasIndex(e => e.TecDes)
                    .HasName("ides_tec");

                entity.Property(e => e.CoTec)
                    .HasColumnName("co_tec")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.EspecTec)
                    .IsRequired()
                    .HasColumnName("espec_tec")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TecDes)
                    .IsRequired()
                    .HasColumnName("tec_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Temporal>(entity =>
            {
                entity.HasNoKey();

                entity.ToTable("TEMPORAL");

                entity.Property(e => e.Campo1)
                    .HasColumnName("CAMPO1")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.Campo2)
                    .HasColumnName("CAMPO2")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<TipoAju>(entity =>
            {
                entity.HasKey(e => e.CoTipo)
                    .HasName("tipo_aju_co_tipo");

                entity.ToTable("tipo_aju");

                entity.HasIndex(e => e.DesTipo)
                    .HasName("ides_tipo");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1116583066")
                    .IsUnique();

                entity.Property(e => e.CoTipo)
                    .HasColumnName("co_tipo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesTipo)
                    .IsRequired()
                    .HasColumnName("des_tipo")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TipoTrans)
                    .IsRequired()
                    .HasColumnName("tipo_trans")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<TipoCli>(entity =>
            {
                entity.HasKey(e => e.TipCli)
                    .HasName("tipo_cli_tip_cli");

                entity.ToTable("tipo_cli");

                entity.HasIndex(e => e.DesTipo)
                    .HasName("ides_tipo");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1212583408")
                    .IsUnique();

                entity.Property(e => e.TipCli)
                    .HasColumnName("tip_cli")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesTipo)
                    .IsRequired()
                    .HasColumnName("des_tipo")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.PrecioA)
                    .IsRequired()
                    .HasColumnName("precio_a")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.RowId)
                    .IsRequired()
                    .HasColumnName("row_id")
                    .IsRowVersion()
                    .IsConcurrencyToken();

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<TipoPro>(entity =>
            {
                entity.HasKey(e => e.TipPro)
                    .HasName("tipo_pro_tip_pro");

                entity.ToTable("tipo_pro");

                entity.HasIndex(e => e.DesTipo)
                    .HasName("ides_tipo");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1308583750")
                    .IsUnique();

                entity.Property(e => e.TipPro)
                    .HasColumnName("tip_pro")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesTipo)
                    .IsRequired()
                    .HasColumnName("des_tipo")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Transpor>(entity =>
            {
                entity.HasKey(e => e.CoTran)
                    .HasName("transpor_co_tran");

                entity.ToTable("transpor");

                entity.HasIndex(e => e.DesTran)
                    .HasName("ides_tran");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1388584035")
                    .IsUnique();

                entity.Property(e => e.CoTran)
                    .HasColumnName("co_tran")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesTran)
                    .IsRequired()
                    .HasColumnName("des_tran")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.RespTra)
                    .IsRequired()
                    .HasColumnName("resp_tra")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<TrasAlm>(entity =>
            {
                entity.HasKey(e => e.TrasNum)
                    .HasName("tras_alm_tras_num");

                entity.ToTable("tras_alm");

                entity.HasIndex(e => e.AlmDest)
                    .HasName("ialm_dest");

                entity.HasIndex(e => e.AlmOrig)
                    .HasName("ialm_orig");

                entity.HasIndex(e => e.Fecha)
                    .HasName("ifecha");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1468584320")
                    .IsUnique();

                entity.Property(e => e.TrasNum)
                    .HasColumnName("tras_num")
                    .ValueGeneratedNever();

                entity.Property(e => e.AlmDest)
                    .IsRequired()
                    .HasColumnName("alm_dest")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.AlmOrig)
                    .IsRequired()
                    .HasColumnName("alm_orig")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Anulada).HasColumnName("anulada");

                entity.Property(e => e.Aux01)
                    .HasColumnName("aux01")
                    .HasColumnType("decimal(18, 5)");

                entity.Property(e => e.Aux02)
                    .IsRequired()
                    .HasColumnName("aux02")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comentario)
                    .IsRequired()
                    .HasColumnName("comentario")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Confirma).HasColumnName("confirma");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecConf)
                    .HasColumnName("fec_conf")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Feccom)
                    .HasColumnName("feccom")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Fecha)
                    .HasColumnName("fecha")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Inactivo).HasColumnName("inactivo");

                entity.Property(e => e.MotivoGlo)
                    .IsRequired()
                    .HasColumnName("motivo_glo")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Numcom).HasColumnName("numcom");

                entity.Property(e => e.Produccion).HasColumnName("produccion");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Seriales).HasColumnName("seriales");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.AlmDestNavigation)
                    .WithMany(p => p.TrasAlmAlmDestNavigation)
                    .HasForeignKey(d => d.AlmDest)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tras_alm_sub_alma1");

                entity.HasOne(d => d.AlmOrigNavigation)
                    .WithMany(p => p.TrasAlmAlmOrigNavigation)
                    .HasForeignKey(d => d.AlmOrig)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_tras_alm_sub_alma");
            });

            modelBuilder.Entity<Turnos>(entity =>
            {
                entity.HasKey(e => e.CoTurno);

                entity.ToTable("turnos");

                entity.HasIndex(e => e.DesTurno)
                    .HasName("IX_turnos");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_46454545454");

                entity.Property(e => e.CoTurno)
                    .HasColumnName("co_turno")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.AmpmFin)
                    .IsRequired()
                    .HasColumnName("ampm_fin")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.AmpmIni)
                    .IsRequired()
                    .HasColumnName("ampm_ini")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesTurno)
                    .IsRequired()
                    .HasColumnName("des_turno")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.HoraFin)
                    .HasColumnName("hora_fin")
                    .HasColumnType("decimal(10, 0)");

                entity.Property(e => e.HoraIni)
                    .HasColumnName("hora_ini")
                    .HasColumnType("decimal(10, 0)");

                entity.Property(e => e.MinuFin)
                    .HasColumnName("minu_fin")
                    .HasColumnType("decimal(10, 0)");

                entity.Property(e => e.MinuIni)
                    .HasColumnName("minu_ini")
                    .HasColumnType("decimal(10, 0)");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Turnosic>(entity =>
            {
                entity.HasKey(e => e.NumTurno);

                entity.ToTable("turnosic");

                entity.HasIndex(e => e.CoTurno)
                    .HasName("co_turno");

                entity.HasIndex(e => e.CodCaja)
                    .HasName("cod_caja");

                entity.HasIndex(e => e.Fecha)
                    .HasName("IX_turnosic");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_454545454");

                entity.Property(e => e.NumTurno)
                    .HasColumnName("num_turno")
                    .ValueGeneratedNever();

                entity.Property(e => e.AmpmFin)
                    .IsRequired()
                    .HasColumnName("ampm_fin")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.AmpmIni)
                    .IsRequired()
                    .HasColumnName("ampm_ini")
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoTurno)
                    .IsRequired()
                    .HasColumnName("co_turno")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CodCaja)
                    .IsRequired()
                    .HasColumnName("cod_caja")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Fecha)
                    .HasColumnName("fecha")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.Finaliza)
                    .HasColumnName("finaliza")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.HoraFin)
                    .HasColumnName("hora_fin")
                    .HasColumnType("decimal(10, 0)");

                entity.Property(e => e.HoraIni)
                    .HasColumnName("hora_ini")
                    .HasColumnType("decimal(10, 0)");

                entity.Property(e => e.Inicio)
                    .HasColumnName("inicio")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.MinuFin)
                    .HasColumnName("minu_fin")
                    .HasColumnType("decimal(10, 0)");

                entity.Property(e => e.MinuIni)
                    .HasColumnName("minu_ini")
                    .HasColumnType("decimal(10, 0)");

                entity.Property(e => e.Restringe).HasColumnName("restringe");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Saldo).HasColumnName("saldo");

                entity.Property(e => e.Status)
                    .HasColumnName("status")
                    .HasColumnType("decimal(10, 0)");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.UserCaj)
                    .IsRequired()
                    .HasColumnName("user_caj")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.UserSup)
                    .IsRequired()
                    .HasColumnName("user_sup")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.HasOne(d => d.CoSucuNavigation)
                    .WithMany(p => p.TurnosicNavigation)
                    .HasForeignKey(d => d.CoSucu)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_turnosic_almacen");

                entity.HasOne(d => d.CoTurnoNavigation)
                    .WithMany(p => p.Turnosic)
                    .HasForeignKey(d => d.CoTurno)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_turnosic_turnos");
            });

            modelBuilder.Entity<UniTrib>(entity =>
            {
                entity.HasKey(e => e.UniFec)
                    .HasName("PK_uni_trib_1");

                entity.ToTable("uni_trib");

                entity.Property(e => e.UniFec)
                    .HasColumnName("uni_fec")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.UniFecp)
                    .HasColumnName("uni_fecp")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.UniGact)
                    .IsRequired()
                    .HasColumnName("uni_gact")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Valor)
                    .HasColumnName("valor")
                    .HasColumnType("decimal(18, 5)");
            });

            modelBuilder.Entity<Unidades>(entity =>
            {
                entity.HasKey(e => e.CoUni)
                    .HasName("unidades_co_uni");

                entity.ToTable("unidades");

                entity.HasIndex(e => e.DesUni)
                    .HasName("ides_uni");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1548584605")
                    .IsUnique();

                entity.Property(e => e.CoUni)
                    .HasColumnName("co_uni")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DesUni)
                    .IsRequired()
                    .HasColumnName("des_uni")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.RowId)
                    .IsRequired()
                    .HasColumnName("row_id")
                    .IsRowVersion()
                    .IsConcurrencyToken();

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Vendedor>(entity =>
            {
                entity.HasKey(e => e.CoVen)
                    .HasName("vendedor_co_ven");

                entity.ToTable("vendedor");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1628584890")
                    .IsUnique();

                entity.HasIndex(e => e.VenDes)
                    .HasName("iven_des");

                entity.Property(e => e.CoVen)
                    .HasColumnName("co_ven")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo5)
                    .IsRequired()
                    .HasColumnName("campo5")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo6)
                    .IsRequired()
                    .HasColumnName("campo6")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo7)
                    .IsRequired()
                    .HasColumnName("campo7")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo8)
                    .IsRequired()
                    .HasColumnName("campo8")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Cedula)
                    .IsRequired()
                    .HasColumnName("cedula")
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CliUltVe)
                    .IsRequired()
                    .HasColumnName("cli_ult_ve")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comen)
                    .IsRequired()
                    .HasColumnName("comen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Comision)
                    .HasColumnName("comision")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Comisionv)
                    .HasColumnName("comisionv")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Condic).HasColumnName("condic");

                entity.Property(e => e.CtaContab)
                    .IsRequired()
                    .HasColumnName("cta_contab")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Direc1)
                    .IsRequired()
                    .HasColumnName("direc1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Direc2)
                    .IsRequired()
                    .HasColumnName("direc2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasColumnName("email")
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FacUltVe).HasColumnName("fac_ult_ve");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FecUltVe)
                    .HasColumnName("fec_ult_ve")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FechaReg)
                    .HasColumnName("fecha_reg")
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("(CONVERT([varchar](10),getdate(),(104)))");

                entity.Property(e => e.FunCob).HasColumnName("fun_cob");

                entity.Property(e => e.FunVen).HasColumnName("fun_ven");

                entity.Property(e => e.Login)
                    .IsRequired()
                    .HasColumnName("login")
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.NetUltVe)
                    .HasColumnName("net_ult_ve")
                    .HasColumnType("decimal(18, 2)");

                entity.Property(e => e.Password)
                    .IsRequired()
                    .HasColumnName("password")
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.PswM)
                    .IsRequired()
                    .HasColumnName("PSW_M")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Telefonos)
                    .IsRequired()
                    .HasColumnName("telefonos")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Tipo)
                    .IsRequired()
                    .HasColumnName("tipo")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.VenDes)
                    .IsRequired()
                    .HasColumnName("ven_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");
            });

            modelBuilder.Entity<Zona>(entity =>
            {
                entity.HasKey(e => e.CoZon)
                    .HasName("zona_co_zon");

                entity.ToTable("zona");

                entity.HasIndex(e => e.Rowguid)
                    .HasName("index_1708585175")
                    .IsUnique();

                entity.HasIndex(e => e.ZonDes)
                    .HasName("izon_des");

                entity.Property(e => e.CoZon)
                    .HasColumnName("co_zon")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Campo1)
                    .IsRequired()
                    .HasColumnName("campo1")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo2)
                    .IsRequired()
                    .HasColumnName("campo2")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo3)
                    .IsRequired()
                    .HasColumnName("campo3")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Campo4)
                    .IsRequired()
                    .HasColumnName("campo4")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoSucu)
                    .IsRequired()
                    .HasColumnName("co_sucu")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsEl)
                    .IsRequired()
                    .HasColumnName("co_us_el")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsIn)
                    .IsRequired()
                    .HasColumnName("co_us_in")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.CoUsMo)
                    .IsRequired()
                    .HasColumnName("co_us_mo")
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.DisCen)
                    .IsRequired()
                    .HasColumnName("dis_cen")
                    .HasColumnType("text")
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.FeUsEl)
                    .HasColumnName("fe_us_el")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsIn)
                    .HasColumnName("fe_us_in")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.FeUsMo)
                    .HasColumnName("fe_us_mo")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(dateadd(millisecond, -datepart(millisecond,getdate()),getdate()))");

                entity.Property(e => e.Revisado)
                    .IsRequired()
                    .HasColumnName("revisado")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.Rowguid)
                    .HasColumnName("rowguid")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.Trasnfe)
                    .IsRequired()
                    .HasColumnName("trasnfe")
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength()
                    .HasDefaultValueSql("(space((1)))");

                entity.Property(e => e.ZonDes)
                    .IsRequired()
                    .HasColumnName("zon_des")
                    .HasMaxLength(60)
                    .IsUnicode(false)
                    .HasDefaultValueSql("(space((1)))");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
